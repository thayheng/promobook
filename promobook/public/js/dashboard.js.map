{"version":3,"sources":["webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./node_modules/moment/locale sync select2[\\/\\\\]dist[\\/\\\\]js[\\/\\\\]i18n","webpack:///(webpack)/buildin/module.js","webpack:///./resources/assets/backend/js/dashboard.js","webpack:///./node_modules/moment/moment.js"],"names":["module","exports","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","i","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","key","convert","Converter","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","undefined","length","round","this","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","value","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","type","result","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","index","svalues","window","id","chartjsColor","helpers","noop","uid","isNullOrUndef","isArray","Object","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","apply","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","data","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","enumerable","method","base","res","object","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","ticking","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","indexScale","valueScale","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","getLabelForIndex","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","__webpack_require__","webpackEmptyContext","req","code","webpackPolyfill","deprecate","paths","children","Dashboard","chartElement","smsLabel","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointBorderWidth","smsValue","attendanceLabel","presentData","pointRadius","pointHoverRadius","absentData","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","number","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","isFunction","Function","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","monthStr","dayStr","hourStr","minuteStr","secondStr","parsedArray","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS"],"mappings":"uHAO4DA,EAAAC,QAG3D,SAAAC,GAA2B,aAE5BA,OAAAC,eAAA,WAAAD,EAAA,QAAAA,EAIA,IAAAE,EAAA,CACAC,UACAC,UACAC,UACAC,WACAC,cACAC,UACAC,UACAC,QAuLA,SAAAC,GACA,OAAAC,EAAAH,EAAAE,KAtLAE,UACAC,QA8NA,SAAAC,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAGA,WAAAG,EAGA,QAOA,CAAAF,EADA,GAFAC,IADAC,GAAA,IACA,EAAAA,EAAA,EAAAA,IAEAA,EAAAD,GACA,KAFAC,EAAAD,GAAA,EAEA,MA7OAE,QAgPA,SAAAR,GACA,OAAAN,EAAAQ,EAAAF,KAhPAS,SAmPA,SAAAT,GACA,OAAAL,EAAAO,EAAAF,KAnPAU,YAsPA,SAAAV,GACA,OAAAJ,EAAAM,EAAAF,KArPAW,UACAC,QAoRA,SAAAC,GACA,IAGAC,EAAAP,EAHAF,EAAAQ,EAAA,GACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OAQA,OAJAC,EAAAR,EAAAS,EAIA,CAAAV,EAAA,KAFAS,GADAA,IAFAP,GAAA,EAAAD,GAAAS,IAEA,EAAAR,EAAA,EAAAA,IACA,GAEA,KADAA,GAAA,KA7RAS,QAiSA,SAAAhB,GACA,OAAAN,EAAAiB,EAAAX,KAjSAiB,SAoSA,SAAAjB,GACA,OAAAL,EAAAgB,EAAAX,KApSAkB,YAuSA,SAAAlB,GACA,OAAAJ,EAAAe,EAAAX,KAtSAmB,UACAC,QA4UA,SAAApB,GACA,OAAAR,EAAA2B,EAAAnB,KA5UAqB,QA+UA,SAAArB,GACA,OAAAP,EAAA0B,EAAAnB,KA/UAsB,SAkVA,SAAAtB,GACA,OAAAL,EAAAwB,EAAAnB,KAlVAuB,YAqVA,SAAAvB,GACA,OAAAJ,EAAAuB,EAAAnB,KApVAwB,WACAC,SAmWA,SAAAzB,GACA,OAAAR,EAAAgC,EAAAxB,KAnWA0B,SAsWA,SAAA1B,GACA,OAAAP,EAAA+B,EAAAxB,KAtWA2B,SAyWA,SAAA3B,GACA,OAAAN,EAAA8B,EAAAxB,KAzWA4B,aA4WA,SAAA5B,GACA,OAAAJ,EAAA4B,EAAAxB,KA3WA6B,cACAC,YAkeA,SAAA9B,GACA,OAAAR,EAAAqC,EAAA7B,KAleA+B,YAqeA,SAAA/B,GACA,OAAAP,EAAAoC,EAAA7B,KAreAgC,YAweA,SAAAhC,GACA,OAAAN,EAAAmC,EAAA7B,KAxeAiC,aA2eA,SAAAjC,GACA,OAAAL,EAAAkC,EAAA7B,KA3eAkC,YA8eA,SAAAlC,GACA,OAAAF,EAAA+B,EAAA7B,KA9eAmC,YAifA,SAAAnC,GACA,OAAAH,EAAAgC,EAAA7B,KAhfAoC,UACAC,UACAC,QAqZA,SAAAtC,GACA,OAAAC,EAAAoC,EAAArC,KApZAuC,UACAC,UACAvC,UAEAwC,UACAC,QAscA,SAAA1C,GACA,OAAAuC,EAAAE,EAAAzC,KAtcA2C,QAycA,SAAA3C,GACA,OAAAwC,EAAAC,EAAAzC,MAtcA,SAAAR,EAAAoD,GACA,IAMAvC,EAAAE,EANAsC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EA0BA,OAvBAE,GAAAF,EACA3C,EAAA,EACAwC,GAAAK,EACA7C,GAAAyC,EAAAC,GAAAI,EACAL,GAAAI,EACA7C,EAAA,GAAA0C,EAAAF,GAAAM,EACAJ,GAAAG,IACA7C,EAAA,GAAAwC,EAAAC,GAAAK,IAEA9C,EAAA4C,KAAAD,IAAA,GAAA3C,EAAA,MAEA,IACAA,GAAA,KAEAE,GAAAyC,EAAAE,GAAA,EASA,CAAA7C,EAAA,KAPA6C,GAAAF,EACA,EACAzC,GAAA,GACA4C,GAAAD,EAAAF,GAEAG,GAAA,EAAAD,EAAAF,IAEA,IAAAzC,GAGA,SAAAd,EAAAmD,GACA,IAMAvC,EAAAC,EANAuC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EAwBA,OApBA1C,EADA,GAAA4C,EACA,EAEAC,EAAAD,EAAA,OAEAA,GAAAF,EACA3C,EAAA,EACAwC,GAAAK,EACA7C,GAAAyC,EAAAC,GAAAI,EACAL,GAAAI,EACA7C,EAAA,GAAA0C,EAAAF,GAAAM,EACAJ,GAAAG,IACA7C,EAAA,GAAAwC,EAAAC,GAAAK,IAEA9C,EAAA4C,KAAAD,IAAA,GAAA3C,EAAA,MAEA,IACAA,GAAA,KAIA,CAAAA,EAAAC,EAFA4C,EAAA,YAKA,SAAAxD,EAAAkD,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAvC,EAAAb,EAAAoD,GAAA,GACAQ,EAAA,MAAAH,KAAAD,IAAAH,EAAAI,KAAAD,IAAAF,EAAAC,IACAA,EAAA,QAAAE,KAAAC,IAAAL,EAAAI,KAAAC,IAAAJ,EAAAC,IAEA,OAAA1C,EAAA,IAAA+C,EAAA,IAAAL,GAGA,SAAApD,EAAAiD,GACA,IAGAS,EAHAR,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAOA,OAJAS,EAAAJ,KAAAD,IAAA,EAAAH,EAAA,EAAAC,EAAA,EAAAC,GAIA,OAHA,EAAAF,EAAAQ,IAAA,EAAAA,IAAA,GAGA,MAFA,EAAAP,EAAAO,IAAA,EAAAA,IAAA,GAEA,MADA,EAAAN,EAAAM,IAAA,EAAAA,IAAA,GACA,IAAAA,GAGA,SAAAzD,EAAAgD,GACA,OAAAU,EAAAC,KAAAC,UAAAZ,IAGA,SAAA/C,EAAA+C,GACA,IAAAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAGAC,IAAA,OAAAI,KAAAQ,KAAAZ,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAG,KAAAQ,KAAAX,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAE,KAAAQ,KAAAV,EAAA,iBAAAA,EAAA,MAEA,IAAAW,EAAA,MAAAb,EAAA,MAAAC,EAAA,MAAAC,EACAY,EAAA,MAAAd,EAAA,MAAAC,EAAA,MAAAC,EACAa,EAAA,MAAAf,EAAA,MAAAC,EAAA,MAAAC,EAEA,WAAAW,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAA9D,EAAA8C,GACA,IAAAiB,EAAAhE,EAAA+C,GACAc,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAeA,OAXAF,GAAA,IACAC,GAAA,QAEAF,GAJAA,GAAA,QAIA,QAAAT,KAAAQ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAQ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAX,KAAAQ,IAAAG,EAAA,WAAAA,EAAA,OAMA,CAJA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IASA,SAAA1D,EAAAE,GACA,IAGA0D,EAAAC,EAAAC,EAAApB,EAAAqB,EAHA5D,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAGA,MAAAE,EAEA,OADA2D,EAAA,IAAA1D,EACA0D,KAOAH,EAAA,EAAAvD,GAHAwD,EADAxD,EAAA,GACAA,GAAA,EAAAD,GAEAC,EAAAD,EAAAC,EAAAD,GAGAsC,EAAA,QACA,QAAAsB,EAAA,EAAiBA,EAAA,EAAOA,KACxBF,EAAA3D,EAAA,MAAA6D,EAAA,IACA,GAAAF,IACAA,EAAA,GAAAA,IAGAC,EADA,EAAAD,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACA,EAAAA,EAAA,EACAD,EACA,EAAAC,EAAA,EACAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAEAF,EAEAlB,EAAAsB,GAAA,IAAAD,EAGA,OAAArB,EAmCA,SAAAjC,EAAAE,GACA,IAAAR,EAAAQ,EAAA,MACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OACAsD,EAAAlB,KAAAmB,MAAA/D,GAAA,EAEAgE,EAAAhE,EAAA4C,KAAAmB,MAAA/D,GACAiE,EAAA,IAAAvD,GAAA,EAAAT,GACAiE,EAAA,IAAAxD,GAAA,EAAAT,EAAA+D,GACAG,EAAA,IAAAzD,GAAA,EAAAT,GAAA,EAAA+D,IACAtD,EAAA,IAAAA,EAEA,OAAAoD,GACA,OACA,OAAApD,EAAAyD,EAAAF,GACA,OACA,OAAAC,EAAAxD,EAAAuD,GACA,OACA,OAAAA,EAAAvD,EAAAyD,GACA,OACA,OAAAF,EAAAC,EAAAxD,GACA,OACA,OAAAyD,EAAAF,EAAAvD,GACA,OACA,OAAAA,EAAAuD,EAAAC,IA+BA,SAAApD,EAAAsD,GACA,IAIAP,EAAAnD,EAAAsD,EAAAK,EAJArE,EAAAoE,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAF,EAAAC,EAiBA,OAbAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAGAX,EAAAjB,KAAAmB,MAAA,EAAA/D,GAEAgE,EAAA,EAAAhE,EAAA6D,EACA,MAAAA,KACAG,EAAA,EAAAA,GAEAK,EAAAC,EAAAN,IALAtD,EAAA,EAAA6D,GAKAD,GAEAT,GACA,QACA,OACA,OAAArB,EAAA9B,EAAkB+B,EAAA4B,EAAO3B,EAAA4B,EAAQ,MACjC,OAAA9B,EAAA6B,EAAkB5B,EAAA/B,EAAOgC,EAAA4B,EAAQ,MACjC,OAAA9B,EAAA8B,EAAmB7B,EAAA/B,EAAOgC,EAAA2B,EAAO,MACjC,OAAA7B,EAAA8B,EAAmB7B,EAAA4B,EAAO3B,EAAAhC,EAAO,MACjC,OAAA8B,EAAA6B,EAAkB5B,EAAA6B,EAAQ5B,EAAAhC,EAAO,MACjC,OAAA8B,EAAA9B,EAAkB+B,EAAA6B,EAAQ5B,EAAA2B,EAG1B,WAAA7B,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAvB,EAAAsD,GACA,IAIAjC,EAAAC,EAAAC,EAJAgC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAnB,EAAAmB,EAAA,OACAzB,EAAAyB,EAAA,OAMA,OAHAjC,EAAA,EAAAI,KAAAD,IAAA,EAAA+B,GAAA,EAAA1B,MACAP,EAAA,EAAAG,KAAAD,IAAA,EAAAgC,GAAA,EAAA3B,MACAN,EAAA,EAAAE,KAAAD,IAAA,EAAAW,GAAA,EAAAN,MACA,KAAAR,EAAA,IAAAC,EAAA,IAAAC,GAoBA,SAAAX,EAAAyB,GACA,IAGAhB,EAAAC,EAAAC,EAHAW,EAAAG,EAAA,OACAF,EAAAE,EAAA,OACAD,EAAAC,EAAA,OAqBA,OAjBAf,GAAA,MAAAY,EAAA,OAAAC,EAAA,MAAAC,EACAb,EAAA,MAAAW,GAAA,KAAAC,EAAA,MAAAC,EAGAf,GALAA,EAAA,OAAAa,GAAA,OAAAC,GAAA,MAAAC,GAKA,eAAAX,KAAAQ,IAAAZ,EAAA,YACAA,GAAA,MAEAC,IAAA,eAAAG,KAAAQ,IAAAX,EAAA,YACAA,GAAA,MAEAC,IAAA,eAAAE,KAAAQ,IAAAV,EAAA,YACAA,GAAA,MAEAF,EAAAI,KAAAD,IAAAC,KAAAC,IAAA,EAAAL,GAAA,GACAC,EAAAG,KAAAD,IAAAC,KAAAC,IAAA,EAAAJ,GAAA,GACAC,EAAAE,KAAAD,IAAAC,KAAAC,IAAA,EAAAH,GAAA,GAEA,KAAAF,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAAV,EAAAwB,GACA,IAAAH,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAeA,OAXAF,GAAA,IACAC,GAAA,QAEAF,GAJAA,GAAA,QAIA,QAAAT,KAAAQ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAQ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAX,KAAAQ,IAAAG,EAAA,WAAAA,EAAA,OAMA,CAJA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IASA,SAAArB,EAAA0C,GACA,IAGAvB,EAAAC,EAAAC,EAAAsB,EAHA3E,EAAA0E,EAAA,GACAE,EAAAF,EAAA,GACAlC,EAAAkC,EAAA,GAeA,OAZA1E,GAAA,EAEA2E,GADAvB,EAAA,IAAApD,EAAA,OACA,kBAEAoD,EAAA,IAAAV,KAAAQ,KAAAlD,EAAA,WACA2E,EAAAjC,KAAAQ,IAAAE,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAAyB,EAAA,IAAAD,EAAA,qBAAAjC,KAAAQ,IAAA0B,EAAA,IAAAD,EAAA,GAEAtB,IAAA,iBAAAA,EAAA,SAAAsB,EAAAnC,EAAA,0BAAAE,KAAAQ,IAAAyB,EAAAnC,EAAA,OAEA,CAAAW,EAAAC,EAAAC,GAGA,SAAA3D,EAAAgF,GACA,IAGAG,EAAA/E,EAAA0E,EAHAxE,EAAA0E,EAAA,GACAE,EAAAF,EAAA,GACAlC,EAAAkC,EAAA,GASA,OANAG,EAAAnC,KAAAoC,MAAAtC,EAAAoC,IACA9E,EAAA,IAAA+E,EAAA,EAAAnC,KAAAqC,IACA,IACAjF,GAAA,KAEA0E,EAAA9B,KAAAsC,KAAAJ,IAAApC,KACA,CAAAxC,EAAAwE,EAAA1E,GAGA,SAAAmC,EAAAxC,GACA,OAAAoC,EAAAG,EAAAvC,IAGA,SAAAyC,EAAA+C,GACA,IAGAL,EAAApC,EAAAqC,EAHA7E,EAAAiF,EAAA,GACAT,EAAAS,EAAA,GACAnF,EAAAmF,EAAA,GAMA,OAHAJ,EAAA/E,EAAA,MAAA4C,KAAAqC,GACAH,EAAAJ,EAAA9B,KAAAwC,IAAAL,GACArC,EAAAgC,EAAA9B,KAAAyC,IAAAN,GACA,CAAA7E,EAAA4E,EAAApC,GAWA,SAAAlB,EAAA8D,GACA,OAAAC,EAAAD,GA2BA,IAAAC,EAAA,CACAC,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAGA1L,EAAA,GACA,QAAA2L,KAAArJ,EACAtC,EAAAC,KAAAC,UAAAoC,EAAAqJ,OAGA,IAAAC,EAAA,WACA,WAAAC,GAGA,QAAAC,KAAA7P,EAAA,CAEA2P,EAAAE,EAAA,gBAAAA,GAEA,gBAAAC,GAGA,MAFA,iBAAAA,IACAA,EAAAC,MAAAC,UAAAC,MAAAC,KAAAC,YACAnQ,EAAA6P,GAAAC,IALA,CAOGD,GAEH,IAAAO,EAAA,cAAAC,KAAAR,GACAS,EAAAF,EAAA,GACAG,EAAAH,EAAA,IAGAT,EAAAW,GAAAX,EAAAW,IAAA,IAEAC,GAAAZ,EAAAE,GAAA,SAAAA,GACA,gBAAAC,GACA,iBAAAA,IACAA,EAAAC,MAAAC,UAAAC,MAAAC,KAAAC,YAEA,IAAAzL,EAAA1E,EAAA6P,GAAAC,GACA,oBAAApL,QAAA8L,IAAA9L,EACA,OAAAA,EAEA,QAAAC,EAAA,EAAqBA,EAAAD,EAAA+L,OAAgB9L,IACrCD,EAAAC,GAAAjB,KAAAgN,MAAAhM,EAAAC,IACA,OAAAD,GAXA,CAaGmL,GAKH,IAAAD,EAAA,WACAe,KAAAC,MAAA,IAKAhB,EAAAI,UAAAa,WAAA,SAAAC,EAAArQ,GACA,IAAAsQ,EAAAtQ,EAAA,GACA,YAAA+P,IAAAO,EAEAJ,KAAAK,UAAAF,IAGA,iBAAAC,IACAA,EAAAhB,MAAAC,UAAAC,MAAAC,KAAAzP,IAGAkQ,KAAAM,UAAAH,EAAAC,KAIAnB,EAAAI,UAAAiB,UAAA,SAAAH,EAAAC,GAIA,OAHAJ,KAAAG,QACAH,KAAAC,MAAA,GACAD,KAAAC,MAAAE,GAAAC,EACAJ,MAMAf,EAAAI,UAAAgB,UAAA,SAAAF,GACA,IAAAI,EAAAP,KAAAC,MAAAE,GACA,IAAAI,EAAA,CACA,IAAAC,EAAAR,KAAAG,MACAR,EAAAK,KAAAC,MAAAO,GACAD,EAAAvB,EAAAwB,GAAAL,GAAAR,GAEAK,KAAAC,MAAAE,GAAAI,EAEA,OAAAA,GAGA,qCAAAE,QAAA,SAAAN,GACAlB,EAAAI,UAAAc,GAAA,SAAAI,GACA,OAAAP,KAAAE,WAAAC,EAAAX,cAIA,IAAAkB,EAAA1B,EAEA2B,EAAA,CACAhL,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAMA8B,EAAA,CACAC,UACAC,UACAC,OAqHA,SAAAC,GACA,IAAAC,EAAAJ,EAAAG,GACA,OAAAC,KAAA3B,MAAA,MAtHA4B,OAyHA,SAAAF,GACA,IAAAG,EAAAL,EAAAE,GACA,OAAAG,KAAA7B,MAAA,MA1HA8B,SACAC,SA4HA,SAAAL,GACA,IAAAT,EAAAM,EAAAG,GACA,OAAAT,EACAA,EAAA,IAEAA,EAAAO,EAAAE,IACAT,EAAA,IAEAA,EAAAa,EAAAJ,IACAT,EAAA,QADA,GAlIAe,UAwIA,SAAAL,EAAAhM,GACA,IAAAA,OAAA4K,IAAA5K,GAAA,IAAAgM,EAAAnB,OAAA7K,EAAAgM,EAAA,GACA,UAAAM,EAAAN,EAAA,IACAM,EAAAN,EAAA,IACAM,EAAAN,EAAA,KAEAhM,GAAA,GAAAA,EAAA,EACAsM,EAAAxO,KAAAgN,MAAA,IAAA9K,IACA,KA/IAuM,UAmJA,SAAAP,EAAAQ,GACA,OAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACAS,EAAAT,EAAAQ,GAEA,OAAAR,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAtJAS,aACAC,cAgKA,SAAAV,EAAAQ,GACA,GAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACA,OAAAW,EAAAX,EAAAQ,GAEA,IAAA9O,EAAAI,KAAAgN,MAAAkB,EAAA,YACArO,EAAAG,KAAAgN,MAAAkB,EAAA,YACApO,EAAAE,KAAAgN,MAAAkB,EAAA,YAEA,aAAAtO,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAvKA+O,iBACAC,UAgLA,SAAAV,EAAAM,GACA,OAAAA,EAAA,GAAAN,EAAA,IAAAA,EAAA,KACAW,EAAAX,EAAAM,GAEA,OAAAN,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAnLAW,aACAC,UA+LA,SAAAxN,EAAAkN,GAIA,YAHA5B,IAAA4B,IACAA,OAAA5B,IAAAtL,EAAA,GAAAA,EAAA,MAEA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aACAsL,IAAA4B,GAAA,IAAAA,EAAA,KAAAA,EAAA,SAnMAhM,QAsMA,SAAA/C,GACA,OAAAsP,EAAAtP,EAAA4M,MAAA,QApMA,SAAAuB,EAAAG,GACA,GAAAA,EAAA,CAGA,IAMAtO,EAAA,QACAuC,EAAA,EACAgN,EAAAjB,EAAAiB,MARA,0BASAC,EAAA,GACA,GAAAD,EAAA,CACAA,IAAA,GACAC,EAAAD,EAAA,GACA,QAAAjO,EAAA,EAAqBA,EAAAtB,EAAAoN,OAAgB9L,IACrCtB,EAAAsB,GAAAmO,SAAAF,EAAAjO,GAAAiO,EAAAjO,GAAA,IAEAkO,IACAjN,EAAAlC,KAAAgN,MAAAoC,SAAAD,IAAA,uBAGA,GAAAD,EAAAjB,EAAAiB,MAnBA,yCAmBA,CACAC,EAAAD,EAAA,GACAA,IAAA,GACA,QAAAjO,EAAA,EAAqBA,EAAAtB,EAAAoN,OAAgB9L,IACrCtB,EAAAsB,GAAAmO,SAAAF,EAAA3C,MAAA,EAAAtL,EAAA,EAAAA,EAAA,OAEAkO,IACAjN,EAAAlC,KAAAgN,MAAAoC,SAAAD,EAAA,uBAGA,GAAAD,EAAAjB,EAAAiB,MA5BA,4FA4BA,CACA,QAAAjO,EAAA,EAAqBA,EAAAtB,EAAAoN,OAAgB9L,IACrCtB,EAAAsB,GAAAmO,SAAAF,EAAAjO,EAAA,IAEAiB,EAAAmN,WAAAH,EAAA,SAEA,GAAAA,EAAAjB,EAAAiB,MAjCA,8GAiCA,CACA,QAAAjO,EAAA,EAAqBA,EAAAtB,EAAAoN,OAAgB9L,IACrCtB,EAAAsB,GAAAjB,KAAAgN,MAAA,KAAAqC,WAAAH,EAAAjO,EAAA,KAEAiB,EAAAmN,WAAAH,EAAA,SAEA,GAAAA,EAAAjB,EAAAiB,MAtCA,SAsCA,CACA,kBAAAA,EAAA,GACA,gBAGA,KADAvP,EAAAiO,EAAAsB,EAAA,KAEA,OAIA,QAAAjO,EAAA,EAAkBA,EAAAtB,EAAAoN,OAAgB9L,IAClCtB,EAAAsB,GAAAqO,EAAA3P,EAAAsB,GAAA,OASA,OAHAiB,EAJAA,GAAA,GAAAA,EAIAoN,EAAApN,EAAA,KAHA,EAKAvC,EAAA,GAAAuC,EACAvC,GAGA,SAAAoO,EAAAE,GACA,GAAAA,EAAA,CAGA,IACAiB,EAAAjB,EAAAiB,MADA,4GAEA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACA9R,EAAAkS,EAAAF,SAAAF,EAAA,WACA7R,EAAAiS,EAAAD,WAAAH,EAAA,WACA5R,EAAAgS,EAAAD,WAAAH,EAAA,WACAhN,EAAAoN,EAAAC,MAAAb,GAAA,EAAAA,EAAA,KACA,OAAAtR,EAAAC,EAAAC,EAAA4E,KAIA,SAAAmM,EAAAJ,GACA,GAAAA,EAAA,CAGA,IACAiB,EAAAjB,EAAAiB,MADA,0GAEA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACA9R,EAAAkS,EAAAF,SAAAF,EAAA,WACA/O,EAAAmP,EAAAD,WAAAH,EAAA,WACApP,EAAAwP,EAAAD,WAAAH,EAAA,WACAhN,EAAAoN,EAAAC,MAAAb,GAAA,EAAAA,EAAA,KACA,OAAAtR,EAAA+C,EAAAL,EAAAoC,KA+CA,SAAAyM,EAAAT,EAAAQ,GAIA,YAHA5B,IAAA4B,IACAA,OAAA5B,IAAAoB,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,KAAAQ,EAAA,IAcA,SAAAG,EAAAX,EAAAQ,GACA,IAAA9O,EAAAI,KAAAgN,MAAAkB,EAAA,YACArO,EAAAG,KAAAgN,MAAAkB,EAAA,YACApO,EAAAE,KAAAgN,MAAAkB,EAAA,YACA,cAAAtO,EAAA,MAAAC,EAAA,MAAAC,EAAA,OAAA4O,GAAAR,EAAA,WAUA,SAAAa,EAAAX,EAAAM,GAIA,YAHA5B,IAAA4B,IACAA,OAAA5B,IAAAsB,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SACAM,EAAA,IAkBA,SAAAY,EAAAE,EAAAzP,EAAAE,GACA,OAAAD,KAAAD,IAAAC,KAAAC,IAAAF,EAAAyP,GAAAvP,GAGA,SAAAuO,EAAAgB,GACA,IAAAC,EAAAD,EAAAE,SAAA,IAAAC,cACA,OAAAF,EAAA1C,OAAA,MAAA0C,IAKA,IAAAR,EAAA,GACA,QAAAW,KAAAhC,EACAqB,EAAArB,EAAAgC,MAOA,IAAAC,EAAA,SAAAC,GACA,OAAAA,aAAAD,EACAC,EAEA7C,gBAAA4C,GAIA5C,KAAA8C,OAAA,EACA9C,KAAAI,OAAA,CACA1N,IAAA,QACAxC,IAAA,QACAS,IAAA,QACA4D,IAAA,QACAK,KAAA,UACA6M,MAAA,QAKA,iBAAAoB,GACAtC,EAAAK,EAAAC,QAAAgC,IAEA7C,KAAAM,UAAA,MAAAC,IACGA,EAAAK,EAAAE,QAAA+B,IACH7C,KAAAM,UAAA,MAAAC,IACGA,EAAAK,EAAAQ,OAAAyB,KACH7C,KAAAM,UAAA,MAAAC,GAEE,iBAAAsC,SAEFhD,KADAU,EAAAsC,GACAlQ,QAAAkN,IAAAU,EAAApD,IACA6C,KAAAM,UAAA,MAAAC,QACGV,IAAAU,EAAAlQ,QAAAwP,IAAAU,EAAAwC,UACH/C,KAAAM,UAAA,MAAAC,QACGV,IAAAU,EAAA1P,QAAAgP,IAAAU,EAAAyC,MACHhD,KAAAM,UAAA,MAAAC,QACGV,IAAAU,EAAArN,QAAA2M,IAAAU,EAAA0C,UACHjD,KAAAM,UAAA,MAAAC,QACGV,IAAAU,EAAA1L,QAAAgL,IAAAU,EAAAxJ,MACHiJ,KAAAM,UAAA,OAAAC,MAnCA,IAAAqC,EAAAC,GAcA,IAAAtC,GA0BAqC,EAAAvD,UAAA,CACA6D,QAAA,WACA,OAAAlD,KAAA8C,OAEApQ,IAAA,WACA,OAAAsN,KAAAmD,SAAA,MAAA3D,YAEAtP,IAAA,WACA,OAAA8P,KAAAmD,SAAA,MAAA3D,YAEA7O,IAAA,WACA,OAAAqP,KAAAmD,SAAA,MAAA3D,YAEAjL,IAAA,WACA,OAAAyL,KAAAmD,SAAA,MAAA3D,YAEA5K,KAAA,WACA,OAAAoL,KAAAmD,SAAA,OAAA3D,YAGA4D,SAAA,WACA,OAAApD,KAAAI,OAAA1N,KAEA2Q,SAAA,WACA,OAAArD,KAAAI,OAAAlQ,KAEAoT,SAAA,WACA,OAAAtD,KAAAI,OAAAzP,KAEA4S,SAAA,WACA,IAAAnD,EAAAJ,KAAAI,OACA,WAAAA,EAAAqB,MACArB,EAAA7L,IAAAiP,OAAA,CAAApD,EAAAqB,QAEArB,EAAA7L,KAEAkP,UAAA,WACA,OAAAzD,KAAAI,OAAAxL,MAEA8O,UAAA,WACA,IAAAtD,EAAAJ,KAAAI,OACA,OAAAA,EAAA1N,IAAA8Q,OAAA,CAAApD,EAAAqB,SAEAkC,UAAA,WACA,IAAAvD,EAAAJ,KAAAI,OACA,OAAAA,EAAAlQ,IAAAsT,OAAA,CAAApD,EAAAqB,SAEAA,MAAA,SAAA1N,GACA,YAAA8L,IAAA9L,EACAiM,KAAAI,OAAAqB,OAEAzB,KAAAM,UAAA,QAAAvM,GACAiM,OAGA7C,IAAA,SAAApJ,GACA,OAAAiM,KAAA4D,WAAA,QAAA7P,IAEAkF,MAAA,SAAAlF,GACA,OAAAiM,KAAA4D,WAAA,QAAA7P,IAEAqC,KAAA,SAAArC,GACA,OAAAiM,KAAA4D,WAAA,QAAA7P,IAEA8P,IAAA,SAAA9P,GAKA,OAJAA,IAEAA,GADAA,GAAA,KACA,MAAAA,KAEAiM,KAAA4D,WAAA,QAAA7P,IAEA+P,WAAA,SAAA/P,GACA,OAAAiM,KAAA4D,WAAA,QAAA7P,IAEAgP,UAAA,SAAAhP,GACA,OAAAiM,KAAA4D,WAAA,QAAA7P,IAEAgQ,YAAA,SAAAhQ,GACA,OAAAiM,KAAA4D,WAAA,QAAA7P,IAEAkP,UAAA,SAAAlP,GACA,OAAAiM,KAAA4D,WAAA,QAAA7P,IAEAiQ,UAAA,SAAAjQ,GACA,OAAAiM,KAAA4D,WAAA,QAAA7P,IAEAiP,MAAA,SAAAjP,GACA,OAAAiM,KAAA4D,WAAA,QAAA7P,IAEAgD,KAAA,SAAAhD,GACA,OAAAiM,KAAA4D,WAAA,SAAA7P,IAEAiH,QAAA,SAAAjH,GACA,OAAAiM,KAAA4D,WAAA,SAAA7P,IAEA8K,OAAA,SAAA9K,GACA,OAAAiM,KAAA4D,WAAA,SAAA7P,IAEAmC,MAAA,SAAAnC,GACA,OAAAiM,KAAA4D,WAAA,SAAA7P,IAGAuN,UAAA,WACA,OAAAV,EAAAU,UAAAtB,KAAAI,OAAA1N,MAEA8O,UAAA,WACA,OAAAZ,EAAAY,UAAAxB,KAAAI,OAAA1N,IAAAsN,KAAAI,OAAAqB,QAEAC,WAAA,WACA,OAAAd,EAAAc,WAAA1B,KAAAI,OAAA1N,IAAAsN,KAAAI,OAAAqB,QAEAE,cAAA,WACA,OAAAf,EAAAe,cAAA3B,KAAAI,OAAA1N,IAAAsN,KAAAI,OAAAqB,QAEAI,UAAA,WACA,OAAAjB,EAAAiB,UAAA7B,KAAAI,OAAAlQ,IAAA8P,KAAAI,OAAAqB,QAEAK,WAAA,WACA,OAAAlB,EAAAkB,WAAA9B,KAAAI,OAAAlQ,IAAA8P,KAAAI,OAAAqB,QAEAM,UAAA,WACA,OAAAnB,EAAAmB,UAAA/B,KAAAI,OAAA7L,IAAAyL,KAAAI,OAAAqB,QAEAhM,QAAA,WACA,OAAAmL,EAAAnL,QAAAuK,KAAAI,OAAA1N,IAAAsN,KAAAI,OAAAqB,QAGAwC,UAAA,WACA,IAAAvR,EAAAsN,KAAAI,OAAA1N,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAGAwR,WAAA,WAIA,IAFA,IAAAxR,EAAAsN,KAAAI,OAAA1N,IACAyR,EAAA,GACAnQ,EAAA,EAAiBA,EAAAtB,EAAAoN,OAAgB9L,IAAA,CACjC,IAAAoQ,EAAA1R,EAAAsB,GAAA,IACAmQ,EAAAnQ,GAAAoQ,GAAA,OAAAA,EAAA,MAAArR,KAAAQ,KAAA6Q,EAAA,iBAEA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAGAE,SAAA,SAAAC,GAEA,IAAAC,EAAAvE,KAAAkE,aACAM,EAAAF,EAAAJ,aACA,OAAAK,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAEAA,EAAA,MAAAD,EAAA,MAGAE,MAAA,SAAAH,GACA,IAAAI,EAAA1E,KAAAqE,SAAAC,GACA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAGAC,KAAA,WAEA,IAAAjS,EAAAsN,KAAAI,OAAA1N,IAEA,OADA,IAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,KAGAkS,MAAA,WACA,OAAA5E,KAAA2E,QAGAE,OAAA,WAEA,IADA,IAAAnS,EAAA,GACAsB,EAAA,EAAiBA,EAAA,EAAOA,IACxBtB,EAAAsB,GAAA,IAAAgM,KAAAI,OAAA1N,IAAAsB,GAGA,OADAgM,KAAAM,UAAA,MAAA5N,GACAsN,MAGA8E,QAAA,SAAAnQ,GACA,IAAAzE,EAAA8P,KAAAI,OAAAlQ,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAyE,EACAqL,KAAAM,UAAA,MAAApQ,GACA8P,MAGA+E,OAAA,SAAApQ,GACA,IAAAzE,EAAA8P,KAAAI,OAAAlQ,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAyE,EACAqL,KAAAM,UAAA,MAAApQ,GACA8P,MAGAgF,SAAA,SAAArQ,GACA,IAAAzE,EAAA8P,KAAAI,OAAAlQ,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAyE,EACAqL,KAAAM,UAAA,MAAApQ,GACA8P,MAGAiF,WAAA,SAAAtQ,GACA,IAAAzE,EAAA8P,KAAAI,OAAAlQ,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAyE,EACAqL,KAAAM,UAAA,MAAApQ,GACA8P,MAGAkF,OAAA,SAAAvQ,GACA,IAAAJ,EAAAyL,KAAAI,OAAA7L,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACAqL,KAAAM,UAAA,MAAA/L,GACAyL,MAGAmF,QAAA,SAAAxQ,GACA,IAAAJ,EAAAyL,KAAAI,OAAA7L,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACAqL,KAAAM,UAAA,MAAA/L,GACAyL,MAGAoF,UAAA,WACA,IAAA1S,EAAAsN,KAAAI,OAAA1N,IAEAqB,EAAA,GAAArB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADAsN,KAAAM,UAAA,OAAAvM,QACAiM,MAGAqF,QAAA,SAAA1Q,GACA,IAAA8M,EAAAzB,KAAAI,OAAAqB,MAEA,OADAzB,KAAAM,UAAA,QAAAmB,IAAA9M,GACAqL,MAGAsF,QAAA,SAAA3Q,GACA,IAAA8M,EAAAzB,KAAAI,OAAAqB,MAEA,OADAzB,KAAAM,UAAA,QAAAmB,IAAA9M,GACAqL,MAGAuF,OAAA,SAAAC,GACA,IAAAtV,EAAA8P,KAAAI,OAAAlQ,IACA2T,GAAA3T,EAAA,GAAAsV,GAAA,IAGA,OAFAtV,EAAA,GAAA2T,EAAA,MAAAA,IACA7D,KAAAM,UAAA,MAAApQ,GACA8P,MAOAyF,IAAA,SAAAC,EAAAC,GACA,IACArB,EAAAoB,EACAtR,OAAAyL,IAAA8F,EAAA,GAAAA,EAEAzS,EAAA,EAAAkB,EAAA,EACAa,EALA+K,KAKAyB,QAAA6C,EAAA7C,QAEAmE,IAAA1S,EAAA+B,IAAA,EAAA/B,KAAA+B,IAAA,EAAA/B,EAAA+B,IAAA,KACA4Q,EAAA,EAAAD,EAEA,OAAA5F,KACAtN,IACAkT,EAZA5F,KAYA7C,MAAA0I,EAAAvB,EAAAnH,MACAyI,EAbA5F,KAaA/G,QAAA4M,EAAAvB,EAAArL,QACA2M,EAdA5F,KAcA5J,OAAAyP,EAAAvB,EAAAlO,QAEAqL,MAhBAzB,KAgBAyB,QAAArN,EAAAkQ,EAAA7C,SAAA,EAAArN,KAGA0R,OAAA,WACA,OAAA9F,KAAAtN,OAGAqT,MAAA,WAKA,IAGA/C,EAAAgD,EAHAC,EAAA,IAAArD,EACAsD,EAAAlG,KAAAI,OACA+F,EAAAF,EAAA7F,OAGA,QAAAgG,KAAAF,EACAA,EAAA9W,eAAAgX,KACApD,EAAAkD,EAAAE,GAEA,oBADAJ,EAAA,GAAcvD,SAAAlD,KAAAyD,IAEdmD,EAAAC,GAAApD,EAAA1D,MAAA,GACK,oBAAA0G,EACLG,EAAAC,GAAApD,EAEAqD,QAAAC,MAAA,0BAAAtD,IAKA,OAAAiD,IAIArD,EAAAvD,UAAAkH,OAAA,CACA7T,IAAA,uBACAxC,IAAA,iCACAS,IAAA,6BACA4D,IAAA,gCACAK,KAAA,qCAGAgO,EAAAvD,UAAAmH,MAAA,CACA9T,IAAA,cACAxC,IAAA,cACAS,IAAA,cACA4D,IAAA,cACAK,KAAA,mBAGAgO,EAAAvD,UAAAgB,UAAA,SAAAF,GAIA,IAHA,IAAAC,EAAAJ,KAAAI,OACAG,EAAA,GAEAvM,EAAA,EAAgBA,EAAAmM,EAAAL,OAAkB9L,IAClCuM,EAAAJ,EAAAsG,OAAAzS,IAAAoM,EAAAD,GAAAnM,GAQA,OALA,IAAAoM,EAAAqB,QACAlB,EAAAtL,EAAAmL,EAAAqB,OAIAlB,GAGAqC,EAAAvD,UAAAiB,UAAA,SAAAH,EAAAI,GACA,IAIAvM,EAkCA0S,EAtCAtG,EAAAJ,KAAAI,OACAmG,EAAAvG,KAAAuG,OACAC,EAAAxG,KAAAwG,MACA/E,EAAA,EAKA,GAFAzB,KAAA8C,OAAA,EAEA,UAAA3C,EACAsB,EAAAlB,OACE,GAAAA,EAAAT,OAEFM,EAAAD,GAAAI,EAAAjB,MAAA,EAAAa,EAAAL,QACA2B,EAAAlB,EAAAJ,EAAAL,aACE,QAAAD,IAAAU,EAAAJ,EAAAsG,OAAA,KAEF,IAAAzS,EAAA,EAAaA,EAAAmM,EAAAL,OAAkB9L,IAC/BoM,EAAAD,GAAAnM,GAAAuM,EAAAJ,EAAAsG,OAAAzS,IAGAyN,EAAAlB,EAAAtL,OACE,QAAA4K,IAAAU,EAAAgG,EAAApG,GAAA,KAEF,IAAAwG,EAAAJ,EAAApG,GAEA,IAAAnM,EAAA,EAAaA,EAAAmM,EAAAL,OAAkB9L,IAC/BoM,EAAAD,GAAAnM,GAAAuM,EAAAoG,EAAA3S,IAGAyN,EAAAlB,EAAAkB,MAKA,GAFArB,EAAAqB,MAAA1O,KAAAC,IAAA,EAAAD,KAAAD,IAAA,OAAA+M,IAAA4B,EAAArB,EAAAqB,UAEA,UAAAtB,EACA,SAMA,IAAAnM,EAAA,EAAYA,EAAAmM,EAAAL,OAAkB9L,IAC9B0S,EAAA3T,KAAAC,IAAA,EAAAD,KAAAD,IAAA0T,EAAArG,GAAAnM,GAAAoM,EAAAD,GAAAnM,KACAoM,EAAAD,GAAAnM,GAAAjB,KAAAgN,MAAA2G,GAIA,QAAAE,KAAAL,EACAK,IAAAzG,IACAC,EAAAwG,GAAAlG,EAAAP,GAAAyG,GAAAxG,EAAAD,KAIA,UAGAyC,EAAAvD,UAAA8D,SAAA,SAAAhD,EAAArQ,GACA,IAAAyQ,EAAAzQ,EAAA,GAEA,YAAA+P,IAAAU,EAEAP,KAAAK,UAAAF,IAIA,iBAAAI,IACAA,EAAAnB,MAAAC,UAAAC,MAAAC,KAAAzP,IAGAkQ,KAAAM,UAAAH,EAAAI,GACAP,OAGA4C,EAAAvD,UAAAuE,WAAA,SAAAzD,EAAA0G,EAAA9S,GACA,IAAA+S,EAAA9G,KAAAI,OAAAD,GACA,YAAAN,IAAA9L,EAEA+S,EAAAD,GACE9S,IAAA+S,EAAAD,GAEF7G,MAIA8G,EAAAD,GAAA9S,EACAiM,KAAAM,UAAAH,EAAA2G,GAEA9G,OAGA,oBAAA+G,SACAA,OAAAnE,SAGA,IAiBAoE,EAjBAC,EAAArE,EAKAsE,EAAA,CAIAC,KAAA,aAOAC,KACAJ,EAAA,EACA,WACA,OAAAA,MAUAK,cAAA,SAAArE,GACA,OAAAA,SASAsE,QAAA,SAAAtE,GACA,GAAA5D,MAAAkI,SAAAlI,MAAAkI,QAAAtE,GACA,SAEA,IAAAgD,EAAAuB,OAAAlI,UAAAoD,SAAAlD,KAAAyD,GACA,kBAAAgD,EAAAwB,OAAA,iBAAAxB,EAAAwB,QAAA,IAYAC,SAAA,SAAAzE,GACA,cAAAA,GAAA,oBAAAuE,OAAAlI,UAAAoD,SAAAlD,KAAAyD,IAQA0E,SAAA,SAAA1E,GACA,wBAAAA,gBAAA2E,SAAAD,SAAA1E,IASA4E,eAAA,SAAA5E,EAAA6E,GACA,gBAAA7E,EAAA6E,EAAA7E,GAUA8E,sBAAA,SAAA9E,EAAA6D,EAAAgB,GACA,OAAAX,EAAAU,eAAAV,EAAAI,QAAAtE,KAAA6D,GAAA7D,EAAA6E,IAWAE,SAAA,SAAAC,EAAAlY,EAAAmY,GACA,GAAAD,GAAA,mBAAAA,EAAAzI,KACA,OAAAyI,EAAAE,MAAAD,EAAAnY,IAaAqY,KAAA,SAAAC,EAAAJ,EAAAC,EAAAI,GACA,IAAArU,EAAAsU,EAAAC,EACA,GAAArB,EAAAI,QAAAc,GAEA,GADAE,EAAAF,EAAAtI,OACAuI,EACA,IAAArU,EAAAsU,EAAA,EAAqBtU,GAAA,EAAQA,IAC7BgU,EAAAzI,KAAA0I,EAAAG,EAAApU,WAGA,IAAAA,EAAA,EAAeA,EAAAsU,EAAStU,IACxBgU,EAAAzI,KAAA0I,EAAAG,EAAApU,WAGG,GAAAkT,EAAAO,SAAAW,GAGH,IAFAG,EAAAhB,OAAAgB,KAAAH,GACAE,EAAAC,EAAAzI,OACA9L,EAAA,EAAcA,EAAAsU,EAAStU,IACvBgU,EAAAzI,KAAA0I,EAAAG,EAAAG,EAAAvU,IAAAuU,EAAAvU,KAYAwU,YAAA,SAAAC,EAAAC,GACA,IAAA1U,EAAA2U,EAAAC,EAAAC,EAEA,IAAAJ,IAAAC,GAAAD,EAAA3I,SAAA4I,EAAA5I,OACA,SAGA,IAAA9L,EAAA,EAAA2U,EAAAF,EAAA3I,OAA+B9L,EAAA2U,IAAU3U,EAIzC,GAHA4U,EAAAH,EAAAzU,GACA6U,EAAAH,EAAA1U,GAEA4U,aAAAxJ,OAAAyJ,aAAAzJ,OACA,IAAA8H,EAAAsB,YAAAI,EAAAC,GACA,cAEI,GAAAD,IAAAC,EAEJ,SAIA,UAQA9C,MAAA,SAAAG,GACA,GAAAgB,EAAAI,QAAApB,GACA,OAAAA,EAAA4C,IAAA5B,EAAAnB,OAGA,GAAAmB,EAAAO,SAAAvB,GAAA,CAMA,IALA,IAAAC,EAAA,GACAoC,EAAAhB,OAAAgB,KAAArC,GACA6C,EAAAR,EAAAzI,OACA3M,EAAA,EAESA,EAAA4V,IAAU5V,EACnBgT,EAAAoC,EAAApV,IAAA+T,EAAAnB,MAAAG,EAAAqC,EAAApV,KAGA,OAAAgT,EAGA,OAAAD,GAQA8C,QAAA,SAAAjK,EAAAoH,EAAAD,EAAA+C,GACA,IAAAC,EAAA/C,EAAApH,GACAoK,EAAAjD,EAAAnH,GAEAmI,EAAAO,SAAAyB,IAAAhC,EAAAO,SAAA0B,GACAjC,EAAAkC,MAAAF,EAAAC,EAAAF,GAEA9C,EAAApH,GAAAmI,EAAAnB,MAAAoD,IAQAE,UAAA,SAAAtK,EAAAoH,EAAAD,GACA,IAAAgD,EAAA/C,EAAApH,GACAoK,EAAAjD,EAAAnH,GAEAmI,EAAAO,SAAAyB,IAAAhC,EAAAO,SAAA0B,GACAjC,EAAAoC,QAAAJ,EAAAC,GACGhD,EAAA/W,eAAA2P,KACHoH,EAAApH,GAAAmI,EAAAnB,MAAAoD,KAaAC,MAAA,SAAAjD,EAAAD,EAAA+C,GACA,IAEAG,EAAApV,EAAAuU,EAAAQ,EAAA5V,EAFAoW,EAAArC,EAAAI,QAAApB,KAAA,CAAAA,GACAyC,EAAAY,EAAAzJ,OAGA,IAAAoH,EAAAO,SAAAtB,GACA,OAAAA,EAMA,IAFAiD,GADAH,KAAA,IACAO,QAAAtC,EAAA8B,QAEAhV,EAAA,EAAaA,EAAA2U,IAAU3U,EAEvB,GADAkS,EAAAqD,EAAAvV,GACAkT,EAAAO,SAAAvB,GAKA,IADAqC,EAAAhB,OAAAgB,KAAArC,GACA/S,EAAA,EAAA4V,EAAAR,EAAAzI,OAAkC3M,EAAA4V,IAAU5V,EAC5CiW,EAAAb,EAAApV,GAAAgT,EAAAD,EAAA+C,GAIA,OAAA9C,GAUAmD,QAAA,SAAAnD,EAAAD,GACA,OAAAgB,EAAAkC,MAAAjD,EAAAD,EAAA,CAAwCsD,OAAAtC,EAAAmC,aAUxCI,OAAA,SAAAtD,GAIA,IAHA,IAAAuD,EAAA,SAAA1G,EAAAjE,GACAoH,EAAApH,GAAAiE,GAEAhP,EAAA,EAAA2U,EAAAnJ,UAAAM,OAA0C9L,EAAA2U,IAAU3U,EACpDkT,EAAAiB,KAAA3I,UAAAxL,GAAA0V,GAEA,OAAAvD,GAMAwD,SAAA,SAAAC,GACA,IAAAC,EAAA7J,KACA8J,EAAAF,KAAAxa,eAAA,eAAAwa,EAAAG,YAAA,WACA,OAAAF,EAAA3B,MAAAlI,KAAAR,YAGAwK,EAAA,WACAhK,KAAA+J,YAAAD,GAYA,OATAE,EAAA3K,UAAAwK,EAAAxK,UACAyK,EAAAzK,UAAA,IAAA2K,EACAF,EAAAL,OAAAvC,EAAAyC,SAEAC,GACA1C,EAAAuC,OAAAK,EAAAzK,UAAAuK,GAGAE,EAAAG,UAAAJ,EAAAxK,UACAyK,IAIAI,EAAAhD,EAWAA,EAAAiD,aAAAjD,EAAAa,SAUAb,EAAAkD,QAAA,SAAAC,EAAAC,EAAAC,GACA,OAAAnL,MAAAC,UAAA+K,QAAA7K,KAAA8K,EAAAC,EAAAC,IAUArD,EAAAsD,kBAAAtD,EAAAU,eASAV,EAAAuD,yBAAAvD,EAAAY,sBAOA,IAAA4C,EAAA,CACAC,OAAA,SAAArW,GACA,OAAAA,GAGAsW,WAAA,SAAAtW,GACA,OAAAA,KAGAuW,YAAA,SAAAvW,GACA,OAAAA,KAAA,IAGAwW,cAAA,SAAAxW,GACA,OAAAA,GAAA,MACA,GAAAA,KAEA,MAAAA,KAAA,OAGAyW,YAAA,SAAAzW,GACA,OAAAA,OAGA0W,aAAA,SAAA1W,GACA,OAAAA,GAAA,GAAAA,IAAA,GAGA2W,eAAA,SAAA3W,GACA,OAAAA,GAAA,MACA,GAAAA,MAEA,KAAAA,GAAA,GAAAA,IAAA,IAGA4W,YAAA,SAAA5W,GACA,OAAAA,SAGA6W,aAAA,SAAA7W,GACA,SAAAA,GAAA,GAAAA,MAAA,IAGA8W,eAAA,SAAA9W,GACA,OAAAA,GAAA,MACA,GAAAA,SAEA,KAAAA,GAAA,GAAAA,MAAA,IAGA+W,YAAA,SAAA/W,GACA,OAAAA,WAGAgX,aAAA,SAAAhX,GACA,OAAAA,GAAA,GAAAA,QAAA,GAGAiX,eAAA,SAAAjX,GACA,OAAAA,GAAA,MACA,GAAAA,UAEA,KAAAA,GAAA,GAAAA,QAAA,IAGAkX,WAAA,SAAAlX,GACA,SAAAvB,KAAAwC,IAAAjB,GAAAvB,KAAAqC,GAAA,KAGAqW,YAAA,SAAAnX,GACA,OAAAvB,KAAAyC,IAAAlB,GAAAvB,KAAAqC,GAAA,KAGAsW,cAAA,SAAApX,GACA,WAAAvB,KAAAwC,IAAAxC,KAAAqC,GAAAd,GAAA,IAGAqX,WAAA,SAAArX,GACA,WAAAA,EAAA,EAAAvB,KAAAQ,IAAA,MAAAe,EAAA,KAGAsX,YAAA,SAAAtX,GACA,WAAAA,EAAA,IAAAvB,KAAAQ,IAAA,MAAAe,IAGAuX,cAAA,SAAAvX,GACA,WAAAA,EACA,EAEA,IAAAA,EACA,GAEAA,GAAA,MACA,GAAAvB,KAAAQ,IAAA,MAAAe,EAAA,IAEA,MAAAvB,KAAAQ,IAAA,QAAAe,KAGAwX,WAAA,SAAAxX,GACA,OAAAA,GAAA,EACAA,IAEAvB,KAAAsC,KAAA,EAAAf,KAAA,IAGAyX,YAAA,SAAAzX,GACA,OAAAvB,KAAAsC,KAAA,GAAAf,GAAA,GAAAA,IAGA0X,cAAA,SAAA1X,GACA,OAAAA,GAAA,OACA,IAAAvB,KAAAsC,KAAA,EAAAf,KAAA,GAEA,IAAAvB,KAAAsC,KAAA,GAAAf,GAAA,GAAAA,GAAA,IAGA2X,cAAA,SAAA3X,GACA,IAAAlE,EAAA,QACAgE,EAAA,EACAa,EAAA,EACA,WAAAX,EACA,EAEA,IAAAA,EACA,GAEAF,IACAA,EAAA,IAEAa,EAAA,GACAA,EAAA,EACA7E,EAAAgE,EAAA,GAEAhE,EAAAgE,GAAA,EAAArB,KAAAqC,IAAArC,KAAAmZ,KAAA,EAAAjX,IAEAA,EAAAlC,KAAAQ,IAAA,MAAAe,GAAA,IAAAvB,KAAAyC,KAAAlB,EAAAlE,IAAA,EAAA2C,KAAAqC,IAAAhB,KAGA+X,eAAA,SAAA7X,GACA,IAAAlE,EAAA,QACAgE,EAAA,EACAa,EAAA,EACA,WAAAX,EACA,EAEA,IAAAA,EACA,GAEAF,IACAA,EAAA,IAEAa,EAAA,GACAA,EAAA,EACA7E,EAAAgE,EAAA,GAEAhE,EAAAgE,GAAA,EAAArB,KAAAqC,IAAArC,KAAAmZ,KAAA,EAAAjX,GAEAA,EAAAlC,KAAAQ,IAAA,MAAAe,GAAAvB,KAAAyC,KAAAlB,EAAAlE,IAAA,EAAA2C,KAAAqC,IAAAhB,GAAA,IAGAgY,iBAAA,SAAA9X,GACA,IAAAlE,EAAA,QACAgE,EAAA,EACAa,EAAA,EACA,WAAAX,EACA,EAEA,IAAAA,GAAA,IACA,GAEAF,IACAA,EAAA,KAEAa,EAAA,GACAA,EAAA,EACA7E,EAAAgE,EAAA,GAEAhE,EAAAgE,GAAA,EAAArB,KAAAqC,IAAArC,KAAAmZ,KAAA,EAAAjX,GAEAX,EAAA,EACAW,EAAAlC,KAAAQ,IAAA,MAAAe,GAAA,IAAAvB,KAAAyC,KAAAlB,EAAAlE,IAAA,EAAA2C,KAAAqC,IAAAhB,IAAA,GAEAa,EAAAlC,KAAAQ,IAAA,OAAAe,GAAA,IAAAvB,KAAAyC,KAAAlB,EAAAlE,IAAA,EAAA2C,KAAAqC,IAAAhB,GAAA,OAEAiY,WAAA,SAAA/X,GACA,IAAAlE,EAAA,QACA,OAAAkE,MAAAlE,EAAA,GAAAkE,EAAAlE,IAGAkc,YAAA,SAAAhY,GACA,IAAAlE,EAAA,QACA,OAAAkE,GAAA,GAAAA,IAAAlE,EAAA,GAAAkE,EAAAlE,GAAA,GAGAmc,cAAA,SAAAjY,GACA,IAAAlE,EAAA,QACA,OAAAkE,GAAA,MACAA,MAAA,GAAAlE,GAAA,QAAAkE,EAAAlE,GAAA,GAEA,KAAAkE,GAAA,GAAAA,IAAA,GAAAlE,GAAA,QAAAkE,EAAAlE,GAAA,IAGAoc,aAAA,SAAAlY,GACA,SAAAoW,EAAA+B,cAAA,EAAAnY,IAGAmY,cAAA,SAAAnY,GACA,OAAAA,EAAA,OACA,OAAAA,IAEAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAEAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAEA,QAAAA,GAAA,YAAAA,EAAA,SAGAoY,gBAAA,SAAApY,GACA,OAAAA,EAAA,GACA,GAAAoW,EAAA8B,aAAA,EAAAlY,GAEA,GAAAoW,EAAA+B,cAAA,EAAAnY,EAAA,QAIAqY,EAAA,CACAjC,WAYAR,EAAA0C,cAAAlC,EAEA,IAAAtV,EAAArC,KAAAqC,GACAyX,EAAAzX,EAAA,IACA0X,GAAA,EAAA1X,EACA2X,GAAA3X,EAAA,EACA4X,GAAA5X,EAAA,EACA6X,GAAA,EAAA7X,EAAA,EAKA8X,GAAA,CAKAC,MAAA,SAAAC,GACAA,EAAAC,IAAAC,UAAA,IAAAF,EAAAG,MAAAH,EAAAI,SAcAC,YAAA,SAAAJ,EAAA7Z,EAAAC,EAAA8Z,EAAAC,EAAAE,GACA,GAAAA,EAAA,CACA,IAAA/a,EAAAI,KAAAD,IAAA4a,EAAAF,EAAA,EAAAD,EAAA,GACAI,EAAAna,EAAAb,EACAib,EAAAna,EAAAd,EACAkb,EAAAra,EAAA+Z,EAAA5a,EACAmb,EAAAra,EAAA+Z,EAAA7a,EAEA0a,EAAAU,OAAAva,EAAAoa,GACAD,EAAAE,GAAAD,EAAAE,GACAT,EAAAW,IAAAL,EAAAC,EAAAjb,GAAAyC,GAAA2X,IACAM,EAAAW,IAAAH,EAAAD,EAAAjb,GAAAoa,GAAA,GACAM,EAAAW,IAAAH,EAAAC,EAAAnb,EAAA,EAAAoa,IACAM,EAAAW,IAAAL,EAAAG,EAAAnb,EAAAoa,GAAA3X,IACIuY,EAAAE,GACJR,EAAAU,OAAAJ,EAAAla,GACA4Z,EAAAW,IAAAH,EAAAD,EAAAjb,GAAAoa,OACAM,EAAAW,IAAAL,EAAAC,EAAAjb,EAAAoa,GAAA3X,EAAA2X,KACIa,EAAAE,GACJT,EAAAW,IAAAL,EAAAC,EAAAjb,GAAAyC,EAAA,GACAiY,EAAAW,IAAAL,EAAAG,EAAAnb,EAAA,EAAAyC,IAEAiY,EAAAW,IAAAL,EAAAC,EAAAjb,GAAAyC,KAEAiY,EAAAY,YACAZ,EAAAU,OAAAva,EAAAC,QAEA4Z,EAAAa,KAAA1a,EAAAC,EAAA8Z,EAAAC,IAIAW,UAAA,SAAAd,EAAAe,EAAAV,EAAAla,EAAAC,EAAA4a,GACA,IAAArI,EAAAsI,EAAAC,EAAAC,EAAAC,EACAC,GAAAL,GAAA,GAAAxB,EAEA,IAAAuB,GAAA,iBAAAA,GAEA,+BADApI,EAAAoI,EAAA3L,aACA,+BAAAuD,GAMA,KAAA1D,MAAAoL,OAAA,IAMA,OAFAL,EAAAsB,YAEAP,GAEA,QACAf,EAAAW,IAAAxa,EAAAC,EAAAia,EAAA,EAAAZ,IACAO,EAAAY,YACA,MACA,eACAZ,EAAAU,OAAAva,EAAAT,KAAAyC,IAAAkZ,GAAAhB,EAAAja,EAAAV,KAAAwC,IAAAmZ,GAAAhB,GACAgB,GAAAzB,GACAI,EAAAuB,OAAApb,EAAAT,KAAAyC,IAAAkZ,GAAAhB,EAAAja,EAAAV,KAAAwC,IAAAmZ,GAAAhB,GACAgB,GAAAzB,GACAI,EAAAuB,OAAApb,EAAAT,KAAAyC,IAAAkZ,GAAAhB,EAAAja,EAAAV,KAAAwC,IAAAmZ,GAAAhB,GACAL,EAAAY,YACA,MACA,kBASAO,EAAAd,GADAe,EAAA,KAAAf,GAEAY,EAAAvb,KAAAwC,IAAAmZ,EAAA1B,IAAAwB,EACAD,EAAAxb,KAAAyC,IAAAkZ,EAAA1B,IAAAwB,EACAnB,EAAAW,IAAAxa,EAAA8a,EAAA7a,EAAA8a,EAAAE,EAAAC,EAAAtZ,EAAAsZ,EAAA3B,IACAM,EAAAW,IAAAxa,EAAA+a,EAAA9a,EAAA6a,EAAAG,EAAAC,EAAA3B,GAAA2B,GACArB,EAAAW,IAAAxa,EAAA8a,EAAA7a,EAAA8a,EAAAE,EAAAC,IAAA3B,IACAM,EAAAW,IAAAxa,EAAA+a,EAAA9a,EAAA6a,EAAAG,EAAAC,EAAA3B,GAAA2B,EAAAtZ,GACAiY,EAAAY,YACA,MACA,WACA,IAAAI,EAAA,CACAG,EAAAzb,KAAA8b,QAAAnB,EACAL,EAAAa,KAAA1a,EAAAgb,EAAA/a,EAAA+a,EAAA,EAAAA,EAAA,EAAAA,GACA,MAEAE,GAAA1B,GAEA,cACAsB,EAAAvb,KAAAwC,IAAAmZ,GAAAhB,EACAa,EAAAxb,KAAAyC,IAAAkZ,GAAAhB,EACAL,EAAAU,OAAAva,EAAA8a,EAAA7a,EAAA8a,GACAlB,EAAAuB,OAAApb,EAAA+a,EAAA9a,EAAA6a,GACAjB,EAAAuB,OAAApb,EAAA8a,EAAA7a,EAAA8a,GACAlB,EAAAuB,OAAApb,EAAA+a,EAAA9a,EAAA6a,GACAjB,EAAAY,YACA,MACA,eACAS,GAAA1B,GAEA,YACAsB,EAAAvb,KAAAwC,IAAAmZ,GAAAhB,EACAa,EAAAxb,KAAAyC,IAAAkZ,GAAAhB,EACAL,EAAAU,OAAAva,EAAA8a,EAAA7a,EAAA8a,GACAlB,EAAAuB,OAAApb,EAAA8a,EAAA7a,EAAA8a,GACAlB,EAAAU,OAAAva,EAAA+a,EAAA9a,EAAA6a,GACAjB,EAAAuB,OAAApb,EAAA+a,EAAA9a,EAAA6a,GACA,MACA,WACAA,EAAAvb,KAAAwC,IAAAmZ,GAAAhB,EACAa,EAAAxb,KAAAyC,IAAAkZ,GAAAhB,EACAL,EAAAU,OAAAva,EAAA8a,EAAA7a,EAAA8a,GACAlB,EAAAuB,OAAApb,EAAA8a,EAAA7a,EAAA8a,GACAlB,EAAAU,OAAAva,EAAA+a,EAAA9a,EAAA6a,GACAjB,EAAAuB,OAAApb,EAAA+a,EAAA9a,EAAA6a,GACAI,GAAA1B,GACAsB,EAAAvb,KAAAwC,IAAAmZ,GAAAhB,EACAa,EAAAxb,KAAAyC,IAAAkZ,GAAAhB,EACAL,EAAAU,OAAAva,EAAA8a,EAAA7a,EAAA8a,GACAlB,EAAAuB,OAAApb,EAAA8a,EAAA7a,EAAA8a,GACAlB,EAAAU,OAAAva,EAAA+a,EAAA9a,EAAA6a,GACAjB,EAAAuB,OAAApb,EAAA+a,EAAA9a,EAAA6a,GACA,MACA,WACAA,EAAAvb,KAAAwC,IAAAmZ,GAAAhB,EACAa,EAAAxb,KAAAyC,IAAAkZ,GAAAhB,EACAL,EAAAU,OAAAva,EAAA8a,EAAA7a,EAAA8a,GACAlB,EAAAuB,OAAApb,EAAA8a,EAAA7a,EAAA8a,GACA,MACA,WACAlB,EAAAU,OAAAva,EAAAC,GACA4Z,EAAAuB,OAAApb,EAAAT,KAAAwC,IAAAmZ,GAAAhB,EAAAja,EAAAV,KAAAyC,IAAAkZ,GAAAhB,GAIAL,EAAAyB,OACAzB,EAAA0B,eAnGA1B,EAAA2B,UAAAZ,EAAA5a,EAAA4a,EAAAb,MAAA,EAAA9Z,EAAA2a,EAAAZ,OAAA,EAAAY,EAAAb,MAAAa,EAAAZ,SA6GAyB,eAAA,SAAAC,EAAAC,GAGA,OAAAD,EAAA1b,EAAA2b,EAAAxB,KAFA,MAEAuB,EAAA1b,EAAA2b,EAAAtB,MAFA,MAGAqB,EAAAzb,EAAA0b,EAAAvB,IAHA,MAGAsB,EAAAzb,EAAA0b,EAAArB,OAHA,MAMAsB,SAAA,SAAA/B,EAAA8B,GACA9B,EAAAgC,OACAhC,EAAAsB,YACAtB,EAAAa,KAAAiB,EAAAxB,KAAAwB,EAAAvB,IAAAuB,EAAAtB,MAAAsB,EAAAxB,KAAAwB,EAAArB,OAAAqB,EAAAvB,KACAP,EAAAiC,QAGAC,WAAA,SAAAlC,GACAA,EAAAmC,WAGAZ,OAAA,SAAAvB,EAAAoC,EAAAtJ,EAAAuJ,GACA,IAAAC,EAAAxJ,EAAAyJ,YACA,GAAAD,EAAA,CACA,cAAAA,EAAA,CACA,IAAAE,GAAAJ,EAAAjc,EAAA2S,EAAA3S,GAAA,EACA6Z,EAAAuB,OAAAiB,EAAAH,EAAAvJ,EAAA1S,EAAAgc,EAAAhc,GACA4Z,EAAAuB,OAAAiB,EAAAH,EAAAD,EAAAhc,EAAA0S,EAAA1S,OACI,UAAAkc,IAAAD,GAAA,UAAAC,GAAAD,EACJrC,EAAAuB,OAAAa,EAAAjc,EAAA2S,EAAA1S,GAEA4Z,EAAAuB,OAAAzI,EAAA3S,EAAAic,EAAAhc,GAEA4Z,EAAAuB,OAAAzI,EAAA3S,EAAA2S,EAAA1S,QAIA0S,EAAA2J,QAKAzC,EAAA0C,cACAL,EAAAD,EAAAO,sBAAAP,EAAAQ,kBACAP,EAAAD,EAAAS,sBAAAT,EAAAU,kBACAT,EAAAvJ,EAAA8J,kBAAA9J,EAAA6J,sBACAN,EAAAvJ,EAAAgK,kBAAAhK,EAAA+J,sBACA/J,EAAA3S,EACA2S,EAAA1S,GAVA4Z,EAAAuB,OAAAzI,EAAA3S,EAAA2S,EAAA1S,KAcA2c,GAAAlD,GAWAhD,EAAAiD,MAAAD,GAAAC,MASAjD,EAAAmG,qBAAA,SAAAhD,GACAA,EAAAsB,YACAzB,GAAAO,YAAAvF,MAAAgF,GAAA1N,YAGA,IAAA8Q,GAAA,CAIAC,KAAA,SAAAC,EAAApQ,GACA,OAAA8J,EAAAd,MAAApJ,KAAAwQ,KAAAxQ,KAAAwQ,GAAA,IAA4DpQ,KAI5DkQ,GAAAC,KAAA,UACAE,aAAA,kBACAC,iBAAA,OACAC,kBAAA,qDACAC,gBAAA,GACAC,iBAAA,SACAC,kBAAA,IACAC,WAAA,IAGA,IAAAC,GAAAV,GAEA1I,GAAAsC,EAAAtC,eAuBAqJ,GAAA,CASAC,aAAA,SAAAlO,EAAAwL,GACA,IAAA2C,GAAA,GAAAnO,GAAAf,MAAA,wCACA,IAAAkP,GAAA,WAAAA,EAAA,GACA,WAAA3C,EAKA,OAFAxL,GAAAmO,EAAA,GAEAA,EAAA,IACA,SACA,OAAAnO,EACA,QACAA,GAAA,IAMA,OAAAwL,EAAAxL,GAUAoO,UAAA,SAAApO,GACA,IAAA1O,EAAA3B,EAAAE,EAAAxC,EAWA,OATA6Z,EAAAzC,SAAAzE,IACA1O,GAAA0O,EAAA4K,KAAA,EACAjb,GAAAqQ,EAAA6K,OAAA,EACAhb,GAAAmQ,EAAA8K,QAAA,EACAzd,GAAA2S,EAAA2K,MAAA,GAEArZ,EAAA3B,EAAAE,EAAAxC,GAAA2S,GAAA,EAGA,CACA4K,IAAAtZ,EACAuZ,MAAAlb,EACAmb,OAAAjb,EACA8a,KAAAtd,EACAmd,OAAAlZ,EAAAzB,EACA0a,MAAAld,EAAAsC,IAWA0e,WAAA,SAAApI,GACA,IAAAqI,EAAAN,GAAAO,OACA/C,EAAA5G,GAAAqB,EAAAuI,SAAAF,EAAAV,iBACAa,EAAA,CACAC,OAAA9J,GAAAqB,EAAA0I,WAAAL,EAAAX,mBACAiB,WAAA1H,EAAAjB,QAAAiI,aAAAtJ,GAAAqB,EAAA2I,WAAAN,EAAAR,mBAAAtC,GACAA,OACAJ,MAAAxG,GAAAqB,EAAA4I,UAAAP,EAAAT,kBACAlL,OAAA,KACA3E,OAAA,IAIA,OADAyQ,EAAAzQ,OA7FA,SAAAyQ,GACA,OAAAA,GAAAvH,EAAA7C,cAAAoK,EAAAjD,OAAAtE,EAAA7C,cAAAoK,EAAAC,QACA,MAGAD,EAAArD,MAAAqD,EAAArD,MAAA,SACAqD,EAAA9L,OAAA8L,EAAA9L,OAAA,QACA8L,EAAAjD,KAAA,MACAiD,EAAAC,OAqFAI,CAAAL,GACAA,GAYAM,QAAA,SAAAC,EAAAC,EAAApL,GACA,IAAA7S,EAAA2U,EAAA3F,EAEA,IAAAhP,EAAA,EAAA2U,EAAAqJ,EAAAlS,OAAmC9L,EAAA2U,IAAU3U,EAE7C,QAAA6L,KADAmD,EAAAgP,EAAAhe,WAIA6L,IAAAoS,GAAA,mBAAAjP,IACAA,IAAAiP,SAEApS,IAAAgH,GAAAqD,EAAA5C,QAAAtE,KACAA,IAAA6D,SAEAhH,IAAAmD,GACA,OAAAA,IAMAkP,GAAAhI,EACAiI,GAAAxF,EACAyF,GAAAhC,GACAnH,GAAAgI,GACAiB,GAAAC,UACAD,GAAAE,UACAF,GAAAjJ,WAmDA,IAAAoJ,GAAA,SAAAC,GACAJ,GAAAzI,OAAAzJ,KAAAsS,GACAtS,KAAAuS,WAAArK,MAAAlI,KAAAR,YAGA0S,GAAAzI,OAAA4I,GAAAhT,UAAA,CAEAkT,WAAA,WACAvS,KAAAwS,QAAA,GAGAC,MAAA,WACA,IAAA5I,EAAA7J,KAKA,OAJA6J,EAAA6I,QACA7I,EAAA6I,MAAAR,GAAAnM,MAAA8D,EAAA8I,SAEA9I,EAAA+I,OAAA,GACA/I,GAGAgJ,WAAA,SAAAC,GACA,IAAAjJ,EAAA7J,KACA+S,EAAAlJ,EAAA8I,OACAK,EAAAnJ,EAAA+I,OACAK,EAAApJ,EAAA6I,MAGA,OAAAK,GAAA,IAAAD,GAMAG,IACAA,EAAApJ,EAAA6I,MAAA,IAGAM,IACAA,EAAAnJ,EAAA+I,OAAA,IAvFA,SAAAI,EAAAC,EAAAF,EAAAD,GACA,IACA9e,EAAA2U,EAAA5J,EAAAmU,EAAAC,EAAAhN,EAAAH,EAAAoN,EAAAC,EADA9K,EAAAhB,OAAAgB,KAAAwK,GAGA,IAAA/e,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAgC9L,EAAA2U,IAAU3U,EAa1C,GAZA+K,EAAAwJ,EAAAvU,GAEAmS,EAAA4M,EAAAhU,GAIAkU,EAAA7jB,eAAA2P,KACAkU,EAAAlU,GAAAoH,IAGA+M,EAAAD,EAAAlU,MAEAoH,GAAA,MAAApH,EAAA,IAYA,GARAiU,EAAA5jB,eAAA2P,KACAiU,EAAAjU,GAAAmU,GAGAC,EAAAH,EAAAjU,IAEAiH,SAAAG,WAEAgN,EACA,cAAAnN,GAEA,IADAoN,EAAAnM,EAAAkM,IACArQ,QACAuQ,EAAApM,EAAAd,IACArD,MAAA,CACAmQ,EAAAlU,GAAAsU,EAAA5N,IAAA2N,EAAAN,GAAAtR,YACA,eAGI,GAAA0Q,GAAAxK,SAAAyL,IAAAjB,GAAAxK,SAAAvB,GAAA,CACJ8M,EAAAlU,GAAAoU,GAAAhN,EAAAgN,GAAAL,EACA,SAIAG,EAAAlU,GAAAoH,GA6CAmN,CAAAN,EAAAC,EAAAF,EAAAD,GAEAjJ,IAfAA,EAAA6I,MAAAK,EACAlJ,EAAA+I,OAAA,KACA/I,IAgBA0J,gBAAA,WACA,OACA/f,EAAAwM,KAAA2S,OAAAnf,EACAC,EAAAuM,KAAA2S,OAAAlf,IAIA+f,SAAA,WACA,OAAAtB,GAAAuB,SAAAzT,KAAA2S,OAAAnf,IAAA0e,GAAAuB,SAAAzT,KAAA2S,OAAAlf,MAIA4e,GAAA5I,OAAAyI,GAAAvI,SAEA,IAAA+J,GAAArB,GAEAsB,GAAAD,GAAAjK,OAAA,CACA2D,MAAA,KACAwG,YAAA,EACAC,SAAA,GACA1B,OAAA,GACA2B,OAAA,KAEAC,oBAAA,KACAC,oBAAA,OAGAC,GAAAN,GAUApM,OAAA2M,eAAAP,GAAAtU,UAAA,mBACA8U,IAAA,WACA,OAAAnU,QAUAuH,OAAA2M,eAAAP,GAAAtU,UAAA,iBACA8U,IAAA,WACA,OAAAnU,KAAAoN,OAEAgH,IAAA,SAAApR,GACAhD,KAAAoN,MAAApK,KAIAgO,GAAAT,KAAA,UACA8D,UAAA,CACAC,SAAA,IACAnC,OAAA,eACAoC,WAAArC,GAAA/K,KACAqN,WAAAtC,GAAA/K,QAIA,IAAAsN,GAAA,CACAC,WAAA,GACAC,QAAA,KAQAC,aAAA,SAAAxH,EAAAiH,EAAAC,EAAAO,GACA,IACA7gB,EAAA2U,EADA+L,EAAA1U,KAAA0U,WAWA,IARAL,EAAAjH,QACAiH,EAAAS,UAAAC,KAAAC,MACAX,EAAAC,WAEAO,IACAzH,EAAA6H,WAAA,GAGAjhB,EAAA,EAAA2U,EAAA+L,EAAA5U,OAAuC9L,EAAA2U,IAAU3U,EACjD,GAAA0gB,EAAA1gB,GAAAoZ,UAEA,YADAsH,EAAA1gB,GAAAqgB,GAKAK,EAAAQ,KAAAb,GAGA,IAAAK,EAAA5U,QACAE,KAAAmV,yBAIAC,gBAAA,SAAAhI,GACA,IAAAvG,EAAAqL,GAAAmD,UAAArV,KAAA0U,WAAA,SAAAL,GACA,OAAAA,EAAAjH,aAGA,IAAAvG,IACA7G,KAAA0U,WAAAY,OAAAzO,EAAA,GACAuG,EAAA6H,WAAA,IAIAE,sBAAA,WACA,IAAAtL,EAAA7J,KACA,OAAA6J,EAAA8K,UAIA9K,EAAA8K,QAAAzC,GAAAqD,iBAAAhW,KAAAwH,OAAA,WACA8C,EAAA8K,QAAA,KACA9K,EAAA2L,kBAQAA,YAAA,WACAxV,KAEAyV,UAFAzV,KAKA0U,WAAA5U,OAAA,GALAE,KAMAmV,yBAOAM,QAAA,WAMA,IALA,IACApB,EAAAjH,EAAAyG,EAAA6B,EADAhB,EAAA1U,KAAA0U,WAEA1gB,EAAA,EAGAA,EAAA0gB,EAAA5U,QACAuU,EAAAK,EAAA1gB,GACAoZ,EAAAiH,EAAAjH,MACAyG,EAAAQ,EAAAR,SAIA6B,EAAA3iB,KAAAmB,OAAA6gB,KAAAC,MAAAX,EAAAS,WAAAT,EAAAC,SAAAT,GAAA,EACAQ,EAAAT,YAAA7gB,KAAAD,IAAA4iB,EAAA7B,GAEA3B,GAAAnK,SAAAsM,EAAAP,OAAA,CAAA1G,EAAAiH,GAAAjH,GACA8E,GAAAnK,SAAAsM,EAAAN,oBAAA,CAAAM,GAAAjH,GAEAiH,EAAAT,aAAAC,GACA3B,GAAAnK,SAAAsM,EAAAL,oBAAA,CAAAK,GAAAjH,GACAA,EAAA6H,WAAA,EACAP,EAAAY,OAAAthB,EAAA,MAEAA,IAMA+d,GAAAG,GAAAjJ,QAAA8I,QAEA4D,GAAA,0CAgDA,SAAAC,GAAAvL,EAAAwL,GACA,IAAAC,EAAAzL,EAAA0L,SACA,GAAAD,EAAA,CAIA,IAAAE,EAAAF,EAAAE,UACAnP,EAAAmP,EAAA5L,QAAAyL,IACA,IAAAhP,GACAmP,EAAAV,OAAAzO,EAAA,GAGAmP,EAAAlW,OAAA,IAIA6V,GAAAlV,QAAA,SAAA1B,UACAsL,EAAAtL,YAGAsL,EAAA0L,WAIA,IAAAE,GAAA,SAAA7I,EAAA8I,GACAlW,KAAAuS,WAAAnF,EAAA8I,IAGAhE,GAAAzI,OAAAwM,GAAA5W,UAAA,CAMA8W,mBAAA,KAMAC,gBAAA,KAEA7D,WAAA,SAAAnF,EAAA8I,GACAlW,KACAoN,QADApN,KAEA6G,MAAAqP,EAFAlW,KAGAqW,aAHArW,KAIAsW,eAGAC,YAAA,SAAAL,GACAlW,KAAA6G,MAAAqP,GAGAG,WAAA,WACA,IAAAxM,EAAA7J,KACAwW,EAAA3M,EAAA4M,UACAC,EAAA7M,EAAA8M,aAEA,OAAAH,EAAAI,SAAAJ,EAAAI,WAAA/M,EAAAuD,MAAAyJ,SACAL,EAAAI,QAAAF,EAAAE,SAAA/M,EAAAuD,MAAAnE,QAAA4N,OAAAC,MAAA,GAAA9P,IAEA,OAAAwP,EAAAO,SAAAP,EAAAO,WAAAlN,EAAAuD,MAAAyJ,SACAL,EAAAO,QAAAL,EAAAK,SAAAlN,EAAAuD,MAAAnE,QAAA4N,OAAAG,MAAA,GAAAhQ,KAIA2P,WAAA,WACA,OAAA3W,KAAAoN,MAAA6J,KAAAC,SAAAlX,KAAA6G,QAGA4P,QAAA,WACA,OAAAzW,KAAAoN,MAAA+J,eAAAnX,KAAA6G,QAGAuQ,cAAA,SAAAC,GACA,OAAArX,KAAAoN,MAAAyJ,OAAAQ,IAMAC,iBAAA,WACA,OAAAtX,KAAAyW,UAAAM,SAMAQ,iBAAA,WACA,OAAAvX,KAAAyW,UAAAG,SAMAY,eAAA,WACA,OAAAxX,KAAAoX,cAAApX,KAAAsX,qBAMAG,eAAA,WACA,OAAAzX,KAAAoX,cAAApX,KAAAuX,qBAGAG,MAAA,WACA1X,KAAA2X,QAAA,IAMAC,QAAA,WACA5X,KAAA6X,OACAjC,GAAA5V,KAAA6X,MAAA7X,OAIA8X,kBAAA,WACA,IACA9R,EADAhG,KACAmW,mBACA,OAAAnQ,GAAA,IAAAA,EAAA,CACA+R,OAHA/X,KAGAoN,MACA4K,cAJAhY,KAIA6G,SAIAoR,eAAA,SAAApR,GACA,IACAb,EADAhG,KACAoW,gBACA,OAAApQ,GAAA,IAAAA,EAAA,CACA+R,OAHA/X,KAGAoN,MACA4K,cAJAhY,KAIA6G,MACAqR,OAAArR,KAIAyP,YAAA,WACA,IAIAtiB,EAAA2U,EAHA6N,EADAxW,KACAyW,UACAQ,EAFAjX,KAEA2W,aAAAM,MAAA,GACAkB,EAAA3B,EAAAS,KAGA,IAAAjjB,EAAA,EAAA2U,EAAAsO,EAAAnX,OAAiC9L,EAAA2U,IAAU3U,EAC3CmkB,EAAAnkB,GAAAmkB,EAAAnkB,IAPAgM,KAOAiY,eAAAjkB,GAGAwiB,EAAAE,QAAAF,EAAAE,SAVA1W,KAUA8X,qBAGAM,mBAAA,SAAAvR,GACA,IAAAwR,EAAArY,KAAAiY,eAAApR,GACA7G,KAAAyW,UAAAQ,KAAA3B,OAAAzO,EAAA,EAAAwR,GACArY,KAAAsY,cAAAD,EAAAxR,GAAA,IAGA0R,sBAAA,WACA,IAzMAlO,EAAAwL,EAyMAhM,EAAA7J,KACA0W,EAAA7M,EAAA8M,aACAM,EAAAP,EAAAO,OAAAP,EAAAO,KAAA,IAKApN,EAAAgO,QAAAZ,IACApN,EAAAgO,OAEAjC,GAAA/L,EAAAgO,MAAAhO,GAGAoN,GAAA1P,OAAAiR,aAAAvB,KAtNApB,EAuNAhM,GAvNAQ,EAuNA4M,GAtNAlB,SACA1L,EAAA0L,SAAAC,UAAAd,KAAAW,IAIAtO,OAAA2M,eAAA7J,EAAA,YACAoO,cAAA,EACAC,YAAA,EACA1V,MAAA,CACAgT,UAAA,CAAAH,MAIAF,GAAAlV,QAAA,SAAA1B,GACA,IAAA4Z,EAAA,SAAA5Z,EAAA0H,OAAA,GAAA/D,cAAA3D,EAAAO,MAAA,GACAsZ,EAAAvO,EAAAtL,GAEAwI,OAAA2M,eAAA7J,EAAAtL,EAAA,CACA0Z,cAAA,EACAC,YAAA,EACA1V,MAAA,WACA,IAAAlT,EAAAsP,MAAAC,UAAAC,MAAAC,KAAAC,WACAqZ,EAAAD,EAAA1Q,MAAAlI,KAAAlQ,GAQA,OANAoiB,GAAA/J,KAAAkC,EAAA0L,SAAAC,UAAA,SAAA8C,GACA,mBAAAA,EAAAH,IACAG,EAAAH,GAAAzQ,MAAA4Q,EAAAhpB,KAIA+oB,SA0LAhP,EAAAgO,MAAAZ,GAKApN,EAAAkP,kBAGApB,OAAAzF,GAAA/K,KAEA0L,WAAA,SAAAmG,GAMA,IALA,IAAAxC,EAAAxW,KAAAyW,UACAwC,EAAAzC,EAAAS,MAAA,GACAtO,EAAAsQ,EAAAnZ,OACA9L,EAAA,EAEQA,EAAA2U,IAAU3U,EAClBilB,EAAAjlB,GAAA6e,WAAAmG,GAGAxC,EAAAE,SACAF,EAAAE,QAAA7D,WAAAmG,IAIAE,KAAA,WACA,IAAA1C,EAAAxW,KAAAyW,UACAwC,EAAAzC,EAAAS,MAAA,GACAtO,EAAAsQ,EAAAnZ,OACA9L,EAAA,EAMA,IAJAwiB,EAAAE,SACAF,EAAAE,QAAAwC,OAGQllB,EAAA2U,IAAU3U,EAClBilB,EAAAjlB,GAAAklB,QAIAC,iBAAA,SAAAd,GACAnG,GAAA9I,MAAAiP,EAAA1F,OAAA0F,EAAAe,gBAAA,WACAf,EAAAe,gBAGAC,cAAA,SAAAhB,GACA,IAAA3B,EAAA1W,KAAAoN,MAAA6J,KAAAC,SAAAmB,EAAAL,eACAnR,EAAAwR,EAAAH,OACAoB,EAAAjB,EAAAiB,QAAA,GACAvG,EAAAsF,EAAA1F,OACA4G,EAAArH,GAAAqH,cAEAlB,EAAAe,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,aAGA3G,EAAAyG,gBAAAzH,GAAA,CAAAuH,EAAAK,qBAAAjD,EAAAiD,qBAAAJ,EAAAxG,EAAAyG,uBAAA3Z,EAAAgH,GACAkM,EAAA0G,YAAA1H,GAAA,CAAAuH,EAAAM,iBAAAlD,EAAAkD,iBAAAL,EAAAxG,EAAA0G,mBAAA5Z,EAAAgH,GACAkM,EAAA2G,YAAA3H,GAAA,CAAAuH,EAAAO,iBAAAnD,EAAAmD,iBAAA9G,EAAA2G,kBAAA7Z,EAAAgH,IAMAkS,eAAA,WACA,IACAvC,EADAxW,KACAyW,UACAQ,EAFAjX,KAEA2W,aAAAM,KACA6C,EAAAtD,EAAAS,KAAAnX,OACAia,EAAA9C,EAAAnX,OAEAia,EAAAD,EACAtD,EAAAS,KAAA3B,OAAAyE,EAAAD,EAAAC,GACGA,EAAAD,GARH9Z,KASAga,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAhH,EAAAiH,GACA,QAAAjmB,EAAA,EAAiBA,EAAAimB,IAAWjmB,EAC5BgM,KAAAoY,mBAAApF,EAAAhf,IAOAkmB,WAAA,WACA,IAAAD,EAAAza,UAAAM,OACAE,KAAAga,eAAAha,KAAA2W,aAAAM,KAAAnX,OAAAma,MAMAE,UAAA,WACAna,KAAAyW,UAAAQ,KAAAmD,OAMAC,YAAA,WACAra,KAAAyW,UAAAQ,KAAAqD,SAMAC,aAAA,SAAAvH,EAAAiH,GACAja,KAAAyW,UAAAQ,KAAA3B,OAAAtC,EAAAiH,GACAja,KAAAga,eAAAhH,EAAAxT,UAAAM,OAAA,IAMA0a,cAAA,WACAxa,KAAAga,eAAA,EAAAxa,UAAAM,WAIAmW,GAAAxM,OAAAyI,GAAAvI,SAEA,IAAA8Q,GAAAxE,GAEAjF,GAAAT,KAAA,UACA0I,SAAA,CACAjL,IAAA,CACAwL,gBAAAxI,GAAAO,OAAAd,aACAgJ,YAAA,OACAC,YAAA,EACAgB,YAAA,aAKA,IAAAC,GAAAjH,GAAAjK,OAAA,CACAmR,aAAA,SAAAC,GACA,IAAAC,EAAA9a,KAAA0S,MAEA,QAAAoI,GACA/nB,KAAAQ,IAAAsnB,EAAAC,EAAAtnB,EAAA,GAAAT,KAAAQ,IAAAunB,EAAApN,OAAAoN,EAAAC,YAAA,IAKAC,QAAA,SAAAC,EAAAC,GACA,IAAAJ,EAAA9a,KAAA0S,MAEA,GAAAoI,EAAA,CAQA,IAPA,IAAAK,EAAAjJ,GAAAkJ,kBAAAN,EAAA,CAAgEtnB,EAAAynB,EAAAxnB,EAAAynB,IAChEG,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SAGAC,EAAAT,EAAAS,WACAC,EAAAV,EAAAU,SACAA,EAAAD,GACAC,GAAA,EAAAzoB,KAAAqC,GAEA,KAAAimB,EAAAG,GACAH,GAAA,EAAAtoB,KAAAqC,GAEA,KAAAimB,EAAAE,GACAF,GAAA,EAAAtoB,KAAAqC,GAIA,IAAAqmB,EAAAJ,GAAAE,GAAAF,GAAAG,EACAE,EAAAJ,GAAAR,EAAAa,aAAAL,GAAAR,EAAAc,YAEA,OAAAH,GAAAC,EAEA,UAGAG,eAAA,WACA,IAAAf,EAAA9a,KAAA0S,MACAoJ,GAAAhB,EAAAS,WAAAT,EAAAU,UAAA,EACAO,GAAAjB,EAAAa,YAAAb,EAAAc,aAAA,EACA,OACApoB,EAAAsnB,EAAAtnB,EAAAT,KAAAwC,IAAAumB,GAAAC,EACAtoB,EAAAqnB,EAAArnB,EAAAV,KAAAyC,IAAAsmB,GAAAC,IAIAC,QAAA,WACA,IAAAlB,EAAA9a,KAAA0S,MACA,OAAA3f,KAAAqC,KAAA0lB,EAAAU,SAAAV,EAAAS,aAAA,EAAAxoB,KAAAqC,MAAArC,KAAAQ,IAAAunB,EAAAc,YAAA,GAAA7oB,KAAAQ,IAAAunB,EAAAa,YAAA,KAGApI,gBAAA,WACA,IAAAuH,EAAA9a,KAAA0S,MACAuJ,EAAAnB,EAAAS,YAAAT,EAAAU,SAAAV,EAAAS,YAAA,EACAW,GAAApB,EAAAc,YAAAd,EAAAa,aAAA,EAAAb,EAAAa,YAEA,OACAnoB,EAAAsnB,EAAAtnB,EAAAT,KAAAwC,IAAA0mB,GAAAC,EACAzoB,EAAAqnB,EAAArnB,EAAAV,KAAAyC,IAAAymB,GAAAC,IAIAhD,KAAA,WACA,IAKAiD,EALA9O,EAAArN,KAAA+X,OAAA1K,IACAyN,EAAA9a,KAAA0S,MACA0J,EAAAtB,EAAAS,WACAc,EAAAvB,EAAAU,SACAc,EAAA,UAAAxB,EAAAJ,YAAA,MAGArN,EAAAgC,OAEAhC,EAAAsB,YACAtB,EAAAW,IAAA8M,EAAAtnB,EAAAsnB,EAAArnB,EAAAV,KAAAC,IAAA8nB,EAAAc,YAAAU,EAAA,GAAAF,EAAAC,GACAhP,EAAAW,IAAA8M,EAAAtnB,EAAAsnB,EAAArnB,EAAAqnB,EAAAa,YAAAU,EAAAD,GAAA,GACA/O,EAAAY,YAEAZ,EAAAkP,UAAAzB,EAAAtB,gBACAnM,EAAAyB,OAEAgM,EAAApB,cACA,UAAAoB,EAAAJ,aAGArN,EAAAsB,YACAwN,EAAAG,EAAAxB,EAAAc,YACAvO,EAAAW,IAAA8M,EAAAtnB,EAAAsnB,EAAArnB,EAAAqnB,EAAAc,YAAAQ,EAAAD,EAAAE,EAAAF,GACArB,EAAAa,YAAAW,GACAH,EAAAG,EAAAxB,EAAAa,YACAtO,EAAAW,IAAA8M,EAAAtnB,EAAAsnB,EAAArnB,EAAAqnB,EAAAa,YAAAW,EAAAD,EAAAF,EAAAC,EAAAD,GAAA,IAEA9O,EAAAW,IAAA8M,EAAAtnB,EAAAsnB,EAAArnB,EAAA6oB,EAAAD,EAAAtpB,KAAAqC,GAAA,EAAAgnB,EAAArpB,KAAAqC,GAAA,GAEAiY,EAAAY,YACAZ,EAAAiC,OAEAjC,EAAAsB,YACAtB,EAAAW,IAAA8M,EAAAtnB,EAAAsnB,EAAArnB,EAAAqnB,EAAAc,YAAAQ,EAAAC,GACAhP,EAAAW,IAAA8M,EAAAtnB,EAAAsnB,EAAArnB,EAAAqnB,EAAAa,YAAAU,EAAAD,GAAA,GACA/O,EAAAY,YAEAZ,EAAAmP,UAAA,EAAA1B,EAAApB,YACArM,EAAAoP,SAAA,UAEApP,EAAAmP,UAAA1B,EAAApB,YACArM,EAAAoP,SAAA,SAGApP,EAAAqP,YAAA5B,EAAArB,YACApM,EAAA0B,UAGA1B,EAAAmC,aAIAmN,GAAAzK,GAAAtK,eAEA6I,GAAAO,GAAAO,OAAAd,aAEAO,GAAAT,KAAA,UACA0I,SAAA,CACA2D,KAAA,CACA9M,QAAA,GACA0J,gBAAA/I,GACAiJ,YAAA,EACAD,YAAAhJ,GACAoM,eAAA,OACAC,WAAA,GACAC,iBAAA,EACAC,gBAAA,QACAC,iBAAA,EACAnO,MAAA,MAKA,IAAAoO,GAAAxJ,GAAAjK,OAAA,CACAyP,KAAA,WACA,IAQArS,EAAAsW,EAAA1N,EAAA2N,EAPAtC,EADA9a,KACA0S,MACArF,EAFArN,KAEA+X,OAAA1K,IACAgQ,EAAAvC,EAAAuC,SACAC,EAJAtd,KAIAud,UAAAje,QACAgS,EAAAN,GAAAO,OACAiM,EAAAlM,EAAA2H,SAAA2D,KACAa,GAAA,EA2BA,IAlCAzd,KAWA0d,OAAAJ,EAAAxd,QACAwd,EAAApI,KAAAoI,EAAA,IAGAjQ,EAAAgC,OAGAhC,EAAAsQ,QAAA7C,EAAA+B,gBAAAW,EAAAX,eAGAxP,EAAAuQ,aACAvQ,EAAAuQ,YAAA9C,EAAAgC,YAAAU,EAAAV,YAGAzP,EAAAwQ,eAAAlB,GAAA7B,EAAAiC,iBAAAS,EAAAT,kBACA1P,EAAAoP,SAAA3B,EAAAkC,iBAAAQ,EAAAR,gBACA3P,EAAAmP,UAAAG,GAAA7B,EAAApB,YAAA8D,EAAA9D,aACArM,EAAAqP,YAAA5B,EAAArB,aAAAnI,EAAAb,aAGApD,EAAAsB,YACA8O,GAAA,EAEA5W,EAAA,EAAiBA,EAAAyW,EAAAxd,SAAuB+G,EACxCsW,EAAAG,EAAAzW,GACA4I,EAAAyC,GAAA4L,aAAAR,EAAAzW,GACAuW,EAAAD,EAAAzK,MAGA,IAAA7L,EACAuW,EAAAW,OACA1Q,EAAAU,OAAAqP,EAAA5pB,EAAA4pB,EAAA3pB,GACAgqB,EAAA5W,IAGA4I,GAAA,IAAAgO,EAAAhO,EAAA6N,EAAAG,GAEAL,EAAAW,OACAN,IAAA5W,EAAA,IAAAwW,IAAA,IAAAI,EAEApQ,EAAAU,OAAAqP,EAAA5pB,EAAA4pB,EAAA3pB,GAGAye,GAAAE,OAAAxD,OAAAvB,EAAAoC,EAAAiD,MAAAyK,EAAAzK,OAEA+K,EAAA5W,IAKAwG,EAAA0B,SACA1B,EAAAmC,aAIAwO,GAAA9L,GAAAtK,eAEAqW,GAAAjN,GAAAO,OAAAd,aAkBA,SAAAyN,GAAArD,GACA,IAAAC,EAAA9a,KAAA0S,MACA,QAAAoI,GAAA/nB,KAAAorB,IAAAtD,EAAAC,EAAAtnB,GAAAsnB,EAAApN,OAAAoN,EAAAsD,UAlBApN,GAAAT,KAAA,UACA0I,SAAA,CACA/J,MAAA,CACAxB,OAAA,EACA2Q,WAAA,SACA7E,gBAAAyE,GACAxE,YAAAwE,GACAvE,YAAA,EAEA0E,UAAA,EACArD,YAAA,EACAlB,iBAAA,MAeA,IAAAyE,GAAA5K,GAAAjK,OAAA,CACAuR,QAAA,SAAAH,EAAA0D,GACA,IAAAzD,EAAA9a,KAAA0S,MACA,QAAAoI,GAAA/nB,KAAAQ,IAAAsnB,EAAAC,EAAAtnB,EAAA,GAAAT,KAAAQ,IAAAgrB,EAAAzD,EAAArnB,EAAA,GAAAV,KAAAQ,IAAAunB,EAAAsD,UAAAtD,EAAApN,OAAA,IAGAkN,aAAAsD,GACAM,SAAAN,GACAO,SAbA,SAAAF,GACA,IAAAzD,EAAA9a,KAAA0S,MACA,QAAAoI,GAAA/nB,KAAAorB,IAAAI,EAAAzD,EAAArnB,GAAAqnB,EAAApN,OAAAoN,EAAAsD,WAaAvC,eAAA,WACA,IAAAf,EAAA9a,KAAA0S,MACA,OACAlf,EAAAsnB,EAAAtnB,EACAC,EAAAqnB,EAAArnB,IAIAuoB,QAAA,WACA,OAAAjpB,KAAAqC,GAAArC,KAAAQ,IAAAyM,KAAA0S,MAAAhF,OAAA,IAGA6F,gBAAA,WACA,IAAAuH,EAAA9a,KAAA0S,MACA,OACAlf,EAAAsnB,EAAAtnB,EACAC,EAAAqnB,EAAArnB,EACAirB,QAAA5D,EAAApN,OAAAoN,EAAApB,cAIAR,KAAA,SAAAyF,GACA,IAAA7D,EAAA9a,KAAA0S,MACArF,EAAArN,KAAA+X,OAAA1K,IACAgR,EAAAvD,EAAAuD,WACAhQ,EAAAyM,EAAAzM,SACAX,EAAAoN,EAAApN,OACAla,EAAAsnB,EAAAtnB,EACAC,EAAAqnB,EAAArnB,EACA6d,EAAAN,GAAAO,OACAd,EAAAa,EAAAb,aAEAqK,EAAAiD,YAKAle,IAAA8e,GAAAzM,GAAAE,OAAAnD,eAAA6L,EAAA6D,MACAtR,EAAAqP,YAAA5B,EAAArB,aAAAhJ,EACApD,EAAAmP,UAAAwB,GAAAlD,EAAApB,YAAApI,EAAA2H,SAAA/J,MAAAwK,aACArM,EAAAkP,UAAAzB,EAAAtB,iBAAA/I,EACAyB,GAAAE,OAAAjE,UAAAd,EAAAgR,EAAA3Q,EAAAla,EAAAC,EAAA4a,OAKAuQ,GAAA5N,GAAAO,OAAAd,aAaA,SAAAoO,GAAA/D,GACA,OAAAA,QAAAjb,IAAAib,EAAAvN,MASA,SAAAuR,GAAAhE,GACA,IAAAiE,EAAAC,EAAAC,EAAAjqB,EAAAkqB,EAgBA,OAdAL,GAAA/D,IACAoE,EAAApE,EAAAvN,MAAA,EACAwR,EAAAjE,EAAAtnB,EAAA0rB,EACAF,EAAAlE,EAAAtnB,EAAA0rB,EACAD,EAAAlsB,KAAAD,IAAAgoB,EAAArnB,EAAAqnB,EAAAlC,MACA5jB,EAAAjC,KAAAC,IAAA8nB,EAAArnB,EAAAqnB,EAAAlC,QAEAsG,EAAApE,EAAAtN,OAAA,EACAuR,EAAAhsB,KAAAD,IAAAgoB,EAAAtnB,EAAAsnB,EAAAlC,MACAoG,EAAAjsB,KAAAC,IAAA8nB,EAAAtnB,EAAAsnB,EAAAlC,MACAqG,EAAAnE,EAAArnB,EAAAyrB,EACAlqB,EAAA8lB,EAAArnB,EAAAyrB,GAGA,CACAvR,KAAAoR,EACAnR,IAAAqR,EACApR,MAAAmR,EACAlR,OAAA9Y,GAIA,SAAAmqB,GAAAC,EAAAvW,EAAAwW,GACA,OAAAD,IAAAvW,EAAAwW,EAAAD,IAAAC,EAAAxW,EAAAuW,EAuBA,SAAAE,GAAAxE,EAAAyE,EAAAC,GACA,IAEAlrB,EAAA3B,EAAAE,EAAAxC,EAFA2S,EAAA8X,EAAApB,YACAqE,EAtBA,SAAAjD,GACA,IAAA2E,EAAA3E,EAAA4E,cACA7G,EAAA,GAEA,OAAA4G,GAIA3E,EAAA6E,WACA7E,EAAAlC,KAAAkC,EAAAtnB,IACAisB,EAAAN,GAAAM,EAAA,iBAEE3E,EAAAlC,KAAAkC,EAAArnB,IACFgsB,EAAAN,GAAAM,EAAA,iBAGA5G,EAAA4G,IAAA,EACA5G,GAZAA,EAiBA+G,CAAA9E,GAYA,OATA5I,GAAAzK,SAAAzE,IACA1O,GAAA0O,EAAA4K,KAAA,EACAjb,GAAAqQ,EAAA6K,OAAA,EACAhb,GAAAmQ,EAAA8K,QAAA,EACAzd,GAAA2S,EAAA2K,MAAA,GAEArZ,EAAA3B,EAAAE,EAAAxC,GAAA2S,GAAA,EAGA,CACA1O,EAAAypB,EAAAnQ,KAAAtZ,EAAA,IAAAA,EAAAkrB,IAAAlrB,EACA3B,EAAAorB,EAAAlQ,OAAAlb,EAAA,IAAAA,EAAA4sB,IAAA5sB,EACAE,EAAAkrB,EAAAjQ,QAAAjb,EAAA,IAAAA,EAAA2sB,IAAA3sB,EACAxC,EAAA0tB,EAAApQ,MAAAtd,EAAA,IAAAA,EAAAkvB,IAAAlvB,GA0BA,SAAA2qB,GAAAF,EAAAtnB,EAAAC,GACA,IAAAosB,EAAA,OAAArsB,EACAssB,EAAA,OAAArsB,EACAssB,KAAAjF,GAAA+E,GAAAC,IAAAhB,GAAAhE,GAEA,OAAAiF,IACAF,GAAArsB,GAAAusB,EAAApS,MAAAna,GAAAusB,EAAAlS,SACAiS,GAAArsB,GAAAssB,EAAAnS,KAAAna,GAAAssB,EAAAjS,QAzHAkD,GAAAT,KAAA,UACA0I,SAAA,CACA+G,UAAA,CACAxG,gBAAAoF,GACAnF,YAAAmF,GACAc,cAAA,SACAhG,YAAA,MAsHA,IAAAuG,GAAAvM,GAAAjK,OAAA,CACAyP,KAAA,WACA,IAAA7L,EAAArN,KAAA+X,OAAA1K,IACAyN,EAAA9a,KAAA0S,MACAwN,EApCA,SAAApF,GACA,IAAAiF,EAAAjB,GAAAhE,GACAvN,EAAAwS,EAAAlS,MAAAkS,EAAApS,KACAH,EAAAuS,EAAAjS,OAAAiS,EAAAnS,IACAuS,EAAAb,GAAAxE,EAAAvN,EAAA,EAAAC,EAAA,GAEA,OACA4S,MAAA,CACA5sB,EAAAusB,EAAApS,KACAla,EAAAssB,EAAAnS,IACA1a,EAAAqa,EACApd,EAAAqd,GAEA6S,MAAA,CACA7sB,EAAAusB,EAAApS,KAAAwS,EAAA9vB,EACAoD,EAAAssB,EAAAnS,IAAAuS,EAAA7rB,EACApB,EAAAqa,EAAA4S,EAAA9vB,EAAA8vB,EAAAxtB,EACAxC,EAAAqd,EAAA2S,EAAA7rB,EAAA6rB,EAAAttB,IAmBAytB,CAAAxF,GACAsF,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MAEAhT,EAAAkP,UAAAzB,EAAAtB,gBACAnM,EAAAkT,SAAAH,EAAA5sB,EAAA4sB,EAAA3sB,EAAA2sB,EAAAltB,EAAAktB,EAAAjwB,GAEAiwB,EAAAltB,IAAAmtB,EAAAntB,GAAAktB,EAAAjwB,IAAAkwB,EAAAlwB,IAIAkd,EAAAgC,OACAhC,EAAAsB,YACAtB,EAAAa,KAAAkS,EAAA5sB,EAAA4sB,EAAA3sB,EAAA2sB,EAAAltB,EAAAktB,EAAAjwB,GACAkd,EAAAiC,OACAjC,EAAAkP,UAAAzB,EAAArB,YACApM,EAAAa,KAAAmS,EAAA7sB,EAAA6sB,EAAA5sB,EAAA4sB,EAAAntB,EAAAmtB,EAAAlwB,GACAkd,EAAAyB,KAAA,WACAzB,EAAAmC,YAGAhC,OAAA,WACA,IAAAsN,EAAA9a,KAAA0S,MACA,OAAAoI,EAAAlC,KAAAkC,EAAArnB,GAGAunB,QAAA,SAAAH,EAAA0D,GACA,OAAAvD,GAAAhb,KAAA0S,MAAAmI,EAAA0D,IAGA3D,aAAA,SAAAC,EAAA0D,GACA,IAAAzD,EAAA9a,KAAA0S,MACA,OAAAmM,GAAA/D,GACAE,GAAAF,EAAAD,EAAA,MACAG,GAAAF,EAAA,KAAAyD,IAGAC,SAAA,SAAA3D,GACA,OAAAG,GAAAhb,KAAA0S,MAAAmI,EAAA,OAGA4D,SAAA,SAAAF,GACA,OAAAvD,GAAAhb,KAAA0S,MAAA,KAAA6L,IAGA1C,eAAA,WACA,IACAroB,EAAAC,EADAqnB,EAAA9a,KAAA0S,MAUA,OARAmM,GAAA/D,IACAtnB,EAAAsnB,EAAAtnB,EACAC,GAAAqnB,EAAArnB,EAAAqnB,EAAAlC,MAAA,IAEAplB,GAAAsnB,EAAAtnB,EAAAsnB,EAAAlC,MAAA,EACAnlB,EAAAqnB,EAAArnB,GAGA,CAAUD,IAAAC,MAGVuoB,QAAA,WACA,IAAAlB,EAAA9a,KAAA0S,MAEA,OAAAmM,GAAA/D,GACAA,EAAAvN,MAAAxa,KAAAorB,IAAArD,EAAArnB,EAAAqnB,EAAAlC,MACAkC,EAAAtN,OAAAza,KAAAorB,IAAArD,EAAAtnB,EAAAsnB,EAAAlC,OAGArF,gBAAA,WACA,IAAAuH,EAAA9a,KAAA0S,MACA,OACAlf,EAAAsnB,EAAAtnB,EACAC,EAAAqnB,EAAArnB,MAKAwlB,GAAA,GACAuH,GAAA7F,GACA8F,GAAAvD,GACAwD,GAAApC,GACAqC,GAAAV,GACAhH,GAAAuH,OACAvH,GAAAwH,QACAxH,GAAAyH,SACAzH,GAAA0H,aAEA,IAAAC,GAAA1O,GAAAjJ,QAAA8I,QAEAf,GAAAT,KAAA,OACAsQ,MAAA,CACAC,KAAA,SAGAjK,OAAA,CACAC,MAAA,EACA9Q,KAAA,WACA+a,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,KAIAnK,MAAA,EACAhR,KAAA,cA4FA,IAAAob,GAAA3G,GAAAhR,OAAA,CAEA2M,gBAAA6C,GAAA0H,UAEApO,WAAA,WACA,IACAiE,EAEAiE,GAAApb,UAAAkT,WAAArK,MAHAlI,KAGAR,YAEAgX,EALAxW,KAKAyW,WACA4K,MANArhB,KAMA2W,aAAA0K,MACA7K,EAAA8K,KAAA,GAGA3J,OAAA,SAAAD,GACA,IAEA1jB,EAAA2U,EADAuX,EADAlgB,KACAyW,UAAAQ,KAKA,IANAjX,KAIAuhB,OAJAvhB,KAIAwhB,WAEAxtB,EAAA,EAAA2U,EAAAuX,EAAApgB,OAAkC9L,EAAA2U,IAAU3U,EAN5CgM,KAOAsY,cAAA4H,EAAAlsB,KAAA0jB,IAIAY,cAAA,SAAA0H,EAAAnZ,EAAA6Q,GACA,IAAA7N,EAAA7J,KACAwW,EAAA3M,EAAA4M,UACAC,EAAA7M,EAAA8M,aACA1N,EAAAY,EAAA4X,uBAAAzB,EAAAnZ,GAEAmZ,EAAA0B,QAAA7X,EAAAuN,cAAAZ,EAAAI,SACAoJ,EAAA2B,QAAA9X,EAAAuN,cAAAZ,EAAAO,SACAiJ,EAAAhI,cAAAnO,EAAAhD,MACAmZ,EAAA9H,OAAArR,EACAmZ,EAAArN,OAAA,CACA6G,gBAAAvQ,EAAAuQ,gBACAC,YAAAxQ,EAAAwQ,YACAiG,cAAAzW,EAAAyW,cACAhG,YAAAzQ,EAAAyQ,YACAkI,aAAAlL,EAAAmL,MACAA,MAAAhY,EAAAuD,MAAA6J,KAAA6K,OAAAjb,IAGAgD,EAAAkY,uBAAA/B,EAAAnZ,EAAA6Q,GAEAsI,EAAAvN,SAMAsP,uBAAA,SAAA/B,EAAAnZ,EAAA6Q,GACA,IAAA7N,EAAA7J,KACA+S,EAAAiN,EAAArN,OACAqP,EAAAnY,EAAA2N,iBACAoB,EAAAoJ,EAAAC,eACAtC,EAAAqC,EAAAE,eACAC,EAAAtY,EAAA0X,QAAA1X,EAAA2X,WACAY,EAAAvY,EAAAwY,wBAAAxY,EAAAhD,SACAyb,EAAAzY,EAAA0Y,wBAAA1Y,EAAAhD,QAAAsb,GAEApP,EAAA4M,aACA5M,EAAA6F,KAAAlB,EAAAkB,EAAAwJ,EAAAxJ,KACA7F,EAAAvf,EAAAmsB,EAAAjI,EAAAkB,EAAAwJ,EAAAI,KAAAF,EAAAG,OACA1P,EAAAtf,EAAAksB,EAAA2C,EAAAG,OAAA/K,EAAAkB,EAAAwJ,EAAAI,KACAzP,EAAAvF,OAAAmS,EAAA2C,EAAA9T,UAAA3O,EACAkT,EAAAxF,MAAAoS,OAAA9f,EAAAyiB,EAAA9T,MASAkU,WAAA,SAAAC,GACA,IAMA3uB,EAAAwiB,EALApJ,EADApN,KACAoN,MACA/K,EAFArC,KAEAyX,iBACAmL,EAAAvgB,EAAA4G,QAAA2Z,QACAja,OAAA9I,IAAA8iB,EAAAvV,EAAA6J,KAAAC,SAAApX,OAAA6iB,EAAA,EACAE,EAAA,GAGA,IAAA7uB,EAAA,EAAaA,EAAA2U,IAAU3U,GACvBwiB,EAAApJ,EAAA+J,eAAAnjB,IACAstB,KAAAlU,EAAA0V,iBAAA9uB,MACA,IAAA4uB,IACA,IAAAA,IAAA,IAAAC,EAAAzY,QAAAoM,EAAA6K,aACAxhB,IAAA+iB,SAAA/iB,IAAA2W,EAAA6K,QAAA,IAAAwB,EAAAzY,QAAAoM,EAAA6K,UACAwB,EAAA3N,KAAAsB,EAAA6K,OAIA,OAAAwB,GAOAE,cAAA,WACA,OAAA/iB,KAAA0iB,aAAA5iB,QAUAkjB,cAAA,SAAA9M,EAAAvT,GACA,IAAAkgB,EAAA7iB,KAAA0iB,WAAAxM,GACArP,OAAAhH,IAAA8C,EACAkgB,EAAAzY,QAAAzH,IACA,EAEA,WAAAkE,EACAgc,EAAA/iB,OAAA,EACA+G,GAMA2a,SAAA,WACA,IAQAxtB,EAAA2U,EAPAtG,EADArC,KACAyX,iBACAwL,EAFAjjB,KAEA+iB,gBACA7M,EAHAlW,KAGA6G,MACAqb,EAAA7f,EAAA6f,eACAlP,EAAAkP,EAAA7f,EAAAsL,KAAAtL,EAAAuL,IACAsV,EAAAlQ,GAAAkP,EAAA7f,EAAAkL,MAAAlL,EAAAmL,QACA2V,EAAA,GAGA,IAAAnvB,EAAA,EAAA2U,EAVA3I,KAUAyW,UAAAQ,KAAAnX,OAA8C9L,EAAA2U,IAAU3U,EACxDmvB,EAAAjO,KAAA7S,EAAA+gB,iBAAA,KAAApvB,EAAAkiB,IAOA,OACApjB,IALAof,GAAA7K,cAAAhF,EAAA4G,QAAAoa,cAnOA,SAAAhhB,EAAA8gB,GACA,IAEAG,EAAAC,EAAAvvB,EAAA2U,EAFA7V,EAAAuP,EAAA6f,eAAA7f,EAAAkL,MAAAlL,EAAAmL,OACAgW,EAAAnhB,EAAAohB,WAGA,IAAAzvB,EAAA,EAAA2U,EAAAwa,EAAArjB,OAAkC9L,EAAA2U,IAAU3U,EAC5ClB,EAAAC,KAAAD,MAAAC,KAAAorB,IAAAgF,EAAAnvB,GAAAmvB,EAAAnvB,EAAA,KAGA,IAAAA,EAAA,EAAA2U,EAAA6a,EAAA1jB,OAAiC9L,EAAA2U,IAAU3U,EAC3CuvB,EAAAlhB,EAAAqhB,gBAAA1vB,GACAlB,EAAAkB,EAAA,EAAAjB,KAAAD,MAAAywB,EAAAD,GAAAxwB,EACAwwB,EAAAC,EAGA,OAAAzwB,EAqNA6wB,CAAAthB,EAAA8gB,IACA,EAIAA,SACAnQ,QACAkQ,MACAD,aACA5gB,UAQAggB,wBAAA,SAAAnM,EAAArP,GACA,IAWA7S,EAAA4vB,EAAAC,EAAAjL,EAAA4J,EAAAhU,EAVApB,EADApN,KACAoN,MACAoJ,EAFAxW,KAEAyW,UACApU,EAHArC,KAGAwX,iBACA0K,EAAA7f,EAAA6f,eACAhL,EAAA9J,EAAA6J,KAAAC,SACAlU,GAAAX,EAAAyhB,cAAA5M,EAAAhB,GAAAe,KAAApQ,IACAkd,EAAA1hB,EAAA4G,QAAA8a,aACAnB,EAAAvgB,EAAA4G,QAAA2Z,QACAvB,EAAA7K,EAAA6K,MACArO,EAAA,EAGA,GAAA4P,QAAA/iB,IAAA+iB,QAAA/iB,IAAAwhB,EACA,IAAArtB,EAAA,EAAcA,EAAAkiB,IAAkBliB,GAChC4vB,EAAAxW,EAAA+J,eAAAnjB,IAEAstB,KACAsC,EAAAvC,WACAuC,EAAAI,WAAA1M,qBAAAjV,EAAA2E,IACAoG,EAAA0V,iBAAA9uB,KAEA6vB,GAAAxhB,EAAAyhB,cAAA5M,EAAAljB,GAAAijB,KAAApQ,KACA7D,EAAA,GAAA6gB,EAAA,GAAA7gB,GAAA,GAAA6gB,EAAA,KACA7Q,GAAA6Q,IAmBA,OAbAjL,EAAAvW,EAAA+gB,iBAAApQ,GACAwP,EAAAngB,EAAA+gB,iBAAApQ,EAAAhQ,GACAwL,EAAAgU,EAAA5J,OAEA/Y,IAAAkkB,GAAAhxB,KAAAorB,IAAA3P,GAAAuV,IACAvV,EAAAuV,EAEAvB,EADAxf,GAAA,IAAAkf,GAAAlf,EAAA,GAAAkf,EACAtJ,EAAAmL,EAEAnL,EAAAmL,GAIA,CACAvV,OACAoK,OACA4J,OACAC,OAAAD,EAAAhU,EAAA,IAOA+T,wBAAA,SAAArM,EAAArP,EAAAsb,GACA,IACAlZ,EAAAkZ,EAAA9f,MAAA4G,QACAgb,EAAA,SAAAhb,EAAAoa,aAzPA,SAAAxc,EAAAsb,EAAAlZ,GACA,IAKA+J,EALAmQ,EAAAhB,EAAAgB,OACAI,EAAAJ,EAAAtc,GACAyc,EAAAzc,EAAA,EAAAsc,EAAAtc,EAAA,QACAqd,EAAArd,EAAAsc,EAAArjB,OAAA,EAAAqjB,EAAAtc,EAAA,QACAsd,EAAAlb,EAAA8X,mBAiBA,OAdA,OAAAuC,IAGAA,EAAAC,GAAA,OAAAW,EAAA/B,EAAAe,IAAAf,EAAAnP,MAAAkR,EAAAX,IAGA,OAAAW,IAEAA,EAAAX,IAAAD,GAGAtQ,EAAAuQ,KAAAxwB,KAAAD,IAAAwwB,EAAAY,IAAA,EAAAC,EAGA,CACAC,MAHArxB,KAAAorB,IAAA+F,EAAAZ,GAAA,EAAAa,EAGAhC,EAAAc,WACAtuB,MAAAsU,EAAA+X,cACAhO,SAiOAqR,CAAAxd,EAAAsb,EAAAlZ,GAxRA,SAAApC,EAAAsb,EAAAlZ,GACA,IAGAuF,EAAA7Z,EAHA2vB,EAAArb,EAAAoa,aACApJ,EAAAkI,EAAAc,WACAM,EAAApB,EAAAgB,OAAAtc,GAcA,OAXAqL,GAAA7K,cAAAid,IACA9V,EAAA2T,EAAArvB,IAAAmW,EAAA8X,mBACApsB,EAAAsU,EAAA+X,gBAKAxS,EAAA8V,EAAArK,EACAtlB,EAAA,GAGA,CACAyvB,MAAA5V,EAAAyL,EACAtlB,QACAqe,MAAAuQ,EAAA/U,EAAA,GAqQA+V,CAAA1d,EAAAsb,EAAAlZ,GAEAub,EANAxkB,KAMAgjB,cAAA9M,EANAlW,KAMAyW,UAAA4K,OACAoB,EAAAwB,EAAAjR,MAAAiR,EAAAG,MAAAI,EAAAP,EAAAG,MAAA,EACA5V,EAAAzb,KAAAD,IACAof,GAAAtK,eAAAqB,EAAAwb,gBAAAC,KACAT,EAAAG,MAAAH,EAAAtvB,OAEA,OACAikB,KAAA6J,EAAAjU,EAAA,EACAgU,KAAAC,EAAAjU,EAAA,EACAiU,SACAjU,SAIA0K,KAAA,WACA,IACA9L,EADApN,KACAoN,MACA/K,EAFArC,KAEAwX,iBACA0I,EAHAlgB,KAGAyW,UAAAQ,KACAP,EAJA1W,KAIA2W,aACAhO,EAAAuX,EAAApgB,OACA9L,EAAA,EAIA,IAFAke,GAAAE,OAAAhD,SAAAhC,EAAAC,IAAAD,EAAAuR,WAEQ3qB,EAAA2U,IAAU3U,EAClBsO,MAAAD,EAAAyhB,cAAApN,EAAAO,KAAAjjB,MACAksB,EAAAlsB,GAAAklB,OAIAhH,GAAAE,OAAA7C,WAAAnC,EAAAC,MAMAoU,uBAAA,SAAAzB,EAAAnZ,GACA,IAOA7S,EAAA2U,EAAA5J,EANAqO,EADApN,KACAoN,MACA8J,EAAA9J,EAAA6J,KAAAC,SACAR,EAAAQ,EAHAlX,KAGA6G,OACAyS,EAAA0G,EAAA1G,QAAA,GACArQ,EAAAmE,EAAAnE,QAAAgQ,SAAA+G,UACA5f,EAAA,GAIA6R,EAAA,CACA7E,QACAuX,UAAA9d,EACA6P,UACAR,aAdAlW,KAcA6G,OAGA0B,EAAA,CACA,kBACA,cACA,gBACA,eAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CoM,EADArB,EAAAwJ,EAAAvU,IACA4sB,GAAA,CACAtH,EAAAva,GACA2X,EAAA3X,GACAkK,EAAAlK,IACAkT,EAAApL,GAGA,OAAAzG,KAIAwkB,GAAA1S,GAAAtK,eACAid,GAAA3S,GAAAjJ,QAAA8I,QAEAf,GAAAT,KAAA,UACAsQ,MAAA,CACAC,KAAA,UAGAjK,OAAA,CACAC,MAAA,EACA9Q,KAAA,SACA8e,SAAA,SACA9d,GAAA,aAEAgQ,MAAA,EACAhR,KAAA,SACA8e,SAAA,OACA9d,GAAA,cAIA+d,SAAA,CACAC,UAAA,CACAC,MAAA,WAEA,UAEApD,MAAA,SAAAvX,EAAA2M,GACA,IAAA2K,EAAA3K,EAAAC,SAAA5M,EAAA4L,cAAA2L,OAAA,GACAqD,EAAAjO,EAAAC,SAAA5M,EAAA4L,cAAAe,KAAA3M,EAAAzD,OACA,OAAA+a,EAAA,MAAAtX,EAAA6a,OAAA,KAAA7a,EAAA8a,OAAA,KAAAF,EAAAvyB,EAAA,SAMA,IAAA0yB,GAAA5K,GAAAhR,OAAA,CAIA2M,gBAAA6C,GAAAyH,MAKA/I,OAAA,SAAAD,GACA,IAAA7N,EAAA7J,KACAwW,EAAA3M,EAAA4M,UACA6G,EAAA9G,EAAAS,KAGA/E,GAAA/J,KAAAmV,EAAA,SAAApO,EAAArI,GACAgD,EAAAyO,cAAApJ,EAAArI,EAAA6Q,MAOAY,cAAA,SAAApJ,EAAArI,EAAA6Q,GACA,IAAA7N,EAAA7J,KACAwW,EAAA3M,EAAA4M,UACA6C,EAAApK,EAAAoK,QAAA,GACAgM,EAAAzb,EAAAuN,cAAAZ,EAAAI,SACA2O,EAAA1b,EAAAuN,cAAAZ,EAAAO,SACA9N,EAAAY,EAAA4X,uBAAAvS,EAAArI,GACAoQ,EAAApN,EAAA8M,aAAAM,KAAApQ,GACA2e,EAAA3b,EAAAhD,MAEArT,EAAAkkB,EAAA4N,EAAAG,mBAAA,IAAAH,EAAAlC,iBAAA,iBAAAnM,IAAAyO,IAAA7e,EAAA2e,GACA/xB,EAAAikB,EAAA6N,EAAAtD,eAAAsD,EAAAnC,iBAAAnM,EAAApQ,EAAA2e,GAEAtW,EAAAwS,QAAA4D,EACApW,EAAAyS,QAAA4D,EACArW,EAAAyW,SAAA1c,EACAiG,EAAA8I,cAAAwN,EACAtW,EAAAgJ,OAAArR,EACAqI,EAAAyD,OAAA,CACA6G,gBAAAvQ,EAAAuQ,gBACAC,YAAAxQ,EAAAwQ,YACAC,YAAAzQ,EAAAyQ,YACA0E,UAAAnV,EAAAmV,UACAC,WAAApV,EAAAoV,WACAhQ,SAAApF,EAAAoF,SACAX,OAAAgK,EAAA,EAAAzO,EAAAyE,OACAqQ,KAAAzE,EAAAyE,MAAAzb,MAAA9O,IAAA8O,MAAA7O,GACAD,IACAC,KAGAyb,EAAAuD,SAMA4G,cAAA,SAAAnK,GACA,IAAA6D,EAAA7D,EAAAyD,OACA1J,EAAAiG,EAAAyW,SACApM,EAAArH,GAAAqH,cAEArK,EAAAkK,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,YACAhM,OAAAqF,EAAArF,QAGAqF,EAAAyG,gBAAAoL,GAAA3b,EAAA0Q,qBAAAJ,EAAAtQ,EAAAuQ,kBACAzG,EAAA0G,YAAAmL,GAAA3b,EAAA2Q,iBAAAL,EAAAtQ,EAAAwQ,cACA1G,EAAA2G,YAAAkL,GAAA3b,EAAA4Q,iBAAA5Q,EAAAyQ,aACA3G,EAAArF,OAAAzE,EAAAyE,OAAAzE,EAAA8R,aAMA0G,uBAAA,SAAAvS,EAAArI,GACA,IAQA7S,EAAA2U,EAAA5J,EAPAqO,EADApN,KACAoN,MACA8J,EAAA9J,EAAA6J,KAAAC,SACAR,EAAAQ,EAHAlX,KAGA6G,OACAyS,EAAApK,EAAAoK,QAAA,GACArQ,EAAAmE,EAAAnE,QAAAgQ,SAAA/J,MACA+H,EAAAP,EAAAO,KAAApQ,GACAzG,EAAA,GAIA6R,EAAA,CACA7E,QACAuX,UAAA9d,EACA6P,UACAR,aAfAlW,KAeA6G,OAGA0B,EAAA,CACA,kBACA,cACA,cACA,uBACA,mBACA,mBACA,cACA,YACA,aACA,YAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CoM,EADArB,EAAAwJ,EAAAvU,IACA6wB,GAAA,CACAvL,EAAAva,GACA2X,EAAA3X,GACAkK,EAAAlK,IACAkT,EAAApL,GAWA,OAPAzG,EAAAsN,OAAAmX,GAAA,CACAvL,EAAA5L,OACAuJ,IAAAtkB,OAAAkN,EACA6W,EAAAhJ,OACAzE,EAAAyE,QACAuE,EAAApL,GAEAzG,KAIAwlB,GAAA1T,GAAAjJ,QAAA8I,QACA8T,GAAA3T,GAAAtK,eAEAoJ,GAAAT,KAAA,YACA8D,UAAA,CAEAyR,eAAA,EAEAC,cAAA,GAEAlF,MAAA,CACAC,KAAA,UAEAkF,eAAA,SAAA5Y,GACA,IAAA6Y,EAAA,GACAA,EAAA/Q,KAAA,cAAA9H,EAAApG,GAAA,aAEA,IAAAiQ,EAAA7J,EAAA6J,KACAC,EAAAD,EAAAC,SACA4K,EAAA7K,EAAA6K,OAEA,GAAA5K,EAAApX,OACA,QAAA9L,EAAA,EAAkBA,EAAAkjB,EAAA,GAAAD,KAAAnX,SAA6B9L,EAC/CiyB,EAAA/Q,KAAA,qCAAAgC,EAAA,GAAAsC,gBAAAxlB,GAAA,aACA8tB,EAAA9tB,IACAiyB,EAAA/Q,KAAA4M,EAAA9tB,IAEAiyB,EAAA/Q,KAAA,SAKA,OADA+Q,EAAA/Q,KAAA,SACA+Q,EAAAC,KAAA,KAEAC,OAAA,CACArE,OAAA,CACAsE,eAAA,SAAAhZ,GACA,IAAA6J,EAAA7J,EAAA6J,KACA,OAAAA,EAAA6K,OAAAhiB,QAAAmX,EAAAC,SAAApX,OACAmX,EAAA6K,OAAAhZ,IAAA,SAAA+Y,EAAA7tB,GACA,IAAAwiB,EAAApJ,EAAA+J,eAAA,GACAkP,EAAApP,EAAAC,SAAA,GACAlJ,EAAAwI,EAAAS,KAAAjjB,GACAslB,EAAAtL,KAAAsL,QAAA,GACAgN,EAAAlZ,EAAAnE,QAAAgQ,SAAAjL,IACAc,EAAA8W,GAAA,CAAAtM,EAAAE,gBAAA6M,EAAA7M,gBAAA8M,EAAA9M,sBAAA3Z,EAAA7L,GACA+a,EAAA6W,GAAA,CAAAtM,EAAAG,YAAA4M,EAAA5M,YAAA6M,EAAA7M,kBAAA5Z,EAAA7L,GACAuyB,EAAAX,GAAA,CAAAtM,EAAAI,YAAA2M,EAAA3M,YAAA4M,EAAA5M,kBAAA7Z,EAAA7L,GAEA,OACAiyB,KAAApE,EACAtF,UAAAzN,EACA4N,YAAA3N,EACAyN,UAAA+J,EACA/T,OAAAlQ,MAAA+jB,EAAApP,KAAAjjB,KAAAwiB,EAAAS,KAAAjjB,GAAAwe,OAGA3L,MAAA7S,KAIA,KAIAwyB,QAAA,SAAAC,EAAAC,GACA,IAEA1yB,EAAA2U,EAAA6N,EAFA3P,EAAA6f,EAAA7f,MACAuG,EAAApN,KAAAoN,MAGA,IAAApZ,EAAA,EAAA2U,GAAAyE,EAAA6J,KAAAC,UAAA,IAAApX,OAAyD9L,EAAA2U,IAAU3U,GACnEwiB,EAAApJ,EAAA+J,eAAAnjB,IAEAijB,KAAApQ,KACA2P,EAAAS,KAAApQ,GAAA2L,QAAAgE,EAAAS,KAAApQ,GAAA2L,QAIApF,EAAAuK,WAKAgP,iBAAA,GAGAtY,UAAA,GAAAtb,KAAAqC,GAGAwxB,cAAA,EAAA7zB,KAAAqC,GAGA2vB,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEApD,MAAA,SAAAgF,EAAA5P,GACA,IAAA6P,EAAA7P,EAAA6K,OAAA+E,EAAAhgB,OACA7D,EAAA,KAAAiU,EAAAC,SAAA2P,EAAA3Q,cAAAe,KAAA4P,EAAAhgB,OAWA,OATAqL,GAAA5K,QAAAwf,IAGAA,IAAAxnB,SACA,IAAA0D,EAEA8jB,GAAA9jB,EAGA8jB,OAMA,IAAAC,GAAAtM,GAAAhR,OAAA,CAEA2M,gBAAA6C,GAAAuH,IAEAnK,WAAAnE,GAAA/K,KAGA6f,aAAA,SAAA9Q,GAGA,IAFA,IAAA+Q,EAAA,EAEAC,EAAA,EAAiBA,EAAAhR,IAAkBgR,EACnClnB,KAAAoN,MAAA0V,iBAAAoE,MACAD,EAIA,OAAAA,GAGAtP,OAAA,SAAAD,GACA,IAaA1jB,EAAA2U,EAbAkB,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAuR,EAAAvR,EAAAuR,UACAwI,EAAA/Z,EAAAnE,QACAme,EAAAzI,EAAA9Q,MAAA8Q,EAAAhR,KACA0Z,EAAA1I,EAAA7Q,OAAA6Q,EAAA/Q,IACA0Z,EAAAv0B,KAAAD,IAAAs0B,EAAAC,GACApG,EAAA,CAAgBztB,EAAA,EAAAC,EAAA,GAChB+iB,EAAA3M,EAAA4M,UACA8Q,EAAA/Q,EAAAS,KACA0P,EAAAQ,EAAAR,iBACAC,EAAAO,EAAAP,cACAY,EAAA3d,EAAA4d,eAAA5d,EAAAhD,OAIA,GAAA+f,EAAA,EAAA7zB,KAAAqC,GAAA,CACA,IAAAmmB,EAAA4L,EAAA9Y,UAAA,EAAAtb,KAAAqC,IAEAomB,GADAD,GAAA,EAAAxoB,KAAAqC,IAAAmmB,GAAAxoB,KAAAqC,IAAA,EAAAmmB,GAAAxoB,KAAAqC,GAAA,MACAwxB,EACA5T,EAAA,CAAgBxf,EAAAT,KAAAwC,IAAAgmB,GAAA9nB,EAAAV,KAAAyC,IAAA+lB,IAChB2H,EAAA,CAAc1vB,EAAAT,KAAAwC,IAAAimB,GAAA/nB,EAAAV,KAAAyC,IAAAgmB,IACdkM,EAAAnM,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAAxoB,KAAAqC,IAAA,EAAArC,KAAAqC,IAAAomB,EACAmM,EAAApM,GAAA,GAAAxoB,KAAAqC,IAAA,GAAArC,KAAAqC,IAAAomB,GAAAD,GAAA,IAAAxoB,KAAAqC,IAAA,IAAArC,KAAAqC,IAAAomB,EACAoM,EAAArM,IAAAxoB,KAAAqC,KAAArC,KAAAqC,IAAAomB,GAAAD,GAAAxoB,KAAAqC,IAAArC,KAAAqC,IAAAomB,EACAqM,EAAAtM,GAAA,IAAAxoB,KAAAqC,IAAA,IAAArC,KAAAqC,IAAAomB,GAAAD,GAAA,IAAAxoB,KAAAqC,IAAA,IAAArC,KAAAqC,IAAAomB,EACAsM,EAAAnB,EAAA,IACA7zB,EAAA,CAAcU,EAAAo0B,GAAA,EAAA70B,KAAAD,IAAAkgB,EAAAxf,GAAAwf,EAAAxf,EAAA,IAAAs0B,GAAA5E,EAAA1vB,GAAA0vB,EAAA1vB,EAAA,IAAAs0B,IAAAr0B,EAAAo0B,GAAA,EAAA90B,KAAAD,IAAAkgB,EAAAvf,GAAAuf,EAAAvf,EAAA,IAAAq0B,GAAA5E,EAAAzvB,GAAAyvB,EAAAzvB,EAAA,IAAAq0B,KACd90B,EAAA,CAAcQ,EAAAk0B,EAAA,EAAA30B,KAAAC,IAAAggB,EAAAxf,GAAAwf,EAAAxf,EAAA,IAAAs0B,GAAA5E,EAAA1vB,GAAA0vB,EAAA1vB,EAAA,IAAAs0B,IAAAr0B,EAAAk0B,EAAA,EAAA50B,KAAAC,IAAAggB,EAAAvf,GAAAuf,EAAAvf,EAAA,IAAAq0B,GAAA5E,EAAAzvB,GAAAyvB,EAAAzvB,EAAA,IAAAq0B,KACdtZ,EAAA,CAAejB,MAAA,IAAAva,EAAAQ,EAAAV,EAAAU,GAAAga,OAAA,IAAAxa,EAAAS,EAAAX,EAAAW,IACf6zB,EAAAv0B,KAAAD,IAAAs0B,EAAA5Y,EAAAjB,MAAA8Z,EAAA7Y,EAAAhB,QACAyT,EAAA,CAAaztB,GAAA,IAAAR,EAAAQ,EAAAV,EAAAU,GAAAC,GAAA,IAAAT,EAAAS,EAAAX,EAAAW,IAGb,IAAAO,EAAA,EAAA2U,EAAA4e,EAAAznB,OAAiC9L,EAAA2U,IAAU3U,EAC3CuzB,EAAAvzB,GAAA2xB,SAAA9b,EAAA4X,uBAAA8F,EAAAvzB,MAeA,IAZAoZ,EAAAsM,YAAA7P,EAAAke,oBACA3a,EAAAwO,YAAA7oB,KAAAC,KAAAs0B,EAAAla,EAAAsM,aAAA,KACAtM,EAAAuO,YAAA5oB,KAAAC,IAAA2zB,EAAAvZ,EAAAwO,YAAA,WACAxO,EAAA4a,cAAA5a,EAAAwO,YAAAxO,EAAAuO,cAAA9R,EAAAoe,iCAAA,GACA7a,EAAA8a,QAAAjH,EAAAztB,EAAA4Z,EAAAwO,YACAxO,EAAA+a,QAAAlH,EAAAxtB,EAAA2Z,EAAAwO,YAEApF,EAAA4R,MAAAve,EAAAwe,iBAEAxe,EAAA+R,YAAAxO,EAAAwO,YAAAxO,EAAA4a,aAAAne,EAAAye,qBAAAze,EAAAhD,OACAgD,EAAA8R,YAAA5oB,KAAAC,IAAA6W,EAAA+R,YAAAxO,EAAA4a,aAAAR,EAAA,GAEAxzB,EAAA,EAAA2U,EAAA4e,EAAAznB,OAAiC9L,EAAA2U,IAAU3U,EAC3C6V,EAAAyO,cAAAiP,EAAAvzB,KAAA0jB,IAIAY,cAAA,SAAAtK,EAAAnH,EAAA6Q,GACA,IAAA7N,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAuR,EAAAvR,EAAAuR,UACAwI,EAAA/Z,EAAAnE,QACAsf,EAAApB,EAAA9S,UACAmU,GAAA7J,EAAAhR,KAAAgR,EAAA9Q,OAAA,EACA4a,GAAA9J,EAAA/Q,IAAA+Q,EAAA7Q,QAAA,EACAyN,EAAA4L,EAAA9Y,SACAmN,EAAA2L,EAAA9Y,SACAqI,EAAA7M,EAAA8M,aACAiQ,EAAAlP,GAAA6Q,EAAAzC,cAAA,EAAA9X,EAAAwE,OAAA,EAAA3I,EAAA6e,uBAAAhS,EAAAO,KAAApQ,KAAAsgB,EAAAP,eAAA,EAAA7zB,KAAAqC,KACAumB,EAAAjE,GAAA6Q,EAAAxC,aAAA,EAAAlc,EAAA8R,YACAC,EAAAlE,GAAA6Q,EAAAxC,aAAA,EAAAlc,EAAA+R,YACA3S,EAAA+E,EAAA2X,UAAA,GAEAzT,GAAAzI,OAAAuE,EAAA,CAEAgK,cAAAnO,EAAAhD,MACAqR,OAAArR,EAGA8L,OAAA,CACA6G,gBAAAvQ,EAAAuQ,gBACAC,YAAAxQ,EAAAwQ,YACAC,YAAAzQ,EAAAyQ,YACAgB,YAAAzR,EAAAyR,YACAlnB,EAAAg1B,EAAApb,EAAA8a,QACAz0B,EAAAg1B,EAAArb,EAAA+a,QACA5M,aACAC,WACAoL,gBACAhL,cACAD,cACAkG,MAAA3P,GAAApK,sBAAA4O,EAAAmL,MAAAhb,EAAAuG,EAAA6J,KAAA6K,OAAAjb,OAIA,IAAAkM,EAAA/E,EAAA2E,OAGA+E,GAAA6Q,EAAAzC,gBAEA/S,EAAAwI,WADA,IAAA1U,EACAsgB,EAAA9Y,SAEAxE,EAAA4M,UAAAQ,KAAApQ,EAAA,GAAA8L,OAAA6I,SAGAzI,EAAAyI,SAAAzI,EAAAwI,WAAAxI,EAAA6T,eAGA5Y,EAAAyE,SAGA4V,eAAA,WACA,IAGArlB,EAHA0T,EAAA1W,KAAA2W,aACAH,EAAAxW,KAAAyW,UACA2R,EAAA,EAcA,OAXAlW,GAAA/J,KAAAqO,EAAAS,KAAA,SAAAoB,EAAAxR,GACA7D,EAAA0T,EAAAO,KAAApQ,GACAvE,MAAAU,IAAAqV,EAAA7F,SACA4V,GAAAr1B,KAAAorB,IAAAnb,MAQAolB,GAGAM,uBAAA,SAAA1lB,GACA,IAAAolB,EAAApoB,KAAAyW,UAAA2R,MACA,OAAAA,EAAA,IAAA9lB,MAAAU,GACA,EAAAjQ,KAAAqC,IAAArC,KAAAorB,IAAAnb,GAAAolB,GAEA,GAIAL,kBAAA,SAAAR,GACA,IAGAvzB,EAAA2U,EAAA6N,EAAAxI,EAAAgW,EAAA/a,EAAAyQ,EAAAiP,EAFA31B,EAAA,EACAoa,EAFApN,KAEAoN,MAGA,IAAAma,EAEA,IAAAvzB,EAAA,EAAA2U,EAAAyE,EAAA6J,KAAAC,SAAApX,OAAiD9L,EAAA2U,IAAU3U,EAC3D,GAAAoZ,EAAA0V,iBAAA9uB,GAAA,CACAwiB,EAAApJ,EAAA+J,eAAAnjB,GACAuzB,EAAA/Q,EAAAS,KACAjjB,IAXAgM,KAWA6G,QACAmd,EAAAxN,EAAAwN,YAEA,MAKA,IAAAuD,EACA,SAGA,IAAAvzB,EAAA,EAAA2U,EAAA4e,EAAAznB,OAAiC9L,EAAA2U,IAAU3U,EAC3Cga,EAAAuZ,EAAAvzB,GAEA,WADAiV,EAAA+a,IAAAvC,uBAAAzT,EAAAha,GAAAga,EAAA2X,UACAjL,cACAhB,EAAAzQ,EAAAyQ,YACAiP,EAAA1f,EAAA4Q,iBAGA7mB,EAAA21B,GADA31B,EAAA0mB,EAAA1mB,EAAA0mB,EAAA1mB,GACA21B,EAAA31B,GAGA,OAAAA,GAMAqmB,cAAA,SAAArL,GACA,IAAA+E,EAAA/E,EAAA2E,OACA1J,EAAA+E,EAAA2X,SACApM,EAAArH,GAAAqH,cAEAvL,EAAAoL,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,aAGA3G,EAAAyG,gBAAAqM,GAAA5c,EAAA0Q,qBAAAJ,EAAAtQ,EAAAuQ,kBACAzG,EAAA0G,YAAAoM,GAAA5c,EAAA2Q,iBAAAL,EAAAtQ,EAAAwQ,cACA1G,EAAA2G,YAAAmM,GAAA5c,EAAA4Q,iBAAA5Q,EAAAyQ,cAMA+H,uBAAA,SAAAzT,EAAAnH,GACA,IAMA7S,EAAA2U,EAAA5J,EALAqO,EADApN,KACAoN,MACAsJ,EAFA1W,KAEA2W,aACA2C,EAAAtL,EAAAsL,QAAA,GACArQ,EAAAmE,EAAAnE,QAAAgQ,SAAAjL,IACA5N,EAAA,GAIA6R,EAAA,CACA7E,QACAuX,UAAA9d,EACA6P,UACAR,aAbAlW,KAaA6G,OAGA0B,EAAA,CACA,kBACA,cACA,cACA,cACA,uBACA,mBACA,oBAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CoM,EADArB,EAAAwJ,EAAAvU,IACA4xB,GAAA,CACAtM,EAAAva,GACA2X,EAAA3X,GACAkK,EAAAlK,IACAkT,EAAApL,GAGA,OAAAzG,GAOAkoB,qBAAA,SAAApS,GAGA,IAFA,IAAA0S,EAAA,EAEA50B,EAAA,EAAiBA,EAAAkiB,IAAkBliB,EACnCgM,KAAAoN,MAAA0V,iBAAA9uB,KACA40B,GAAA5oB,KAAAynB,eAAAzzB,IAIA,OAAA40B,GAMAnB,eAAA,SAAAoB,GACA,OAAA91B,KAAAC,IAAA6yB,GAAA7lB,KAAAoN,MAAA6J,KAAAC,SAAA2R,GAAAljB,OAAA,OAOAsiB,8BAAA,WACA,OAAAjoB,KAAAsoB,qBAAAtoB,KAAAoN,MAAA6J,KAAAC,SAAApX,WAIAkR,GAAAT,KAAA,iBACAsQ,MAAA,CACAC,KAAA,QACAgI,KAAA,KAGAjS,OAAA,CACAC,MAAA,EACA9Q,KAAA,SACA8e,SAAA,WAGA9N,MAAA,EACAhR,KAAA,WACA8e,SAAA,OACA/D,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,MAKAlI,SAAA,CACA+G,UAAA,CACAN,cAAA,SAIAqF,SAAA,CACAjE,KAAA,QACAgI,KAAA,OAIA,IAAAC,GAAA3H,GAAA3X,OAAA,CAIA6N,iBAAA,WACA,OAAAtX,KAAAyW,UAAAG,SAMAW,iBAAA,WACA,OAAAvX,KAAAyW,UAAAM,WAIAiS,GAAA9W,GAAAtK,eACAqhB,GAAA/W,GAAAjJ,QAAA8I,QACAmX,GAAAhX,GAAAE,OAAAnD,eAsBA,SAAAka,GAAAzS,EAAAzN,GACA,OAAA+f,GAAAtS,EAAA0S,SAAAngB,EAAA8H,WArBAC,GAAAT,KAAA,QACAQ,WAAA,EACAsM,UAAA,EAEAwD,MAAA,CACAC,KAAA,SAGAjK,OAAA,CACAC,MAAA,EACA9Q,KAAA,WACAgB,GAAA,aAEAgQ,MAAA,EACAhR,KAAA,SACAgB,GAAA,gBASA,IAAAqiB,GAAA5O,GAAAhR,OAAA,CAEA0M,mBAAA8C,GAAAwH,KAEArK,gBAAA6C,GAAAyH,MAEA/I,OAAA,SAAAD,GACA,IAOA1jB,EAAA2U,EAPAkB,EAAA7J,KACAwW,EAAA3M,EAAA4M,UACAmG,EAAApG,EAAAE,QACA4G,EAAA9G,EAAAS,MAAA,GACA5U,EAAAwH,EAAAuN,cAAAZ,EAAAO,SACAL,EAAA7M,EAAA8M,aACAyS,EAAAD,GAAAzS,EAAA7M,EAAAuD,MAAAnE,SAsBA,IAlBAmgB,SAEAvpB,IAAA6W,EAAA5G,cAAAjQ,IAAA6W,EAAA4S,cACA5S,EAAA4S,YAAA5S,EAAA5G,SAIA8M,EAAA2M,OAAAlnB,EACAua,EAAA5E,cAAAnO,EAAAhD,MAEA+V,EAAAW,UAAAD,EAEAV,EAAAjK,OAAA9I,EAAA2f,oBAAA5M,GAEAA,EAAAnK,SAIAze,EAAA,EAAA2U,EAAA2U,EAAAxd,OAAmC9L,EAAA2U,IAAU3U,EAC7C6V,EAAAyO,cAAAgF,EAAAtpB,KAAA0jB,GAQA,IALA0R,GAAA,IAAAxM,EAAAjK,OAAA7C,SACAjG,EAAA4f,4BAIAz1B,EAAA,EAAA2U,EAAA2U,EAAAxd,OAAmC9L,EAAA2U,IAAU3U,EAC7CspB,EAAAtpB,GAAAye,SAIA6F,cAAA,SAAApJ,EAAArI,EAAA6Q,GACA,IASAlkB,EAAAC,EATAoW,EAAA7J,KACAwW,EAAA3M,EAAA4M,UACA6C,EAAApK,EAAAoK,QAAA,GACA5C,EAAA7M,EAAA8M,aACAT,EAAArM,EAAAhD,MACA7D,EAAA0T,EAAAO,KAAApQ,GACA0e,EAAA1b,EAAAuN,cAAAZ,EAAAO,SACAuO,EAAAzb,EAAAuN,cAAAZ,EAAAI,SACA8S,EAAAlT,EAAAE,QAAA/D,OAGA1J,EAAAY,EAAA8f,qBAAAza,EAAArI,GAEArT,EAAA8xB,EAAAlC,iBAAA,iBAAApgB,IAAA0iB,IAAA7e,EAAAqP,GACAziB,EAAAikB,EAAA6N,EAAAtD,eAAApY,EAAA+f,gBAAA5mB,EAAA6D,EAAAqP,GAGAhH,EAAAwS,QAAA4D,EACApW,EAAAyS,QAAA4D,EACArW,EAAAyW,SAAA1c,EACAiG,EAAA8I,cAAA9B,EACAhH,EAAAgJ,OAAArR,EAGAqI,EAAAyD,OAAA,CACAnf,IACAC,IACAsqB,KAAAzE,EAAAyE,MAAAzb,MAAA9O,IAAA8O,MAAA7O,GAEAia,OAAAzE,EAAAyE,OACA2Q,WAAApV,EAAAoV,WACAhQ,SAAApF,EAAAoF,SACAmL,gBAAAvQ,EAAAuQ,gBACAC,YAAAxQ,EAAAwQ,YACAC,YAAAzQ,EAAAyQ,YACA5J,QAAAkZ,GAAA1P,EAAAxJ,QAAA4Z,IAAA5Z,QAAA,GACAF,cAAA8Z,KAAA9Z,YAEAwO,UAAAnV,EAAAmV,YAOAuL,qBAAA,SAAAtR,EAAAxR,GACA,IAMA7S,EAAA2U,EAAA5J,EALAqO,EADApN,KACAoN,MACAsJ,EAAAtJ,EAAA6J,KAAAC,SAFAlX,KAEA6G,OACAyS,EAAAjB,EAAAiB,QAAA,GACArQ,EAAAmE,EAAAnE,QAAAgQ,SAAA/J,MACA9O,EAAA,GAIA6R,EAAA,CACA7E,QACAuX,UAAA9d,EACA6P,UACAR,aAbAlW,KAaA6G,OAGAgjB,EAAA,CACArQ,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACA0E,UAAA,iBACAzE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAsD,WAAA,aACA3Q,OAAA,cACAW,SAAA,iBAEA9F,EAAAhB,OAAAgB,KAAAshB,GAEA,IAAA71B,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAC3C+K,EAAAwJ,EAAAvU,GACAoM,EAAArB,GAAAkqB,GAAA,CACA3P,EAAAva,GACA2X,EAAAmT,EAAA9qB,IACA2X,EAAA3X,GACAkK,EAAAlK,IACAkT,EAAApL,GAGA,OAAAzG,GAMAopB,oBAAA,SAAAnR,GACA,IAOArkB,EAAA2U,EAAA5J,EANAqO,EADApN,KACAoN,MACAsJ,EAAAtJ,EAAA6J,KAAAC,SAFAlX,KAEA6G,OACAyS,EAAAjB,EAAAiB,QAAA,GACArQ,EAAAmE,EAAAnE,QACA6gB,EAAA7gB,EAAAgQ,SAAA2D,KACAxc,EAAA,GAGAmI,EAAA,CACA,kBACA,cACA,cACA,iBACA,aACA,mBACA,kBACA,OACA,0BAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CoM,EADArB,EAAAwJ,EAAAvU,IACAi1B,GAAA,CACA3P,EAAAva,GACA2X,EAAA3X,GACA+qB,EAAA/qB,KAWA,OAJAqB,EAAAid,SAAA2L,GAAAtS,EAAA2G,SAAApU,EAAAoU,UACAjd,EAAA0P,QAAAkZ,GAAAtS,EAAA4S,YAAAQ,EAAAha,SACA1P,EAAAwP,YAAAqZ,GAAA,CAAA3P,EAAA1J,YAAA8G,EAAA9G,YAAAka,EAAAna,UAEAvP,GAGAwpB,gBAAA,SAAA5mB,EAAA6D,EAAAqP,GACA,IAMAliB,EAAAqyB,EAAA0D,EALA3c,EADApN,KACAoN,MACAoJ,EAFAxW,KAEAyW,UACA8O,EAHAvlB,KAGAoX,cAAAZ,EAAAO,SACAiT,EAAA,EACAC,EAAA,EAGA,GAAA1E,EAAAtc,QAAA2Z,QAAA,CACA,IAAA5uB,EAAA,EAAcA,EAAAkiB,EAAkBliB,IAGhC,GAFAqyB,EAAAjZ,EAAA6J,KAAAC,SAAAljB,GAEA,UADA+1B,EAAA3c,EAAA+J,eAAAnjB,IACAgS,MAAA+jB,EAAAhT,UAAAwO,EAAAve,IAAAoG,EAAA0V,iBAAA9uB,GAAA,CACA,IAAAk2B,EAAAviB,OAAA4d,EAAAzB,cAAAuC,EAAApP,KAAApQ,KACAqjB,EAAA,EACAD,GAAAC,GAAA,EAEAF,GAAAE,GAAA,EAKA,IAAAC,EAAAxiB,OAAA4d,EAAAzB,cAAA9gB,IACA,OAAAmnB,EAAA,EACA5E,EAAAnC,iBAAA6G,EAAAE,GAEA5E,EAAAnC,iBAAA4G,EAAAG,GAGA,OAAA5E,EAAAnC,iBAAApgB,IAGAymB,0BAAA,WACA,IAMAz1B,EAAA2U,EAAAoK,EAAAqX,EALAhd,EADApN,KACAoN,MACAoJ,EAFAxW,KAEAyW,UACAiT,EAAAlT,EAAAE,QAAA/D,OACAxD,EAAA/B,EAAAuR,UACArB,EAAA9G,EAAAS,MAAA,GAUA,SAAAoT,EAAAC,EAAAx3B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAAw3B,EAAAt3B,GAAAF,GAGA,GAVA42B,EAAArM,WACAC,IAAAiN,OAAA,SAAAD,GACA,OAAAA,EAAA3X,OAAAoL,QAQA,aAAA2L,EAAAc,uBACAtY,GAAAuY,oBAAAnN,QAEA,IAAAtpB,EAAA,EAAA2U,EAAA2U,EAAAxd,OAAoC9L,EAAA2U,IAAU3U,EAC9C+e,EAAAuK,EAAAtpB,GAAA2e,OACAyX,EAAAlY,GAAAwY,YACAxY,GAAA4L,aAAAR,EAAAtpB,GAAA2e,OACAI,EACAb,GAAAyY,SAAArN,EAAAtpB,GAAA2e,OACA+W,EAAA5Z,SAEAiD,EAAA/C,sBAAAoa,EAAA3a,SAAAjc,EACAuf,EAAA7C,sBAAAka,EAAA3a,SAAAhc,EACAsf,EAAA9C,kBAAAma,EAAAlG,KAAA1wB,EACAuf,EAAA5C,kBAAAia,EAAAlG,KAAAzwB,EAIA,GAAA2Z,EAAAnE,QAAAgQ,SAAA2D,KAAAK,gBACA,IAAAjpB,EAAA,EAAA2U,EAAA2U,EAAAxd,OAAoC9L,EAAA2U,IAAU3U,EAC9C+e,EAAAuK,EAAAtpB,GAAA2e,OACAuW,GAAAnW,EAAA5D,KACAnb,EAAA,GAAAk1B,GAAA5L,EAAAtpB,EAAA,GAAA2e,OAAAxD,KACA4D,EAAA/C,sBAAAqa,EAAAtX,EAAA/C,sBAAAb,EAAAxB,KAAAwB,EAAAtB,OACAkF,EAAA7C,sBAAAma,EAAAtX,EAAA7C,sBAAAf,EAAAvB,IAAAuB,EAAArB,SAEA9Z,EAAAspB,EAAAxd,OAAA,GAAAopB,GAAA5L,EAAAtpB,EAAA,GAAA2e,OAAAxD,KACA4D,EAAA9C,kBAAAoa,EAAAtX,EAAA9C,kBAAAd,EAAAxB,KAAAwB,EAAAtB,OACAkF,EAAA5C,kBAAAka,EAAAtX,EAAA5C,kBAAAhB,EAAAvB,IAAAuB,EAAArB,WAOAoL,KAAA,WACA,IAMA0R,EALAxd,EADApN,KACAoN,MACAoJ,EAFAxW,KAEAyW,UACA6G,EAAA9G,EAAAS,MAAA,GACA9H,EAAA/B,EAAAuR,UACAhW,EAAA2U,EAAAxd,OAEA9L,EAAA,EAkBA,IAhBAm1B,GATAnpB,KASA2W,aAAAvJ,EAAAnE,WACA2hB,GAAApU,EAAAE,QAAA/D,OAAA+G,aAAA,KAEAxH,GAAAE,OAAAhD,SAAAhC,EAAAC,IAAA,CACAM,KAAAwB,EAAAxB,KACAE,MAAAsB,EAAAtB,MACAD,IAAAuB,EAAAvB,IAAAgd,EACA9c,OAAAqB,EAAArB,OAAA8c,IAGApU,EAAAE,QAAAwC,OAEAhH,GAAAE,OAAA7C,WAAAnC,EAAAC,MAIQrZ,EAAA2U,IAAU3U,EAClBspB,EAAAtpB,GAAAklB,KAAA/J,IAOAkK,cAAA,SAAAnK,GACA,IAAA6D,EAAA7D,EAAAyD,OACA1J,EAAAiG,EAAAyW,SACApM,EAAArH,GAAAqH,cAEArK,EAAAkK,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,YACAhM,OAAAqF,EAAArF,QAGAqF,EAAAyG,gBAAAwP,GAAA/f,EAAA0Q,qBAAAJ,EAAAtQ,EAAAuQ,kBACAzG,EAAA0G,YAAAuP,GAAA/f,EAAA2Q,iBAAAL,EAAAtQ,EAAAwQ,cACA1G,EAAA2G,YAAAsP,GAAA/f,EAAA4Q,iBAAA5Q,EAAAyQ,aACA3G,EAAArF,OAAAsb,GAAA/f,EAAA8R,YAAA9R,EAAAyE,WAIAmd,GAAA3Y,GAAAjJ,QAAA8I,QAEAf,GAAAT,KAAA,aACAlO,MAAA,CACA2D,KAAA,eACA8kB,WAAA,CACAC,SAAA,GAEA7J,UAAA,CACA8J,UAAA,GAEAC,YAAA,CACAF,SAAA,GAEAvH,MAAA,CACA0H,aAAA,IAKA7W,UAAA,CACAyR,eAAA,EACAC,cAAA,GAGAxK,YAAA,GAAAxoB,KAAAqC,GACA4wB,eAAA,SAAA5Y,GACA,IAAA6Y,EAAA,GACAA,EAAA/Q,KAAA,cAAA9H,EAAApG,GAAA,aAEA,IAAAiQ,EAAA7J,EAAA6J,KACAC,EAAAD,EAAAC,SACA4K,EAAA7K,EAAA6K,OAEA,GAAA5K,EAAApX,OACA,QAAA9L,EAAA,EAAkBA,EAAAkjB,EAAA,GAAAD,KAAAnX,SAA6B9L,EAC/CiyB,EAAA/Q,KAAA,qCAAAgC,EAAA,GAAAsC,gBAAAxlB,GAAA,aACA8tB,EAAA9tB,IACAiyB,EAAA/Q,KAAA4M,EAAA9tB,IAEAiyB,EAAA/Q,KAAA,SAKA,OADA+Q,EAAA/Q,KAAA,SACA+Q,EAAAC,KAAA,KAEAC,OAAA,CACArE,OAAA,CACAsE,eAAA,SAAAhZ,GACA,IAAA6J,EAAA7J,EAAA6J,KACA,OAAAA,EAAA6K,OAAAhiB,QAAAmX,EAAAC,SAAApX,OACAmX,EAAA6K,OAAAhZ,IAAA,SAAA+Y,EAAA7tB,GACA,IAAAwiB,EAAApJ,EAAA+J,eAAA,GACAkP,EAAApP,EAAAC,SAAA,GACAlJ,EAAAwI,EAAAS,KAAAjjB,GACAslB,EAAAtL,EAAAsL,QAAA,GACAgN,EAAAlZ,EAAAnE,QAAAgQ,SAAAjL,IACAc,EAAA+b,GAAA,CAAAvR,EAAAE,gBAAA6M,EAAA7M,gBAAA8M,EAAA9M,sBAAA3Z,EAAA7L,GACA+a,EAAA8b,GAAA,CAAAvR,EAAAG,YAAA4M,EAAA5M,YAAA6M,EAAA7M,kBAAA5Z,EAAA7L,GACAuyB,EAAAsE,GAAA,CAAAvR,EAAAI,YAAA2M,EAAA3M,YAAA4M,EAAA5M,kBAAA7Z,EAAA7L,GAEA,OACAiyB,KAAApE,EACAtF,UAAAzN,EACA4N,YAAA3N,EACAyN,UAAA+J,EACA/T,OAAAlQ,MAAA+jB,EAAApP,KAAAjjB,KAAAwiB,EAAAS,KAAAjjB,GAAAwe,OAGA3L,MAAA7S,KAIA,KAIAwyB,QAAA,SAAAC,EAAAC,GACA,IAEA1yB,EAAA2U,EAAA6N,EAFA3P,EAAA6f,EAAA7f,MACAuG,EAAApN,KAAAoN,MAGA,IAAApZ,EAAA,EAAA2U,GAAAyE,EAAA6J,KAAAC,UAAA,IAAApX,OAAyD9L,EAAA2U,IAAU3U,GACnEwiB,EAAApJ,EAAA+J,eAAAnjB,IACAijB,KAAApQ,GAAA2L,QAAAgE,EAAAS,KAAApQ,GAAA2L,OAGApF,EAAAuK,WAKAoN,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEApD,MAAA,SAAAvX,EAAA2M,GACA,OAAAA,EAAA6K,OAAAxX,EAAAzD,OAAA,KAAAyD,EAAA8a,YAMA,IAAA+F,GAAA1Q,GAAAhR,OAAA,CAEA2M,gBAAA6C,GAAAuH,IAEAnK,WAAAnE,GAAA/K,KAEAwQ,OAAA,SAAAD,GACA,IAOA1jB,EAAA2U,EAAA0S,EAPAxR,EAAA7J,KACA0W,EAAA7M,EAAA8M,aACAH,EAAA3M,EAAA4M,UACAzD,EAAAnJ,EAAAuD,MAAAnE,QAAAsS,YAAA,EACA6P,EAAAvhB,EAAAwhB,QAAA,GACAC,EAAAzhB,EAAA0hB,QAAA,GACAhE,EAAA/Q,EAAAS,KAOA,IAJApN,EAAA2hB,gBAEAhV,EAAAyD,MAAApQ,EAAA4hB,uBAEAz3B,EAAA,EAAA2U,EAAA+N,EAAAO,KAAAnX,OAAyC9L,EAAA2U,EAAU3U,IACnDo3B,EAAAp3B,GAAAgf,EACAqI,EAAAxR,EAAA6hB,cAAA13B,GACAs3B,EAAAt3B,GAAAqnB,EACArI,GAAAqI,EAGA,IAAArnB,EAAA,EAAA2U,EAAA4e,EAAAznB,OAAiC9L,EAAA2U,IAAU3U,EAC3CuzB,EAAAvzB,GAAA2xB,SAAA9b,EAAA4X,uBAAA8F,EAAAvzB,MACA6V,EAAAyO,cAAAiP,EAAAvzB,KAAA0jB,IAOA8T,cAAA,WACA,IAAA3hB,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAuR,EAAAvR,EAAAuR,UACAwI,EAAA/Z,EAAAnE,QACAqe,EAAAv0B,KAAAD,IAAA6rB,EAAA9Q,MAAA8Q,EAAAhR,KAAAgR,EAAA7Q,OAAA6Q,EAAA/Q,KAEAR,EAAAwO,YAAA7oB,KAAAC,IAAAs0B,EAAA,KACAla,EAAAuO,YAAA5oB,KAAAC,IAAAm0B,EAAAR,iBAAAvZ,EAAAwO,YAAA,IAAAuL,EAAA,sBACA/Z,EAAA4a,cAAA5a,EAAAwO,YAAAxO,EAAAuO,aAAAvO,EAAAue,yBAEA9hB,EAAA+R,YAAAxO,EAAAwO,YAAAxO,EAAA4a,aAAAne,EAAAhD,MACAgD,EAAA8R,YAAA9R,EAAA+R,YAAAxO,EAAA4a,cAGA1P,cAAA,SAAAtK,EAAAnH,EAAA6Q,GACA,IAAA7N,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAsJ,EAAA7M,EAAA8M,aACAwQ,EAAA/Z,EAAAnE,QACAsf,EAAApB,EAAA9S,UACAhS,EAAA+K,EAAA/K,MACAyf,EAAA1U,EAAA6J,KAAA6K,OAEA0G,EAAAnmB,EAAAupB,QACAnD,EAAApmB,EAAAwpB,QAGAC,EAAA3E,EAAA5L,WACAD,EAAAtN,EAAAwE,OAAA,EAAAnQ,EAAA0pB,8BAAArV,EAAAO,KAAApQ,IACA0U,EAAA1R,EAAAwhB,QAAAxkB,GACA2U,EAAAD,GAAAvN,EAAAwE,OAAA,EAAA3I,EAAA0hB,QAAA1kB,IAEAmlB,EAAAzD,EAAAxC,aAAA,EAAA1jB,EAAA0pB,8BAAArV,EAAAO,KAAApQ,IACAoC,EAAA+E,EAAA2X,UAAA,GAEAzT,GAAAzI,OAAAuE,EAAA,CAEAgK,cAAAnO,EAAAhD,MACAqR,OAAArR,EACA0iB,OAAAlnB,EAGAsQ,OAAA,CACA6G,gBAAAvQ,EAAAuQ,gBACAC,YAAAxQ,EAAAwQ,YACAC,YAAAzQ,EAAAyQ,YACAgB,YAAAzR,EAAAyR,YACAlnB,EAAAg1B,EACA/0B,EAAAg1B,EACA9M,YAAA,EACAC,YAAAlE,EAAAsU,EAAA1Q,EACAC,WAAA7D,GAAA6Q,EAAAzC,cAAAgG,EAAAvQ,EACAC,SAAA9D,GAAA6Q,EAAAzC,cAAAgG,EAAAtQ,EACAqG,MAAA3P,GAAApK,sBAAAga,EAAAjb,EAAAib,EAAAjb,OAIAmH,EAAAyE,SAGAgZ,qBAAA,WACA,IAAA/U,EAAA1W,KAAA2W,aACAH,EAAAxW,KAAAyW,UACAwD,EAAA,EAQA,OANA/H,GAAA/J,KAAAqO,EAAAS,KAAA,SAAAoB,EAAAxR,GACAvE,MAAAoU,EAAAO,KAAApQ,KAAAwR,EAAA7F,QACAyH,MAIAA,GAMAZ,cAAA,SAAArL,GACA,IAAA+E,EAAA/E,EAAA2E,OACA1J,EAAA+E,EAAA2X,SACApM,EAAArH,GAAAqH,cACA3R,EAAAsK,GAAAtK,eAEAoG,EAAAoL,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,aAGA3G,EAAAyG,gBAAA5R,EAAAqB,EAAA0Q,qBAAAJ,EAAAtQ,EAAAuQ,kBACAzG,EAAA0G,YAAA7R,EAAAqB,EAAA2Q,iBAAAL,EAAAtQ,EAAAwQ,cACA1G,EAAA2G,YAAA9R,EAAAqB,EAAA4Q,iBAAA5Q,EAAAyQ,cAMA+H,uBAAA,SAAAzT,EAAAnH,GACA,IAMA7S,EAAA2U,EAAA5J,EALAqO,EADApN,KACAoN,MACAsJ,EAFA1W,KAEA2W,aACA2C,EAAAtL,EAAAsL,QAAA,GACArQ,EAAAmE,EAAAnE,QAAAgQ,SAAAjL,IACA5N,EAAA,GAIA6R,EAAA,CACA7E,QACAuX,UAAA9d,EACA6P,UACAR,aAbAlW,KAaA6G,OAGA0B,EAAA,CACA,kBACA,cACA,cACA,cACA,uBACA,mBACA,oBAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CoM,EADArB,EAAAwJ,EAAAvU,IACA62B,GAAA,CACAvR,EAAAva,GACA2X,EAAA3X,GACAkK,EAAAlK,IACAkT,EAAApL,GAGA,OAAAzG,GAMAsrB,cAAA,SAAA7kB,GACA,IAAAgD,EAAA7J,KACAia,EAAAja,KAAAyW,UAAAwD,MACAvD,EAAA7M,EAAA8M,aACAH,EAAA3M,EAAA4M,UAEA,GAAAnU,MAAAoU,EAAAO,KAAApQ,KAAA2P,EAAAS,KAAApQ,GAAA2L,OACA,SAIA,IAAAP,EAAA,CACA7E,MAAAvD,EAAAuD,MACAuX,UAAA9d,EACA6P,UACAR,aAAArM,EAAAhD,OAGA,OAAAgkB,GAAA,CACAhhB,EAAAuD,MAAAnE,QAAAgQ,SAAAjL,IAAAqN,MACA,EAAAtoB,KAAAqC,GAAA6kB,GACAhI,EAAApL,MAIAmK,GAAAT,KAAA,MAAA2B,GAAAnM,MAAAiL,GAAAib,WACAjb,GAAAT,KAAA,OACAoW,iBAAA,IAIA,IAAAuF,GAAAnF,GAEAoF,GAAAja,GAAAtK,eACAwkB,GAAAla,GAAAjJ,QAAA8I,QAEAf,GAAAT,KAAA,SACAlO,MAAA,CACA2D,KAAA,gBAEAiT,SAAA,CACA2D,KAAA,CACA9M,QAAA,MAKA,IAAAuc,GAAA5R,GAAAhR,OAAA,CAEA0M,mBAAA8C,GAAAwH,KAEArK,gBAAA6C,GAAAyH,MAEArK,WAAAnE,GAAA/K,KAEAwQ,OAAA,SAAAD,GACA,IAMA1jB,EAAA2U,EANAkB,EAAA7J,KACAwW,EAAA3M,EAAA4M,UACAmG,EAAApG,EAAAE,QACA4G,EAAA9G,EAAAS,MAAA,GACA5U,EAAAwH,EAAAuD,MAAA/K,MACAqU,EAAA7M,EAAA8M,aAoBA,SAhBA9W,IAAA6W,EAAA5G,cAAAjQ,IAAA6W,EAAA4S,cACA5S,EAAA4S,YAAA5S,EAAA5G,SAIA8M,EAAA2M,OAAAlnB,EACAua,EAAA5E,cAAAnO,EAAAhD,MAEA+V,EAAAW,UAAAD,EACAV,EAAAc,OAAA,EAEAd,EAAAjK,OAAA9I,EAAA2f,oBAAA5M,GAEAA,EAAAnK,QAGAze,EAAA,EAAA2U,EAAA2U,EAAAxd,OAAmC9L,EAAA2U,IAAU3U,EAC7C6V,EAAAyO,cAAAgF,EAAAtpB,KAAA0jB,GAOA,IAHA7N,EAAA4f,4BAGAz1B,EAAA,EAAA2U,EAAA2U,EAAAxd,OAAmC9L,EAAA2U,IAAU3U,EAC7CspB,EAAAtpB,GAAAye,SAIA6F,cAAA,SAAApJ,EAAArI,EAAA6Q,GACA,IAAA7N,EAAA7J,KACAsZ,EAAApK,EAAAoK,QAAA,GACA5C,EAAA7M,EAAA8M,aACAtU,EAAAwH,EAAAuD,MAAA/K,MACAiqB,EAAAjqB,EAAAkqB,yBAAA1lB,EAAA6P,EAAAO,KAAApQ,IACAoC,EAAAY,EAAA8f,qBAAAza,EAAArI,GACA6iB,EAAA7f,EAAA4M,UAAAC,QAAA/D,OACAnf,EAAAkkB,EAAArV,EAAAupB,QAAAU,EAAA94B,EACAC,EAAAikB,EAAArV,EAAAwpB,QAAAS,EAAA74B,EAGAyb,EAAAqa,OAAAlnB,EACA6M,EAAAyW,SAAA1c,EACAiG,EAAA8I,cAAAnO,EAAAhD,MACAqI,EAAAgJ,OAAArR,EAGAqI,EAAAyD,OAAA,CACAnf,IACAC,IACAsqB,KAAAzE,EAAAyE,MAAAzb,MAAA9O,IAAA8O,MAAA7O,GAEAia,OAAAzE,EAAAyE,OACA2Q,WAAApV,EAAAoV,WACAhQ,SAAApF,EAAAoF,SACAmL,gBAAAvQ,EAAAuQ,gBACAC,YAAAxQ,EAAAwQ,YACAC,YAAAzQ,EAAAyQ,YACA5J,QAAAqc,GAAA7S,EAAAxJ,QAAA4Z,IAAA5Z,QAAA,GAGAsO,UAAAnV,EAAAmV,YAOAuL,qBAAA,SAAAtR,EAAAxR,GACA,IAMA7S,EAAA2U,EAAA5J,EALAqO,EADApN,KACAoN,MACAsJ,EAAAtJ,EAAA6J,KAAAC,SAFAlX,KAEA6G,OACAyS,EAAAjB,EAAAiB,QAAA,GACArQ,EAAAmE,EAAAnE,QAAAgQ,SAAA/J,MACA9O,EAAA,GAIA6R,EAAA,CACA7E,QACAuX,UAAA9d,EACA6P,UACAR,aAbAlW,KAaA6G,OAGAgjB,EAAA,CACArQ,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACA0E,UAAA,iBACAzE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAsD,WAAA,aACA3Q,OAAA,cACAW,SAAA,iBAEA9F,EAAAhB,OAAAgB,KAAAshB,GAEA,IAAA71B,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAC3C+K,EAAAwJ,EAAAvU,GACAoM,EAAArB,GAAAqtB,GAAA,CACA9S,EAAAva,GACA2X,EAAAmT,EAAA9qB,IACA2X,EAAA3X,GACAkK,EAAAlK,IACAkT,EAAApL,GAGA,OAAAzG,GAMAopB,oBAAA,SAAAnR,GACA,IAMArkB,EAAA2U,EAAA5J,EALAqO,EADApN,KACAoN,MACAsJ,EAAAtJ,EAAA6J,KAAAC,SAFAlX,KAEA6G,OACAyS,EAAAjB,EAAAiB,QAAA,GACArQ,EAAAmE,EAAAnE,QAAAgQ,SAAA2D,KACAxc,EAAA,GAGAmI,EAAA,CACA,kBACA,cACA,cACA,iBACA,aACA,mBACA,kBACA,QAGA,IAAAvU,EAAA,EAAA2U,EAAAJ,EAAAzI,OAAiC9L,EAAA2U,IAAU3U,EAE3CoM,EADArB,EAAAwJ,EAAAvU,IACAo4B,GAAA,CACA9S,EAAAva,GACA2X,EAAA3X,GACAkK,EAAAlK,KAMA,OAFAqB,EAAA0P,QAAAqc,GAAAzV,EAAA4S,YAAArgB,EAAA6G,SAEA1P,GAGAqpB,0BAAA,WACA,IAIAz1B,EAAA2U,EAAAoK,EAAAqX,EAHA5T,EADAxW,KACAyW,UACAtH,EAFAnP,KAEAoN,MAAAuR,UACArB,EAAA9G,EAAAS,MAAA,GAGA,SAAAoT,EAAAC,EAAAx3B,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAAw3B,EAAAt3B,GAAAF,GAGA,IAAAkB,EAAA,EAAA2U,EAAA2U,EAAAxd,OAAmC9L,EAAA2U,IAAU3U,EAC7C+e,EAAAuK,EAAAtpB,GAAA2e,OACAyX,EAAAlY,GAAAwY,YACAxY,GAAA4L,aAAAR,EAAAtpB,GAAA,GAAA2e,OACAI,EACAb,GAAAyY,SAAArN,EAAAtpB,GAAA,GAAA2e,OACAI,EAAAjD,SAIAiD,EAAA/C,sBAAAqa,EAAAD,EAAA3a,SAAAjc,EAAA2b,EAAAxB,KAAAwB,EAAAtB,OACAkF,EAAA7C,sBAAAma,EAAAD,EAAA3a,SAAAhc,EAAA0b,EAAAvB,IAAAuB,EAAArB,QACAiF,EAAA9C,kBAAAoa,EAAAD,EAAAlG,KAAA1wB,EAAA2b,EAAAxB,KAAAwB,EAAAtB,OACAkF,EAAA5C,kBAAAka,EAAAD,EAAAlG,KAAAzwB,EAAA0b,EAAAvB,IAAAuB,EAAArB,SAIAuL,cAAA,SAAAnK,GACA,IAAA6D,EAAA7D,EAAAyD,OACA1J,EAAAiG,EAAAyW,SACApM,EAAArH,GAAAqH,cAEArK,EAAAkK,eAAA,CACAI,gBAAAzG,EAAAyG,gBACAC,YAAA1G,EAAA0G,YACAC,YAAA3G,EAAA2G,YACAhM,OAAAqF,EAAArF,QAGAqF,EAAAyG,gBAAA2S,GAAAljB,EAAA0Q,qBAAAJ,EAAAtQ,EAAAuQ,kBACAzG,EAAA0G,YAAA0S,GAAAljB,EAAA2Q,iBAAAL,EAAAtQ,EAAAwQ,cACA1G,EAAA2G,YAAAyS,GAAAljB,EAAA4Q,iBAAA5Q,EAAAyQ,aACA3G,EAAArF,OAAAye,GAAAljB,EAAA8R,YAAA9R,EAAAyE,WAIAsD,GAAAT,KAAA,WACAsQ,MAAA,CACAC,KAAA,UAGAjK,OAAA,CACAC,MAAA,EACA9P,GAAA,WACAhB,KAAA,SACA8e,SAAA,WAEA9N,MAAA,EACAhQ,GAAA,WACAhB,KAAA,SACA8e,SAAA,UAIA/T,WAAA,EAEAgU,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEApD,MAAA,SAAAvX,GACA,UAAAA,EAAA6a,OAAA,KAAA7a,EAAA8a,OAAA,SAOA,IAMAoH,GAAA,CACAlL,IAAAF,GACAqL,OAAApH,GACA4G,SAAAlF,GACA2F,cAAA3D,GACAnM,KAAAyM,GACAsD,UAAAxB,GACAyB,IAAAV,GACAW,MAAAR,GACAS,QAfAzD,IAwBA,SAAA0D,GAAAtG,EAAArZ,GACA,OAAAqZ,EAAAuG,OACA,CACAx5B,EAAAizB,EAAAjzB,EACAC,EAAAgzB,EAAAhzB,GAIAye,GAAA6a,oBAAAtG,EAAArZ,GAQA,SAAA6f,GAAA7f,EAAA8f,GACA,IACA1W,EAAAxiB,EAAAkzB,EAAAve,EAAAwkB,EADAjW,EAAA9J,EAAA6J,KAAAC,SAGA,IAAAljB,EAAA,EAAA2U,EAAAuO,EAAApX,OAAoC9L,EAAA2U,IAAU3U,EAC9C,GAAAoZ,EAAA0V,iBAAA9uB,GAKA,IADAwiB,EAAApJ,EAAA+J,eAAAnjB,GACAkzB,EAAA,EAAAiG,EAAA3W,EAAAS,KAAAnX,OAAsConB,EAAAiG,IAAUjG,EAAA,CAChD,IAAA7O,EAAA7B,EAAAS,KAAAiQ,GACA7O,EAAA3F,MAAAqL,MACAmP,EAAA7U,IAYA,SAAA+U,GAAAhgB,EAAA0X,GACA,IAAA7L,EAAA,GAQA,OANAgU,GAAA7f,EAAA,SAAAiL,GACAA,EAAA2C,QAAA8J,EAAAtxB,EAAAsxB,EAAArxB,IACAwlB,EAAA/D,KAAAmD,KAIAY,EAWA,SAAAoU,GAAAjgB,EAAA0X,EAAAwI,EAAAC,GACA,IAAAC,EAAA7lB,OAAA8lB,kBACAC,EAAA,GAkBA,OAhBAT,GAAA7f,EAAA,SAAAiL,GACA,IAAAiV,GAAAjV,EAAA2C,QAAA8J,EAAAtxB,EAAAsxB,EAAArxB,GAAA,CAIA,IAAAgvB,EAAApK,EAAAwD,iBACAP,EAAAiS,EAAAzI,EAAArC,GACAnH,EAAAkS,GACAE,EAAA,CAAArV,GACAmV,EAAAlS,GACGA,IAAAkS,GAEHE,EAAAxY,KAAAmD,MAIAqV,EAQA,SAAAC,GAAA7E,GACA,IAAA8E,GAAA,IAAA9E,EAAA1e,QAAA,KACAyjB,GAAA,IAAA/E,EAAA1e,QAAA,KAEA,gBAAA0jB,EAAAC,GACA,IAAAC,EAAAJ,EAAA76B,KAAAorB,IAAA2P,EAAAt6B,EAAAu6B,EAAAv6B,GAAA,EACAy6B,EAAAJ,EAAA96B,KAAAorB,IAAA2P,EAAAr6B,EAAAs6B,EAAAt6B,GAAA,EACA,OAAAV,KAAAsC,KAAAtC,KAAAQ,IAAAy6B,EAAA,GAAAj7B,KAAAQ,IAAA06B,EAAA,KAIA,SAAAC,GAAA9gB,EAAAqZ,EAAAxd,GACA,IAAA6b,EAAAiI,GAAAtG,EAAArZ,GAEAnE,EAAA6f,KAAA7f,EAAA6f,MAAA,IACA,IAAAyE,EAAAI,GAAA1kB,EAAA6f,MACAqF,EAAAllB,EAAAqkB,UAAAF,GAAAhgB,EAAA0X,GAAAuI,GAAAjgB,EAAA0X,GAAA,EAAAyI,GACAtU,EAAA,GAEA,OAAAkV,EAAAruB,QAIAsN,EAAA6J,KAAAC,SAAAzW,QAAA,SAAAiW,EAAAR,GACA,GAAA9I,EAAA0V,iBAAA5M,GAAA,CACA,IAAAM,EAAApJ,EAAA+J,eAAAjB,GACAmC,EAAA7B,EAAAS,KAAAkX,EAAA,GAAAjW,QAGAG,MAAA3F,MAAAqL,MACA9E,EAAA/D,KAAAmD,MAKAY,GAfA,GA+BA,IAAAmV,GAAA,CAEAC,MAAA,CACAC,OAAA,SAAAlhB,EAAAqZ,GACA,IAAA3B,EAAAiI,GAAAtG,EAAArZ,GACA6L,EAAA,GASA,OAPAgU,GAAA7f,EAAA,SAAAiL,GACA,GAAAA,EAAA2C,QAAA8J,EAAAtxB,EAAAsxB,EAAArxB,GAEA,OADAwlB,EAAA/D,KAAAmD,GACAY,IAIAA,EAAA3Z,MAAA,MASAuiB,MAAAqM,GAYArnB,MAAAqnB,GAWAxX,QAAA,SAAAtJ,EAAAqZ,EAAAxd,GACA,IAAA6b,EAAAiI,GAAAtG,EAAArZ,GACAnE,EAAA6f,KAAA7f,EAAA6f,MAAA,KACA,IAAAyE,EAAAI,GAAA1kB,EAAA6f,MACAqF,EAAAllB,EAAAqkB,UAAAF,GAAAhgB,EAAA0X,GAAAuI,GAAAjgB,EAAA0X,GAAA,EAAAyI,GAMA,OAJAY,EAAAruB,OAAA,IACAquB,EAAA/gB,EAAA+J,eAAAgX,EAAA,GAAAnW,eAAAf,MAGAkX,GASAI,SAAA,SAAAnhB,EAAAqZ,GACA,OAAAyH,GAAA9gB,EAAAqZ,EAAA,CAA+B6G,WAAA,KAW/Bpe,MAAA,SAAA9B,EAAAqZ,GACA,IAAA3B,EAAAiI,GAAAtG,EAAArZ,GACA,OAAAggB,GAAAhgB,EAAA0X,IAWA0J,QAAA,SAAAphB,EAAAqZ,EAAAxd,GACA,IAAA6b,EAAAiI,GAAAtG,EAAArZ,GACAnE,EAAA6f,KAAA7f,EAAA6f,MAAA,KACA,IAAAyE,EAAAI,GAAA1kB,EAAA6f,MACA,OAAAuE,GAAAjgB,EAAA0X,EAAA7b,EAAAqkB,UAAAC,IAWA/5B,EAAA,SAAA4Z,EAAAqZ,EAAAxd,GACA,IAAA6b,EAAAiI,GAAAtG,EAAArZ,GACA+gB,EAAA,GACAM,GAAA,EAiBA,OAfAxB,GAAA7f,EAAA,SAAAiL,GACAA,EAAAmG,SAAAsG,EAAAtxB,IACA26B,EAAAjZ,KAAAmD,GAGAA,EAAA2C,QAAA8J,EAAAtxB,EAAAsxB,EAAArxB,KACAg7B,GAAA,KAMAxlB,EAAAqkB,YAAAmB,IACAN,EAAA,IAEAA,GAWA16B,EAAA,SAAA2Z,EAAAqZ,EAAAxd,GACA,IAAA6b,EAAAiI,GAAAtG,EAAArZ,GACA+gB,EAAA,GACAM,GAAA,EAiBA,OAfAxB,GAAA7f,EAAA,SAAAiL,GACAA,EAAAoG,SAAAqG,EAAArxB,IACA06B,EAAAjZ,KAAAmD,GAGAA,EAAA2C,QAAA8J,EAAAtxB,EAAAsxB,EAAArxB,KACAg7B,GAAA,KAMAxlB,EAAAqkB,YAAAmB,IACAN,EAAA,IAEAA,KAKA,SAAAO,GAAArkB,EAAAya,GACA,OAAA5S,GAAAyc,MAAAtkB,EAAA,SAAAxZ,GACA,OAAAA,EAAAi0B,eAIA,SAAA8J,GAAAvkB,EAAAhC,GACAgC,EAAA5J,QAAA,SAAA5P,EAAAmD,GAEA,OADAnD,EAAAg+B,WAAA76B,EACAnD,IAEAwZ,EAAAykB,KAAA,SAAA75B,EAAApC,GACA,IAAA+V,EAAAP,EAAAxV,EAAAoC,EACA4T,EAAAR,EAAApT,EAAApC,EACA,OAAA+V,EAAAjD,SAAAkD,EAAAlD,OACAiD,EAAAimB,WAAAhmB,EAAAgmB,WACAjmB,EAAAjD,OAAAkD,EAAAlD,SAEA0E,EAAA5J,QAAA,SAAA5P,UACAA,EAAAg+B,aA0BA,SAAAE,GAAAC,EAAAxgB,GACA0D,GAAA/J,KAAA6mB,EAAA,SAAAC,GACAzgB,EAAAygB,EAAAnK,WAAAmK,EAAA/M,eAAA+M,EAAAzhB,OAAAyhB,EAAA1hB,QAIAyD,GAAAT,KAAA,UACA2e,OAAA,CACAxQ,QAAA,CACA9Q,IAAA,EACAC,MAAA,EACAC,OAAA,EACAH,KAAA,MAyBA,IAgVAnZ,GAhVA26B,GAAA,CACA7e,SAAA,GAQA8e,OAAA,SAAAhiB,EAAA9C,GACA8C,EAAA4hB,QACA5hB,EAAA4hB,MAAA,IAIA1kB,EAAA+kB,UAAA/kB,EAAA+kB,YAAA,EACA/kB,EAAAwa,SAAAxa,EAAAwa,UAAA,MACAxa,EAAA3E,OAAA2E,EAAA3E,QAAA,EAEAyH,EAAA4hB,MAAA9Z,KAAA5K,IAQAglB,UAAA,SAAAliB,EAAAmiB,GACA,IAAA1oB,EAAAuG,EAAA4hB,MAAA5hB,EAAA4hB,MAAA5kB,QAAAmlB,IAAA,GACA,IAAA1oB,GACAuG,EAAA4hB,MAAA1Z,OAAAzO,EAAA,IAUA2oB,UAAA,SAAApiB,EAAA9C,EAAArB,GAMA,IALA,IAGA7C,EAHAqpB,EAAA,kCACA9mB,EAAA8mB,EAAA3vB,OACA9L,EAAA,EAGQA,EAAA2U,IAAU3U,EAClBoS,EAAAqpB,EAAAz7B,GACAiV,EAAA7Z,eAAAgX,KACAkE,EAAAlE,GAAA6C,EAAA7C,KAYAuR,OAAA,SAAAvK,EAAAG,EAAAC,GACA,GAAAJ,EAAA,CAIA,IAAAsiB,EAAAtiB,EAAAnE,QAAAimB,QAAA,GACAxQ,EAAAxM,GAAAjJ,QAAAmI,UAAAse,EAAAhR,SACAiR,EAAAjR,EAAA/Q,KACAiiB,EAAAlR,EAAA7Q,MACAgiB,EAAAnR,EAAA9Q,IACAkiB,EAAApR,EAAA5Q,OAEAiiB,EAAArB,GAAAthB,EAAA4hB,MAAA,QACAgB,EAAAtB,GAAAthB,EAAA4hB,MAAA,SACAiB,EAAAvB,GAAAthB,EAAA4hB,MAAA,OACAkB,EAAAxB,GAAAthB,EAAA4hB,MAAA,UACAmB,EAAAzB,GAAAthB,EAAA4hB,MAAA,aAGAJ,GAAAmB,GAAA,GACAnB,GAAAoB,GAAA,GACApB,GAAAqB,GAAA,GACArB,GAAAsB,GAAA,GAEA,IA0DAE,EA1DAC,EAAAN,EAAAvsB,OAAAwsB,GACAM,EAAAL,EAAAzsB,OAAA0sB,GACAK,EAAAF,EAAA7sB,OAAA8sB,GAwCAE,EAAAjjB,EAAAoiB,EAAAC,EACAa,EAAAjjB,EAAAqiB,EAAAC,EACAY,EAAAF,EAAA,EAGAG,GAAApjB,EAAAmjB,GAAAL,EAAAvwB,OAOA8wB,EAAAJ,EACAK,EAAAJ,EACAK,EAAA,CAAuBljB,IAAAiiB,EAAAliB,KAAAgiB,EAAA7hB,OAAAgiB,EAAAjiB,MAAA+hB,GACvBmB,EAAA,GAsBA7e,GAAA/J,KAAAooB,EAnBA,SAAAtB,GACA,IAAA3H,EACApF,EAAA+M,EAAA/M,eAEAA,GACAoF,EAAA2H,EAAAtX,OAAAsX,EAAAI,UAAAmB,EAAAI,EAAAH,EAAA,GACAI,GAAAvJ,EAAA9Z,SAEA8Z,EAAA2H,EAAAtX,OAAAgZ,EAAAE,GACAD,GAAAtJ,EAAA/Z,OAGAwjB,EAAA7b,KAAA,CACAyK,WAAAuC,EACA3U,MAAA+Z,EAAA/Z,MACA0hB,UAOAmB,EAlOA,SAAApB,GACA,IAAAphB,EAAA,EACAD,EAAA,EACAG,EAAA,EACAD,EAAA,EAUA,OATAqE,GAAA/J,KAAA6mB,EAAA,SAAAC,GACA,GAAAA,EAAA+B,WAAA,CACA,IAAAC,EAAAhC,EAAA+B,aACApjB,EAAA7a,KAAAC,IAAA4a,EAAAqjB,EAAArjB,KACAD,EAAA5a,KAAAC,IAAA2a,EAAAsjB,EAAAtjB,MACAG,EAAA/a,KAAAC,IAAA8a,EAAAmjB,EAAAnjB,QACAD,EAAA9a,KAAAC,IAAA6a,EAAAojB,EAAApjB,UAGA,CACAD,MACAD,OACAG,SACAD,SAgNAqjB,CAAAX,GA+BAre,GAAA/J,KAAAkoB,EAAAc,GACApC,GAAAsB,EAAAS,GAGA5e,GAAA/J,KAAAmoB,EAAAa,GACApC,GAAAuB,EAAAQ,GAoBA5e,GAAA/J,KAAAkoB,EAlBA,SAAApB,GACA,IAAAmC,EAAAlf,GAAAmf,cAAAN,EAAA,SAAAzJ,GACA,OAAAA,EAAA2H,UAGAqC,EAAA,CACA3jB,KAAA,EACAE,MAAA,EACAD,IAAAkjB,EAAAljB,IACAE,OAAAgjB,EAAAhjB,QAGAsjB,GACAnC,EAAAtX,OAAAyZ,EAAA7jB,MAAAsjB,EAAAS,KASAvC,GAAAwB,EADAO,EAAA,CAAmBljB,IAAAiiB,EAAAliB,KAAAgiB,EAAA7hB,OAAAgiB,EAAAjiB,MAAA+hB,IAInB,IAAA2B,EAAAx+B,KAAAC,IAAAo9B,EAAAziB,KAAAmjB,EAAAnjB,KAAA,GACAmjB,EAAAnjB,MAAA4jB,EACAT,EAAAjjB,OAAA9a,KAAAC,IAAAo9B,EAAAviB,MAAAijB,EAAAjjB,MAAA,GAEA,IAAA2jB,EAAAz+B,KAAAC,IAAAo9B,EAAAxiB,IAAAkjB,EAAAljB,IAAA,GACAkjB,EAAAljB,KAAA4jB,EACAV,EAAAhjB,QAAA/a,KAAAC,IAAAo9B,EAAAtiB,OAAAgjB,EAAAhjB,OAAA,GAKA,IAAA2jB,EAAAjkB,EAAAsjB,EAAAljB,IAAAkjB,EAAAhjB,OACA4jB,EAAAnkB,EAAAujB,EAAAnjB,KAAAmjB,EAAAjjB,MAEA6jB,IAAAd,GAAAa,IAAAZ,IACA3e,GAAA/J,KAAAkoB,EAAA,SAAApB,GACAA,EAAAzhB,OAAAikB,IAGAvf,GAAA/J,KAAAmoB,EAAA,SAAArB,GACAA,EAAAI,YACAJ,EAAA1hB,MAAAmkB,KAIAb,EAAAY,EACAb,EAAAc,GAIA,IAAA/jB,EAAAgiB,EAAA4B,EACA3jB,EAAAiiB,EAAA2B,EAwBAtf,GAAA/J,KAAA4nB,EAAAvsB,OAAAysB,GAAA0B,GAGAhkB,GAAAijB,EACAhjB,GAAAijB,EAEA3e,GAAA/J,KAAA6nB,EAAA2B,GACAzf,GAAA/J,KAAA+nB,EAAAyB,GAGAvkB,EAAAuR,UAAA,CACAhR,KAAAmjB,EAAAnjB,KACAC,IAAAkjB,EAAAljB,IACAC,MAAAijB,EAAAnjB,KAAAijB,EACA9iB,OAAAgjB,EAAAljB,IAAAijB,GAIA3e,GAAA/J,KAAAgoB,EAAA,SAAAlB,GACAA,EAAAthB,KAAAP,EAAAuR,UAAAhR,KACAshB,EAAArhB,IAAAR,EAAAuR,UAAA/Q,IACAqhB,EAAAphB,MAAAT,EAAAuR,UAAA9Q,MACAohB,EAAAnhB,OAAAV,EAAAuR,UAAA7Q,OAEAmhB,EAAAtX,OAAAiZ,EAAAC,KAvIA,SAAAM,EAAAlC,GACA,IAAAmC,EAAAlf,GAAAmf,cAAAN,EAAA,SAAAa,GACA,OAAAA,EAAA3C,UAGA,GAAAmC,EACA,GAAAA,EAAAzR,WAAA,CACA,IAAA2R,EAAA,CACA3jB,KAAA5a,KAAAC,IAAA89B,EAAAnjB,KAAAyiB,EAAAziB,MACAE,MAAA9a,KAAAC,IAAA89B,EAAAjjB,MAAAuiB,EAAAviB,OACAD,IAAA,EACAE,OAAA,GAKAmhB,EAAAtX,OAAAsX,EAAAI,UAAAmB,EAAAI,EAAAH,EAAA,EAAAa,QAEArC,EAAAtX,OAAAyZ,EAAA7jB,MAAAsjB,GAuEA,SAAAc,EAAA1C,GACAA,EAAA/M,gBACA+M,EAAAthB,KAAAshB,EAAAI,UAAAM,EAAAmB,EAAAnjB,KACAshB,EAAAphB,MAAAohB,EAAAI,UAAA9hB,EAAAqiB,EAAAkB,EAAAnjB,KAAAijB,EACA3B,EAAArhB,MACAqhB,EAAAnhB,OAAAF,EAAAqhB,EAAAzhB,OAGAI,EAAAqhB,EAAAnhB,SAIAmhB,EAAAthB,OACAshB,EAAAphB,MAAAF,EAAAshB,EAAA1hB,MACA0hB,EAAArhB,IAAAkjB,EAAAljB,IACAqhB,EAAAnhB,OAAAgjB,EAAAljB,IAAAijB,EAGAljB,EAAAshB,EAAAphB,UA2DAgkB,IAJAr9B,GAJA+S,OAAAuqB,OAAA,CACAC,QAHA,w3BAOAv9B,GAAAu9B,SAAAv9B,GAKAw9B,GAAA,WAEAC,GAAAC,uBACAC,GAAAD,yBACAE,GAAAF,2BACAG,GAAA,0CAOAC,GAAA,CACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,GAAA3a,EAAA4a,GACA,IAAAjwB,EAAAkP,GAAAghB,SAAA7a,EAAA4a,GACA9hB,EAAAnO,KAAAf,MAAA,qBACA,OAAAkP,EAAAxJ,OAAAwJ,EAAA,SAAAtR,EA+DA,IAkBAszB,KAlBA,WACA,IAAAC,GAAA,EACA,IACA,IAAAnqB,EAAA1B,OAAA2M,eAAA,GAAwC,WAExCC,IAAA,WACAif,GAAA,KAGArsB,OAAAssB,iBAAA,SAAApqB,GACE,MAAAwd,IAGF,OAAA2M,EAbA,IAkBA,CAA2DE,SAAA,GAE3D,SAAAC,GAAAC,EAAAxtB,EAAA6P,GACA2d,EAAAH,iBAAArtB,EAAA6P,EAAAsd,IAGA,SAAAM,GAAAD,EAAAxtB,EAAA6P,GACA2d,EAAAE,oBAAA1tB,EAAA6P,EAAAsd,IAGA,SAAAQ,GAAA3tB,EAAAoH,EAAA5Z,EAAAC,EAAAmgC,GACA,OACA5tB,OACAoH,QACA4f,OAAA4G,GAAA,KACApgC,OAAAqM,IAAArM,IAAA,KACAC,OAAAoM,IAAApM,IAAA,MA4BA,SAAAogC,GAAAC,GACA,IAAAC,EAAAC,SAAAC,cAAA,OAEA,OADAF,EAAAG,UAAAJ,GAAA,GACAC,EA0EA,SAAAI,GAAAX,EAAA3d,EAAAzI,GACA,IAhGApF,EAAAC,EACAmsB,EACAtkC,EA8FAukC,EAAAb,EAAAxB,MAAAwB,EAAAxB,IAAA,IAGAsC,EAAAD,EAAAC,QA1EA,SAAApH,GACA,IAIAoH,EAAAT,GAAA5B,IACAsC,EAAAV,GAAA5B,GAAA,WACAuC,EAAAX,GAAA5B,GAAA,WAEAsC,EAAAE,YAAAZ,MACAW,EAAAC,YAAAZ,MAEAS,EAAAG,YAAAF,GACAD,EAAAG,YAAAD,GACAF,EAAAI,OAAA,WACAH,EAAAI,WAdA,IAeAJ,EAAAK,UAfA,IAgBAJ,EAAAG,WAhBA,IAiBAH,EAAAI,UAjBA,KAoBA,IAAAC,EAAA,WACAP,EAAAI,SACAxH,KAMA,OAHAqG,GAAAgB,EAAA,SAAAM,EAAAC,KAAAP,EAAA,WACAhB,GAAAiB,EAAA,SAAAK,EAAAC,KAAAN,EAAA,WAEAF,EA6CAS,EAnGA/sB,EAmGA,WACA,GAAAqsB,EAAAC,QAAA,CACA,IAAAU,EAAA5nB,EAAAnE,QAAAgsB,qBAAAzB,EAAA0B,WACAhiC,EAAA8hC,IAAAG,YAAA,EACAtf,EAAA8d,GAAA,SAAAvmB,IACA4nB,KAAAG,YAAAjiC,GAAAka,EAAAgF,QAQAyD,EAAA8d,GAAA,SAAAvmB,MA/GAgnB,GAAA,EACAtkC,EAAA,GAEA,WACAA,EAAAsP,MAAAC,UAAAC,MAAAC,KAAAC,WACAyI,KAAAjI,KAEAo0B,IACAA,GAAA,EACAliB,GAAAqD,iBAAAhW,KAAAwH,OAAA,WACAqtB,GAAA,EACApsB,EAAAE,MAAAD,EAAAnY,UA8CA,SAAA0jC,EAAAtG,GACA,IAAAmH,EAAAb,EAAAxB,MAAAwB,EAAAxB,IAAA,IACAoD,EAAAf,EAAAgB,YAAA,SAAA5O,GACAA,EAAA6O,gBAAAlD,IACAlF,KAIAhb,GAAA/J,KAAAkqB,GAAA,SAAArsB,GACAutB,GAAAC,EAAAxtB,EAAAovB,KAQAf,EAAAkB,SAAA/B,EAAAgC,aAEAhC,EAAAiC,UAAAC,IAAAvD,IA0CAwD,CAAAnC,EAAA,WACA,GAAAa,EAAAC,QAAA,CACA,IAAAU,EAAAxB,EAAA0B,WACAF,OAAAV,EAAAY,YACAF,EAAAY,aAAAtB,EAAAU,EAAAa,YAIAvB,EAAAI,YAKA,SAAAoB,GAAAtC,GACA,IAAAa,EAAAb,EAAAxB,KAAA,GACAsC,EAAAD,EAAAC,eAEAD,EAAAC,QAxDA,SAAAd,GACA,IAAAa,EAAAb,EAAAxB,KAAA,GACAoD,EAAAf,EAAAgB,YAEAD,IACAljB,GAAA/J,KAAAkqB,GAAA,SAAArsB,GACAytB,GAAAD,EAAAxtB,EAAAovB,YAGAf,EAAAgB,aAGA7B,EAAAiC,UAAAM,OAAA5D,IA6CA6D,CAAAxC,GAEAc,KAAAY,YACAZ,EAAAY,WAAAe,YAAA3B,GAiBA,IAAA4B,GAAA,CAQAC,qBAAA,EAOAC,SAAA,oBAAArvB,QAAA,oBAAAitB,SAKAqC,cAAA,WACAr2B,KAAAs2B,UAIAt2B,KAAAs2B,SAAA,EAGAt2B,KAAAm2B,qBAzCA,SAAAI,EAAAC,GAEA,IAAApoB,EAAAmoB,EAAAE,QAAAzC,SAAAC,cAAA,SACAsC,EAAAE,SACAF,EAAAE,OAAAroB,EACAooB,EAAA,mBAAAA,EACApoB,EAAAsoB,aAAA,mBACA1C,SAAA2C,qBAAA,WAAAlC,YAAArmB,IAGAA,EAAAqmB,YAAAT,SAAA4C,eAAAJ,IAgCAK,CAAA72B,KAAA6xB,MAIAiF,eAAA,SAAAxsB,EAAAysB,GACA,iBAAAzsB,EACAA,EAAA0pB,SAAAgD,eAAA1sB,GACGA,EAAAxK,SAEHwK,IAAA,IAGAA,KAAA8H,SAEA9H,IAAA8H,QAMA,IAAAH,EAAA3H,KAAA2sB,YAAA3sB,EAAA2sB,WAAA,MAaA,OATAj3B,KAAAq2B,gBASApkB,KAAAG,SAAA9H,GA9TA,SAAA8H,EAAA2kB,GACA,IAAA3oB,EAAAgE,EAAAhE,MAIA8oB,EAAA9kB,EAAA+kB,aAAA,UACAC,EAAAhlB,EAAA+kB,aAAA,SAoBA,GAjBA/kB,EAAA4f,IAAA,CACAqF,QAAA,CACA7pB,OAAA0pB,EACA3pB,MAAA6pB,EACAhpB,MAAA,CACA2c,QAAA3c,EAAA2c,QACAvd,OAAAY,EAAAZ,OACAD,MAAAa,EAAAb,SAQAa,EAAA2c,QAAA3c,EAAA2c,SAAA,QAEA,OAAAqM,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAAtE,GAAA5gB,EAAA,cACAvS,IAAAy3B,IACAllB,EAAA7E,MAAA+pB,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAA9kB,EAAAhE,MAAAZ,OAIA4E,EAAA5E,OAAA4E,EAAA7E,OAAAwpB,EAAA9tB,QAAAsuB,aAAA,OACG,CACH,IAAAC,EAAAxE,GAAA5gB,EAAA,eACAvS,IAAAy3B,IACAllB,EAAA5E,OAAAgqB,IAqRAC,CAAAntB,EAAAysB,GACA9kB,GAGA,MAGAylB,eAAA,SAAAzlB,GACA,IAAAG,EAAAH,EAAAG,OACA,GAAAA,EAAA4f,IAAA,CAIA,IAAAqF,EAAAjlB,EAAA4f,IAAAqF,QACA,mBAAA52B,QAAA,SAAA2F,GACA,IAAApD,EAAAq0B,EAAAjxB,GACA8L,GAAA7K,cAAArE,GACAoP,EAAAulB,gBAAAvxB,GAEAgM,EAAAskB,aAAAtwB,EAAApD,KAIAkP,GAAA/J,KAAAkvB,EAAAjpB,OAAA,GAAoC,SAAApL,EAAAjE,GACpCqT,EAAAhE,MAAArP,GAAAiE,IAQAoP,EAAA7E,MAAA6E,EAAA7E,aAEA6E,EAAA4f,MAGAqB,iBAAA,SAAAjmB,EAAApH,EAAA6P,GACA,IAAAzD,EAAAhF,EAAAgF,OACA,cAAApM,EAAA,CAMA,IAAAquB,EAAAxe,EAAAmc,MAAAnc,EAAAmc,IAAA,IACA4F,EAAAvD,EAAAuD,UAAAvD,EAAAuD,QAAA,IACAxC,EAAAwC,EAAAxqB,EAAApG,GAAA,IAAAhB,GAAA,SAAA6xB,GACAhiB,EAlRA,SAAAgiB,EAAAzqB,GACA,IAAApH,EAAAssB,GAAAuF,EAAA7xB,OAAA6xB,EAAA7xB,KACA8xB,EAAA5lB,GAAA6a,oBAAA8K,EAAAzqB,GACA,OAAAumB,GAAA3tB,EAAAoH,EAAA0qB,EAAAtkC,EAAAskC,EAAArkC,EAAAokC,GA+QAE,CAAAF,EAAAzqB,KAGAmmB,GAAAnhB,EAAApM,EAAAovB,QAVAjB,GAAA/hB,EAAAyD,EAAAzI,IAaAsmB,oBAAA,SAAAtmB,EAAApH,EAAA6P,GACA,IAAAzD,EAAAhF,EAAAgF,OACA,cAAApM,EAAA,CAMA,IAAAquB,EAAAxe,EAAAmc,KAAA,GACA4F,EAAAvD,EAAAuD,SAAA,GACAxC,EAAAwC,EAAAxqB,EAAApG,GAAA,IAAAhB,GACAovB,GAIA3B,GAAArhB,EAAApM,EAAAovB,QAXAU,GAAA1jB,KA0BAF,GAAA8lB,SAAAzE,GAWArhB,GAAA+lB,YAAAxE,GAGA,IAAAyE,GAAAhC,GAAAE,SAAAF,GApeA,CACAY,eAAA,SAAAxsB,GAMA,OALAA,KAAA8H,SAEA9H,IAAA8H,QAGA9H,KAAA2sB,WAAA,cAoeAV,GAAArkB,GAAAzI,OAAA,CAIA8I,WAAA,aASAukB,eAAA,aAQAY,eAAA,aASArE,iBAAA,aAQAK,oBAAA,cAECwE,IAEDlnB,GAAAT,KAAA,UACA4nB,QAAA,KAQA,IAAAC,GAAA,CAKAC,SAAA,GAQAC,SAAA,EAMAC,SAAA,SAAAJ,GACA,IAAA/jC,EAAA4L,KAAAq4B,SACA,GAAA70B,OAAA20B,GAAA13B,QAAA,SAAA+3B,IACA,IAAApkC,EAAAgW,QAAAouB,IACApkC,EAAA8gB,KAAAsjB,KAIAx4B,KAAAs4B,YAOAG,WAAA,SAAAN,GACA,IAAA/jC,EAAA4L,KAAAq4B,SACA,GAAA70B,OAAA20B,GAAA13B,QAAA,SAAA+3B,GACA,IAAAE,EAAAtkC,EAAAgW,QAAAouB,IACA,IAAAE,GACAtkC,EAAAkhB,OAAAojB,EAAA,KAIA14B,KAAAs4B,YAOAnrB,MAAA,WACAnN,KAAAq4B,SAAA,GACAr4B,KAAAs4B,YAQAre,MAAA,WACA,OAAAja,KAAAq4B,SAAAv4B,QAQA64B,OAAA,WACA,OAAA34B,KAAAq4B,UAYAO,OAAA,SAAAxrB,EAAAyrB,EAAA/oC,GACA,IAEAkE,EAAA8kC,EAAAN,EAAAO,EAAApgB,EAFAqgB,EAAAh5B,KAAAg5B,YAAA5rB,GACAzE,EAAAqwB,EAAAl5B,OAGA,IAAA9L,EAAA,EAAaA,EAAA2U,IAAU3U,EAIvB,GAHA8kC,EAAAE,EAAAhlC,GACAwkC,EAAAM,EAAAN,OAEA,mBADA7f,EAAA6f,EAAAK,OAEAE,EAAA,CAAA3rB,GAAA5J,OAAA1T,GAAA,KACAolB,KAAA4jB,EAAA7vB,UACA,IAAA0P,EAAAzQ,MAAAswB,EAAAO,IACA,SAKA,UAQAC,YAAA,SAAA5rB,GACA,IAAA6rB,EAAA7rB,EAAA8rB,WAAA9rB,EAAA8rB,SAAA,IACA,GAAAD,EAAAjyB,KAAAhH,KAAAs4B,SACA,OAAAW,EAAAD,YAGA,IAAAb,EAAA,GACAa,EAAA,GACAjC,EAAA3pB,KAAA2pB,QAAA,GACA9tB,EAAA8tB,EAAA9tB,SAAA8tB,EAAA9tB,QAAAkvB,SAAA,GA2BA,OAzBAn4B,KAAAq4B,SAAA70B,OAAAuzB,EAAAoB,SAAA,IAAA13B,QAAA,SAAA+3B,GACA,IAAAE,EAAAP,EAAA/tB,QAAAouB,GACA,QAAAE,EAAA,CAIA,IAAA1xB,EAAAwxB,EAAAxxB,GACAmgB,EAAAle,EAAAjC,IACA,IAAAmgB,KAIA,IAAAA,IACAA,EAAAjV,GAAAnM,MAAAiL,GAAAO,OAAA4mB,QAAAnxB,KAGAmxB,EAAAjjB,KAAAsjB,GACAQ,EAAA9jB,KAAA,CACAsjB,SACAvvB,QAAAke,GAAA,SAIA8R,EAAAD,cACAC,EAAAjyB,GAAAhH,KAAAs4B,SACAU,GASAG,YAAA,SAAA/rB,UACAA,EAAA8rB,WAIAE,GAAA,CAGAC,aAAA,GAKA/oB,SAAA,GACAgpB,kBAAA,SAAAtzB,EAAAuzB,EAAAC,GACAx5B,KAAAq5B,aAAArzB,GAAAuzB,EACAv5B,KAAAsQ,SAAAtK,GAAAkM,GAAAnM,MAAAyzB,IAEAC,oBAAA,SAAAzzB,GACA,OAAAhG,KAAAq5B,aAAAjqC,eAAA4W,GAAAhG,KAAAq5B,aAAArzB,QAAAnG,GAEA65B,iBAAA,SAAA1zB,GAEA,OAAAhG,KAAAsQ,SAAAlhB,eAAA4W,GAAAkM,GAAA9I,MAAA,GAAgE,CAAA4H,GAAA3O,MAAArC,KAAAsQ,SAAAtK,KAAA,IAEhE2zB,oBAAA,SAAA3zB,EAAA4zB,GACA55B,KACAsQ,SAAAlhB,eAAA4W,KADAhG,KAEAsQ,SAAAtK,GAAAkM,GAAAzI,OAFAzJ,KAEAsQ,SAAAtK,GAAA4zB,KAGAC,kBAAA,SAAAzsB,GAEA8E,GAAA/J,KAAAiF,EAAAyJ,OAAA,SAAAxU,GAEAA,EAAAgtB,UAAAhtB,EAAA4G,QAAAomB,UACAhtB,EAAAyiB,SAAAziB,EAAA4G,QAAA6b,SACAziB,EAAAsD,OAAAtD,EAAA4G,QAAAtD,OACAwpB,GAAAC,OAAAhiB,EAAA/K,OAKAy3B,GAAA5nB,GAAAtK,eAEAoJ,GAAAT,KAAA,UACAwU,SAAA,CACAgV,SAAA,EACAzgB,OAAA,KACAwH,KAAA,UACAgE,SAAA,UACAwI,WAAA,EACA9T,gBAAA,kBACAwgB,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACAvsB,aAAA,EACAwsB,mBAAA,OACAC,eAAA,EACAzhB,YAAA,gBACAC,YAAA,EACAsL,UAAA,CAEAmW,YAAAjpB,GAAA/K,KACA8d,MAAA,SAAAmW,EAAAnkB,GACA,IAAAgO,EAAA,GACAnD,EAAA7K,EAAA6K,OACAuZ,EAAAvZ,IAAAhiB,OAAA,EAEA,GAAAs7B,EAAAt7B,OAAA,GACA,IAAAwK,EAAA8wB,EAAA,GACA9wB,EAAAuX,MACAoD,EAAA3a,EAAAuX,MACMvX,EAAA6a,OACNF,EAAA3a,EAAA6a,OACMkW,EAAA,GAAA/wB,EAAAzD,MAAAw0B,IACNpW,EAAAnD,EAAAxX,EAAAzD,QAIA,OAAAoe,GAEAqW,WAAAppB,GAAA/K,KAGAo0B,WAAArpB,GAAA/K,KAGAq0B,YAAAtpB,GAAA/K,KACA0a,MAAA,SAAAgF,EAAA5P,GACA,IAAA4K,EAAA5K,EAAAC,SAAA2P,EAAA3Q,cAAA2L,OAAA,GAUA,OARAA,IACAA,GAAA,MAEA3P,GAAA7K,cAAAwf,EAAA7jB,OAGA6e,GAAAgF,EAAAzB,OAFAvD,GAAAgF,EAAA7jB,MAIA6e,GAEA4Z,WAAA,SAAA5U,EAAAzZ,GACA,IAAAoJ,EAAApJ,EAAA+J,eAAA0P,EAAA3Q,cACAwlB,EAAAllB,EAAAS,KAAA4P,EAAAhgB,OACAoM,EAAAyoB,EAAAhpB,MACA,OACA+G,YAAAxG,EAAAwG,YACAD,gBAAAvG,EAAAuG,kBAGAmiB,eAAA,WACA,OAAA37B,KAAA2lB,SAAA2U,eAEAsB,WAAA1pB,GAAA/K,KAGA00B,UAAA3pB,GAAA/K,KAGA20B,aAAA5pB,GAAA/K,KACA40B,OAAA7pB,GAAA/K,KACA60B,YAAA9pB,GAAA/K,SAKA,IAAA80B,GAAA,CAOAC,QAAA,SAAAjjB,GACA,IAAAA,EAAAnZ,OACA,SAGA,IAAA9L,EAAAsU,EACA9U,EAAA,EACAC,EAAA,EACAwmB,EAAA,EAEA,IAAAjmB,EAAA,EAAAsU,EAAA2Q,EAAAnZ,OAAoC9L,EAAAsU,IAAStU,EAAA,CAC7C,IAAA+/B,EAAA9a,EAAAjlB,GACA,GAAA+/B,KAAAvgB,WAAA,CACA,IAAAskB,EAAA/D,EAAAxgB,kBACA/f,GAAAskC,EAAAtkC,EACAC,GAAAqkC,EAAArkC,IACAwmB,GAIA,OACAzmB,IAAAymB,EACAxmB,IAAAwmB,IAWAuU,QAAA,SAAAvV,EAAAkjB,GACA,IAGAnoC,EAAAsU,EAAA8zB,EAHA5oC,EAAA2oC,EAAA3oC,EACAC,EAAA0oC,EAAA1oC,EACA+5B,EAAA7lB,OAAA8lB,kBAGA,IAAAz5B,EAAA,EAAAsU,EAAA2Q,EAAAnZ,OAAoC9L,EAAAsU,IAAStU,EAAA,CAC7C,IAAA+/B,EAAA9a,EAAAjlB,GACA,GAAA+/B,KAAAvgB,WAAA,CACA,IAAAiP,EAAAsR,EAAAlY,iBACAwgB,EAAAnqB,GAAAoqB,sBAAAH,EAAA1Z,GAEA4Z,EAAA7O,IACAA,EAAA6O,EACAD,EAAArI,IAKA,GAAAqI,EAAA,CACA,IAAAG,EAAAH,EAAA7oB,kBACA/f,EAAA+oC,EAAA/oC,EACAC,EAAA8oC,EAAA9oC,EAGA,OACAD,IACAC,OAMA,SAAA+oC,GAAA5jB,EAAA6jB,GAUA,OATAA,IACAvqB,GAAA5K,QAAAm1B,GAEAr9B,MAAAC,UAAA6V,KAAAhN,MAAA0Q,EAAA6jB,GAEA7jB,EAAA1D,KAAAunB,IAIA7jB,EASA,SAAA8jB,GAAAl6B,GACA,wBAAAA,gBAAAm6B,SAAAn6B,EAAA4H,QAAA,SACA5H,EAAAo6B,MAAA,MAEAp6B,EAkCA,SAAAq6B,GAAAC,GACA,IAAAxrB,EAAAN,GAAAO,OAEA,OAEAupB,SAAAgC,EAAAhC,SACAD,SAAAiC,EAAAjC,SACAkC,OAAAD,EAAAC,OACAC,OAAAF,EAAAE,OAGA1C,cAAAwC,EAAAxC,cACA2C,gBAAAnD,GAAAgD,EAAAI,eAAA5rB,EAAAX,mBACAwsB,eAAArD,GAAAgD,EAAAM,cAAA9rB,EAAAT,kBACAwsB,WAAAP,EAAAvC,UACA+C,aAAAxD,GAAAgD,EAAAQ,aAAAhsB,EAAAV,iBACAypB,YAAAyC,EAAAzC,YAGAF,eAAA2C,EAAA3C,eACAoD,iBAAAzD,GAAAgD,EAAAU,gBAAAlsB,EAAAX,mBACA8sB,gBAAA3D,GAAAgD,EAAA9C,eAAA1oB,EAAAT,kBACA6sB,cAAA5D,GAAAgD,EAAAY,cAAApsB,EAAAV,iBACA+sB,YAAAb,EAAA1C,WACAH,aAAA6C,EAAA7C,aACAC,kBAAA4C,EAAA5C,kBAGAS,gBAAAmC,EAAAnC,gBACAiD,kBAAA9D,GAAAgD,EAAAe,iBAAAvsB,EAAAX,mBACAmtB,iBAAAhE,GAAAgD,EAAAtC,gBAAAlpB,EAAAT,kBACAktB,eAAAjE,GAAAgD,EAAAiB,eAAAzsB,EAAAV,iBACAotB,aAAAlB,EAAAlC,YACAH,cAAAqC,EAAArC,cACAC,gBAAAoC,EAAApC,gBAGAM,UAAA8B,EAAA9B,UACAvsB,aAAAquB,EAAAruB,aACA+K,gBAAAsjB,EAAAtjB,gBACAykB,QAAA,EACAC,sBAAApB,EAAA7B,mBACAC,cAAA4B,EAAA5B,cACAzhB,YAAAqjB,EAAArjB,YACAC,YAAAojB,EAAApjB,aAuMA,SAAAykB,GAAArjB,EAAAsjB,GACA,iBAAAA,EACAtjB,EAAAtnB,EAAAsnB,EAAAvN,MAAA,EACA,UAAA6wB,EACAtjB,EAAAtnB,EAAAsnB,EAAAvN,MAAAuN,EAAAggB,SACAhgB,EAAAtnB,EAAAsnB,EAAAggB,SAMA,SAAAuD,GAAAt2B,GACA,OAAAy0B,GAAA,GAAAE,GAAA30B,IAGA,IAAAu2B,GAAA5qB,GAAAjK,OAAA,CACA8I,WAAA,WACAvS,KAAA2S,OAAAkqB,GAAA78B,KAAA2lB,UACA3lB,KAAAu+B,YAAA,IAKAC,SAAA,WACA,IACArX,EADAnnB,KACA2lB,SACAX,EAAAmC,EAAAnC,UAEAmW,EAAAnW,EAAAmW,YAAAjzB,MAJAlI,KAIAR,WACAylB,EAAAD,EAAAC,MAAA/c,MALAlI,KAKAR,WACA87B,EAAAtW,EAAAsW,WAAApzB,MANAlI,KAMAR,WAEAi/B,EAAA,GAKA,OAJAA,EAAAjC,GAAAiC,EAAA/B,GAAAvB,IACAsD,EAAAjC,GAAAiC,EAAA/B,GAAAzX,IACAwZ,EAAAjC,GAAAiC,EAAA/B,GAAApB,KAMAoD,cAAA,WACA,OAAAL,GAAAr+B,KAAA2lB,SAAAX,UAAAuW,WAAArzB,MAAAlI,KAAAR,aAIAm/B,QAAA,SAAAvD,EAAAnkB,GACA,IAAApN,EAAA7J,KACAglB,EAAAnb,EAAA8b,SAAAX,UACA4Z,EAAA,GAeA,OAbA1sB,GAAA/J,KAAAizB,EAAA,SAAAvU,GACA,IAAAgY,EAAA,CACAC,OAAA,GACAL,MAAA,GACAM,MAAA,IAEAvC,GAAAqC,EAAAC,OAAApC,GAAA1X,EAAAwW,YAAAj8B,KAAAsK,EAAAgd,EAAA5P,KACAulB,GAAAqC,EAAAJ,MAAAzZ,EAAAnD,MAAAtiB,KAAAsK,EAAAgd,EAAA5P,IACAulB,GAAAqC,EAAAE,MAAArC,GAAA1X,EAAA4W,WAAAr8B,KAAAsK,EAAAgd,EAAA5P,KAEA2nB,EAAA1pB,KAAA2pB,KAGAD,GAIAI,aAAA,WACA,OAAAX,GAAAr+B,KAAA2lB,SAAAX,UAAA6W,UAAA3zB,MAAAlI,KAAAR,aAKAy/B,UAAA,WACA,IACAja,EADAhlB,KACA2lB,SAAAX,UAEA8W,EAAA9W,EAAA8W,aAAA5zB,MAHAlI,KAGAR,WACAu8B,EAAA/W,EAAA+W,OAAA7zB,MAJAlI,KAIAR,WACAw8B,EAAAhX,EAAAgX,YAAA9zB,MALAlI,KAKAR,WAEAi/B,EAAA,GAKA,OAJAA,EAAAjC,GAAAiC,EAAA/B,GAAAZ,IACA2C,EAAAjC,GAAAiC,EAAA/B,GAAAX,IACA0C,EAAAjC,GAAAiC,EAAA/B,GAAAV,KAKArkB,OAAA,SAAAunB,GACA,IA8BAlrC,EAAAsU,EArYA+P,EACAiN,EACAC,EACA1e,EACAqP,EACA8N,EACAmb,EACAC,EAgWAv1B,EAAA7J,KACAmnB,EAAAtd,EAAA8b,SAKA0Z,EAAAx1B,EAAA8I,OACAI,EAAAlJ,EAAA8I,OAAAkqB,GAAA1V,GACAmY,EAAAz1B,EAAA01B,QAEAtoB,EAAApN,EAAAgO,MAGA2nB,EAAA,CACAzC,OAAAsC,EAAAtC,OACAC,OAAAqC,EAAArC,QAEAyC,EAAA,CACAjsC,EAAA6rC,EAAA7rC,EACAC,EAAA4rC,EAAA5rC,GAEAisC,EAAA,CACAnyB,MAAA8xB,EAAA9xB,MACAC,OAAA6xB,EAAA7xB,QAEA+F,EAAA,CACA/f,EAAA6rC,EAAAM,OACAlsC,EAAA4rC,EAAAO,QAKA,GAAAN,EAAAx/B,OAAA,CACAiT,EAAAkrB,QAAA,EAEA,IAAA4B,EAAA,GACAC,EAAA,GACAvsB,EAAA0oB,GAAA9U,EAAArC,UAAAvlB,KAAAsK,EAAAy1B,EAAAz1B,EAAAk2B,gBAEA,IAAA3E,EAAA,GACA,IAAApnC,EAAA,EAAAsU,EAAAg3B,EAAAx/B,OAAmC9L,EAAAsU,IAAStU,EAC5ConC,EAAAlmB,MAhZAmD,EAgZAinB,EAAAtrC,GA/YAsxB,SACAC,SACA1e,SACAqP,SACA8N,SACAmb,SACAC,SANA9Z,EAAAjN,EAAAqJ,QACA6D,EAAAlN,EAAAsJ,SAAAtJ,EAAAkR,OACA1iB,EAAAwR,EAAAH,OACAhC,EAAAmC,EAAAL,cACAgM,EAAA3L,EAAAN,OAAAZ,eAAAjB,GAAA8N,WACAmb,EAAAnb,EAAAvM,iBACA2nB,EAAApb,EAAAxM,iBAEA,CACA2N,OAAAG,IAAA0a,iBAAAn5B,EAAAqP,GAAA,GACAkP,OAAAG,IAAAya,iBAAAn5B,EAAAqP,GAAA,GACA2L,MAAAsd,EAAA,GAAAA,EAAAa,iBAAAn5B,EAAAqP,GAAA,GACAlT,MAAAo8B,EAAA,GAAAA,EAAAY,iBAAAn5B,EAAAqP,GAAA,GACArP,QACAqP,eACA1iB,EAAA6kB,EAAA1F,OAAAnf,EACAC,EAAA4kB,EAAA1F,OAAAlf,KAmYA0zB,EAAAoD,SACA6Q,IAAA7Q,OAAA,SAAAt1B,GACA,OAAAkyB,EAAAoD,OAAAt1B,EAAAgiB,MAKAkQ,EAAA8Y,WACA7E,IAAAtM,KAAA,SAAA75B,EAAApC,GACA,OAAAs0B,EAAA8Y,SAAAhrC,EAAApC,EAAAokB,MAKA/E,GAAA/J,KAAAizB,EAAA,SAAAvU,GACAgZ,EAAA3qB,KAAAiS,EAAAnC,UAAAyW,WAAAl8B,KAAAsK,EAAAgd,EAAAhd,EAAAkO,SACA+nB,EAAA5qB,KAAAiS,EAAAnC,UAAA2W,eAAAp8B,KAAAsK,EAAAgd,EAAAhd,EAAAkO,WAKAhF,EAAAkS,MAAApb,EAAA20B,SAAApD,EAAAnkB,GACAlE,EAAAwoB,WAAA1xB,EAAA60B,cAAAtD,EAAAnkB,GACAlE,EAAAmtB,KAAAr2B,EAAA80B,QAAAvD,EAAAnkB,GACAlE,EAAA8oB,UAAAhyB,EAAAm1B,aAAA5D,EAAAnkB,GACAlE,EAAAgpB,OAAAlyB,EAAAo1B,UAAA7D,EAAAnkB,GAGAlE,EAAAvf,EAAA+f,EAAA/f,EACAuf,EAAAtf,EAAA8f,EAAA9f,EACAsf,EAAAgoB,aAAA5T,EAAA4T,aACAhoB,EAAA8sB,cACA9sB,EAAA+sB,kBAGA/sB,EAAAotB,WAAA/E,EAGAsE,EA9WA,SAAAU,EAAArtB,GACA,IAAA1F,EAAA+yB,EAAAroB,OAAA1K,IAEAG,EAAA,EAAAuF,EAAA8nB,SACAttB,EAAA,EAGA2yB,EAAAntB,EAAAmtB,KACAG,EAAAH,EAAAI,OAAA,SAAArmB,EAAA4kB,GACA,OAAA5kB,EAAA4kB,EAAAC,OAAAh/B,OAAA++B,EAAAJ,MAAA3+B,OAAA++B,EAAAE,MAAAj/B,QACE,GACFugC,GAAAttB,EAAAwoB,WAAAz7B,OAAAiT,EAAA8oB,UAAA/7B,OAEA,IAAAygC,EAAAxtB,EAAAkS,MAAAnlB,OACA0gC,EAAAztB,EAAAgpB,OAAAj8B,OACA49B,EAAA3qB,EAAA2qB,cACAJ,EAAAvqB,EAAAuqB,aACAS,EAAAhrB,EAAAgrB,eAEAvwB,GAAA+yB,EAAA7C,EACAlwB,GAAA+yB,KAAA,GAAAxtB,EAAAknB,aAAA,EACAzsB,GAAA+yB,EAAAxtB,EAAAmnB,kBAAA,EACA1sB,GAAA6yB,EAAA/C,EACA9vB,GAAA6yB,KAAA,GAAAttB,EAAAsnB,YAAA,EACA7sB,GAAAgzB,EAAAztB,EAAA2nB,gBAAA,EACAltB,GAAAgzB,EAAA,EACAhzB,GAAAgzB,KAAA,GAAAztB,EAAA0nB,cAAA,EAGA,IAAAgG,EAAA,EACAC,EAAA,SAAA9jB,GACArP,EAAAxa,KAAAC,IAAAua,EAAAF,EAAAszB,YAAA/jB,GAAArP,MAAAkzB,IA4BA,OAzBApzB,EAAAoE,KAAAS,GAAA0uB,WAAAlD,EAAA3qB,EAAA0qB,gBAAA1qB,EAAAwqB,kBACArrB,GAAA/J,KAAA4K,EAAAkS,MAAAyb,GAGArzB,EAAAoE,KAAAS,GAAA0uB,WAAAtD,EAAAvqB,EAAAoqB,eAAApqB,EAAAkqB,iBACA/qB,GAAA/J,KAAA4K,EAAAwoB,WAAA/3B,OAAAuP,EAAA8oB,WAAA6E,GAGAD,EAAA1tB,EAAAmoB,cAAAoC,EAAA,IACAprB,GAAA/J,KAAA+3B,EAAA,SAAArB,GACA3sB,GAAA/J,KAAA02B,EAAAC,OAAA4B,GACAxuB,GAAA/J,KAAA02B,EAAAJ,MAAAiC,GACAxuB,GAAA/J,KAAA02B,EAAAE,MAAA2B,KAIAD,EAAA,EAGApzB,EAAAoE,KAAAS,GAAA0uB,WAAA7C,EAAAhrB,EAAA+qB,iBAAA/qB,EAAA6qB,mBACA1rB,GAAA/J,KAAA4K,EAAAgpB,OAAA2E,GAKA,CACAnzB,MAHAA,GAAA,EAAAwF,EAAA+nB,SAIAttB,UAiTAqzB,CAAA7gC,KAAA+S,GACAysB,EA3SA,SAAAY,EAAA5xB,GACA,IAYAsyB,EAAAC,EACAC,EAAAC,EACAC,EAdAnuB,EAAAqtB,EAAAztB,OACAvF,EAAAgzB,EAAAroB,OACA4G,EAAAyhB,EAAAroB,OAAA4G,UACAoe,EAAA,SACAC,EAAA,SAEAjqB,EAAAtf,EAAA+a,EAAAhB,OACAwvB,EAAA,MACEjqB,EAAAtf,EAAA2Z,EAAAI,OAAAgB,EAAAhB,SACFwvB,EAAA,UAMA,IAAAmE,GAAAxiB,EAAAhR,KAAAgR,EAAA9Q,OAAA,EACAuzB,GAAAziB,EAAA/Q,IAAA+Q,EAAA7Q,QAAA,EAEA,WAAAkvB,GACA8D,EAAA,SAAAttC,GACA,OAAAA,GAAA2tC,GAEAJ,EAAA,SAAAvtC,GACA,OAAAA,EAAA2tC,KAGAL,EAAA,SAAAttC,GACA,OAAAA,GAAAgb,EAAAjB,MAAA,GAEAwzB,EAAA,SAAAvtC,GACA,OAAAA,GAAA4Z,EAAAG,MAAAiB,EAAAjB,MAAA,IAIAyzB,EAAA,SAAAxtC,GACA,OAAAA,EAAAgb,EAAAjB,MAAAwF,EAAAioB,UAAAjoB,EAAAgoB,aAAA3tB,EAAAG,OAEA0zB,EAAA,SAAAztC,GACA,OAAAA,EAAAgb,EAAAjB,MAAAwF,EAAAioB,UAAAjoB,EAAAgoB,aAAA,GAEAmG,EAAA,SAAAztC,GACA,OAAAA,GAAA2tC,EAAA,gBAGAN,EAAA/tB,EAAAvf,IACAupC,EAAA,OAGAiE,EAAAjuB,EAAAvf,KACAupC,EAAA,SACAC,EAAAkE,EAAAnuB,EAAAtf,KAEEstC,EAAAhuB,EAAAvf,KACFupC,EAAA,QAGAkE,EAAAluB,EAAAvf,KACAupC,EAAA,SACAC,EAAAkE,EAAAnuB,EAAAtf,KAIA,IAAA0zB,EAAAiZ,EAAAza,SACA,OACAoX,OAAA5V,EAAA4V,OAAA5V,EAAA4V,SACAC,OAAA7V,EAAA6V,OAAA7V,EAAA6V,UAyOAqE,CAAArhC,KAAA0/B,GAEAD,EApOA,SAAA3kB,EAAAtM,EAAAgxB,EAAApyB,GAEA,IAAA5Z,EAAAsnB,EAAAtnB,EACAC,EAAAqnB,EAAArnB,EAEAunC,EAAAlgB,EAAAkgB,UACAD,EAAAjgB,EAAAigB,aACAtsB,EAAAqM,EAAArM,aACAsuB,EAAAyC,EAAAzC,OACAC,EAAAwC,EAAAxC,OACAsE,EAAAtG,EAAAD,EACAwG,EAAA9yB,EAAAssB,EAkCA,MAhCA,UAAAgC,EACAvpC,GAAAgb,EAAAjB,MACE,WAAAwvB,KACFvpC,GAAAgb,EAAAjB,MAAA,GACAiB,EAAAjB,MAAAH,EAAAG,QACA/Z,EAAA4Z,EAAAG,MAAAiB,EAAAjB,OAEA/Z,EAAA,IACAA,EAAA,IAIA,QAAAwpC,EACAvpC,GAAA6tC,EAEA7tC,GADE,WAAAupC,EACFxuB,EAAAhB,OAAA8zB,EAEA9yB,EAAAhB,OAAA,EAGA,WAAAwvB,EACA,SAAAD,EACAvpC,GAAA8tC,EACG,UAAAvE,IACHvpC,GAAA8tC,GAEE,SAAAvE,EACFvpC,GAAA+tC,EACE,UAAAxE,IACFvpC,GAAA+tC,GAGA,CACA/tC,IACAC,KAqLA+tC,CAAAzuB,EAAA2sB,EAAAF,EAAA31B,EAAAkO,aAEAhF,EAAAkrB,QAAA,EAoBA,OAjBAlrB,EAAAgqB,OAAAyC,EAAAzC,OACAhqB,EAAAiqB,OAAAwC,EAAAxC,OACAjqB,EAAAvf,EAAAisC,EAAAjsC,EACAuf,EAAAtf,EAAAgsC,EAAAhsC,EACAsf,EAAAxF,MAAAmyB,EAAAnyB,MACAwF,EAAAvF,OAAAkyB,EAAAlyB,OAGAuF,EAAA4sB,OAAApsB,EAAA/f,EACAuf,EAAA6sB,OAAArsB,EAAA9f,EAEAoW,EAAA8I,OAAAI,EAEAmsB,GAAA/X,EAAA7N,QACA6N,EAAA7N,OAAA/Z,KAAAsK,EAAAkJ,GAGAlJ,GAGA43B,UAAA,SAAAC,EAAAlzB,GACA,IAAAnB,EAAArN,KAAA+X,OAAA1K,IACAyN,EAAA9a,KAAA0S,MACAivB,EAAA3hC,KAAA4hC,iBAAAF,EAAAlzB,EAAAsM,GAEAzN,EAAAuB,OAAA+yB,EAAA5iB,GAAA4iB,EAAA1iB,IACA5R,EAAAuB,OAAA+yB,EAAA3iB,GAAA2iB,EAAA3sC,IACAqY,EAAAuB,OAAA+yB,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAAlzB,EAAAsM,GACA,IAAAiE,EAAAC,EAAA6iB,EAAA5iB,EAAAjqB,EAAA8sC,EACA9G,EAAAlgB,EAAAkgB,UACAvsB,EAAAqM,EAAArM,aACAsuB,EAAAjiB,EAAAiiB,OACAC,EAAAliB,EAAAkiB,OACA+E,EAAAL,EAAAluC,EACAwuC,EAAAN,EAAAjuC,EACA8Z,EAAAiB,EAAAjB,MACAC,EAAAgB,EAAAhB,OAEA,cAAAwvB,EACAhoC,EAAAgtC,EAAAx0B,EAAA,EAEA,SAAAuvB,GAEA/d,GADAD,EAAAgjB,GACA/G,EACA6G,EAAA9iB,EAEAE,EAAAjqB,EAAAgmC,EACA8G,EAAA9sC,EAAAgmC,IAGAhc,GADAD,EAAAgjB,EAAAx0B,GACAytB,EACA6G,EAAA9iB,EAEAE,EAAAjqB,EAAAgmC,EACA8G,EAAA9sC,EAAAgmC,QAgBA,GAbA,SAAA+B,GAEAhe,GADAC,EAAA+iB,EAAAtzB,EAAA,GACAusB,EACA6G,EAAA7iB,EAAAgc,GACI,UAAA+B,GAEJhe,GADAC,EAAA+iB,EAAAx0B,EAAAkB,EAAAusB,GACAA,EACA6G,EAAA7iB,EAAAgc,IAEAhc,EAAAlE,EAAA6kB,OACA5gB,EAAAC,EAAAgc,EACA6G,EAAA7iB,EAAAgc,GAEA,QAAAgC,EAEAhoC,GADAiqB,EAAA+iB,GACAhH,EACA8G,EAAA7iB,MACI,CAEJjqB,GADAiqB,EAAA+iB,EAAAx0B,GACAwtB,EACA8G,EAAA7iB,EAEA,IAAAgjB,EAAAJ,EACAA,EAAA9iB,EACAA,EAAAkjB,EAGA,OAAUljB,KAAAC,KAAA6iB,KAAA5iB,KAAAjqB,KAAA8sC,OAGVI,UAAA,SAAA5X,EAAAxP,EAAAzN,GACA,IAAA4X,EAAAnK,EAAAmK,MAEA,GAAAA,EAAAnlB,OAAA,CACAwqB,EAAA92B,EAAA2qC,GAAArjB,IAAA6iB,aAEAtwB,EAAA80B,UAAArnB,EAAA6iB,YACAtwB,EAAA+0B,aAAA,MAEA,IAMApuC,EAAAsU,EANAo1B,EAAA5iB,EAAA4iB,cACAzD,EAAAnf,EAAAmf,aAMA,IAJA5sB,EAAAkP,UAAAzB,EAAAqf,eACA9sB,EAAAoE,KAAAS,GAAA0uB,WAAAlD,EAAA5iB,EAAA2iB,gBAAA3iB,EAAAyiB,kBAGAvpC,EAAA,EAAAsU,EAAA2c,EAAAnlB,OAAkC9L,EAAAsU,IAAStU,EAC3CqZ,EAAAg1B,SAAApd,EAAAjxB,GAAAs2B,EAAA92B,EAAA82B,EAAA72B,GACA62B,EAAA72B,GAAAiqC,EAAAzD,EAEAjmC,EAAA,IAAAixB,EAAAnlB,SACAwqB,EAAA72B,GAAAqnB,EAAAof,kBAAAD,KAMAqI,SAAA,SAAAhY,EAAAxP,EAAAzN,GACA,IAQAk1B,EARAjF,EAAAxiB,EAAAwiB,aACAjD,EAAAvf,EAAAuf,YACAE,EAAAzf,EAAAuiB,WACA6C,EAAAplB,EAAAolB,KACAsC,EAAA1nB,EAAAogB,cACA2E,EAAA/kB,EAAA+kB,YACA4C,EAAA,EACAC,EAAAF,EAAArE,GAAArjB,EAAA,UAGAzN,EAAA80B,UAAA5H,EACAltB,EAAA+0B,aAAA,MACA/0B,EAAAoE,KAAAS,GAAA0uB,WAAAtD,EAAAxiB,EAAAqiB,eAAAriB,EAAAmiB,iBAEA3S,EAAA92B,EAAA2qC,GAAArjB,EAAAyf,GAGA,IAAAoI,EAAA,SAAA/lB,GACAvP,EAAAg1B,SAAAzlB,EAAA0N,EAAA92B,EAAAivC,EAAAnY,EAAA72B,GACA62B,EAAA72B,GAAA6pC,EAAAjD,GAIAhtB,EAAAkP,UAAAzB,EAAAwf,cACApoB,GAAA/J,KAAA2S,EAAAygB,WAAAoH,GAEAF,EAAAD,GAAA,UAAAjI,EACA,WAAAA,EAAA+C,EAAA,IAAAA,EAAA,EACA,EAGAprB,GAAA/J,KAAA+3B,EAAA,SAAArB,EAAA7qC,GACAuuC,EAAAznB,EAAAglB,gBAAA9rC,GACAqZ,EAAAkP,UAAAgmB,EACArwB,GAAA/J,KAAA02B,EAAAC,OAAA6D,GAEAzwB,GAAA/J,KAAA02B,EAAAJ,MAAA,SAAA7hB,GAEA4lB,IAEAn1B,EAAAkP,UAAAzB,EAAAojB,sBACA7wB,EAAAkT,SAAAmiB,EAAApY,EAAA72B,EAAA6pC,KAGAjwB,EAAAmP,UAAA,EACAnP,EAAAqP,YAAAmjB,EAAA7rC,GAAAylB,YACApM,EAAAu1B,WAAAF,EAAApY,EAAA72B,EAAA6pC,KAGAjwB,EAAAkP,UAAAsjB,EAAA7rC,GAAAwlB,gBACAnM,EAAAkT,SAAAmiB,EAAA,EAAApY,EAAA72B,EAAA,EAAA6pC,EAAA,EAAAA,EAAA,GACAjwB,EAAAkP,UAAAgmB,GAGAI,EAAA/lB,KAGA1K,GAAA/J,KAAA02B,EAAAE,MAAA4D,KAIAF,EAAA,EAGAvwB,GAAA/J,KAAA2S,EAAA+gB,UAAA8G,GACArY,EAAA72B,GAAA4mC,GAGAwI,WAAA,SAAAvY,EAAAxP,EAAAzN,GACA,IAAA0uB,EAAAjhB,EAAAihB,OAEAA,EAAAj8B,SACAwqB,EAAA92B,EAAA2qC,GAAArjB,IAAAkjB,cACA1T,EAAA72B,GAAAqnB,EAAA4f,gBAEArtB,EAAA80B,UAAArnB,EAAAkjB,aACA3wB,EAAA+0B,aAAA,MAEA/0B,EAAAkP,UAAAzB,EAAA6f,gBACAttB,EAAAoE,KAAAS,GAAA0uB,WAAA9lB,EAAAijB,eAAAjjB,EAAAgjB,iBAAAhjB,EAAA8iB,mBAEA1rB,GAAA/J,KAAA4zB,EAAA,SAAAnf,GACAvP,EAAAg1B,SAAAzlB,EAAA0N,EAAA92B,EAAA82B,EAAA72B,GACA62B,EAAA72B,GAAAqnB,EAAAijB,eAAAjjB,EAAA2f,kBAKAqI,eAAA,SAAAxY,EAAAxP,EAAAzN,EAAAqyB,GACAryB,EAAAkP,UAAAzB,EAAAtB,gBACAnM,EAAAqP,YAAA5B,EAAArB,YACApM,EAAAmP,UAAA1B,EAAApB,YACA,IAAAqjB,EAAAjiB,EAAAiiB,OACAC,EAAAliB,EAAAkiB,OACAxpC,EAAA82B,EAAA92B,EACAC,EAAA62B,EAAA72B,EACA8Z,EAAAmyB,EAAAnyB,MACAC,EAAAkyB,EAAAlyB,OACAE,EAAAoN,EAAArM,aAEApB,EAAAsB,YACAtB,EAAAU,OAAAva,EAAAka,EAAAja,GACA,QAAAupC,GACAh9B,KAAAyhC,UAAAnX,EAAAoV,GAEAryB,EAAAuB,OAAApb,EAAA+Z,EAAAG,EAAAja,GACA4Z,EAAA01B,iBAAAvvC,EAAA+Z,EAAA9Z,EAAAD,EAAA+Z,EAAA9Z,EAAAia,GACA,WAAAsvB,GAAA,UAAAD,GACA/8B,KAAAyhC,UAAAnX,EAAAoV,GAEAryB,EAAAuB,OAAApb,EAAA+Z,EAAA9Z,EAAA+Z,EAAAE,GACAL,EAAA01B,iBAAAvvC,EAAA+Z,EAAA9Z,EAAA+Z,EAAAha,EAAA+Z,EAAAG,EAAAja,EAAA+Z,GACA,WAAAwvB,GACAh9B,KAAAyhC,UAAAnX,EAAAoV,GAEAryB,EAAAuB,OAAApb,EAAAka,EAAAja,EAAA+Z,GACAH,EAAA01B,iBAAAvvC,EAAAC,EAAA+Z,EAAAha,EAAAC,EAAA+Z,EAAAE,GACA,WAAAsvB,GAAA,SAAAD,GACA/8B,KAAAyhC,UAAAnX,EAAAoV,GAEAryB,EAAAuB,OAAApb,EAAAC,EAAAia,GACAL,EAAA01B,iBAAAvvC,EAAAC,EAAAD,EAAAka,EAAAja,GACA4Z,EAAAY,YAEAZ,EAAAyB,OAEAgM,EAAApB,YAAA,GACArM,EAAA0B,UAIAmK,KAAA,WACA,IAAA7L,EAAArN,KAAA+X,OAAA1K,IACAyN,EAAA9a,KAAA0S,MAEA,OAAAoI,EAAAmjB,QAAA,CAIA,IAAAyB,EAAA,CACAnyB,MAAAuN,EAAAvN,MACAC,OAAAsN,EAAAtN,QAEA8c,EAAA,CACA92B,EAAAsnB,EAAAtnB,EACAC,EAAAqnB,EAAArnB,GAIAwqC,EAAAlrC,KAAAorB,IAAArD,EAAAmjB,QAAA,QAAAnjB,EAAAmjB,QAGA+E,EAAAloB,EAAAmK,MAAAnlB,QAAAgb,EAAAygB,WAAAz7B,QAAAgb,EAAAolB,KAAApgC,QAAAgb,EAAA+gB,UAAA/7B,QAAAgb,EAAAihB,OAAAj8B,OAEAE,KAAA2lB,SAAAoU,SAAAiJ,IACA31B,EAAAgC,OACAhC,EAAA41B,YAAAhF,EAGAj+B,KAAA8iC,eAAAxY,EAAAxP,EAAAzN,EAAAqyB,GAGApV,EAAA72B,GAAAqnB,EAAA+f,SAGA76B,KAAAkiC,UAAA5X,EAAAxP,EAAAzN,GAGArN,KAAAsiC,SAAAhY,EAAAxP,EAAAzN,GAGArN,KAAA6iC,WAAAvY,EAAAxP,EAAAzN,GAEAA,EAAAmC,aAUA0zB,YAAA,SAAAzc,GACA,IAAA5c,EAAA7J,KACAiJ,EAAAY,EAAA8b,SACAuZ,GAAA,EA6BA,OA3BAr1B,EAAA00B,YAAA10B,EAAA00B,aAAA,GAGA,aAAA9X,EAAAzgB,KACA6D,EAAA01B,QAAA,GAEA11B,EAAA01B,QAAA11B,EAAAkO,OAAAorB,0BAAA1c,EAAAxd,EAAA6X,KAAA7X,IAIAi2B,GAAAhtB,GAAA1J,YAAAqB,EAAA01B,QAAA11B,EAAA00B,gBAIA10B,EAAA00B,YAAA10B,EAAA01B,SAEAt2B,EAAA8wB,SAAA9wB,EAAAqQ,UACAzP,EAAAk2B,eAAA,CACAvsC,EAAAizB,EAAAjzB,EACAC,EAAAgzB,EAAAhzB,GAGAoW,EAAA8N,QAAA,GACA9N,EAAA4I,UAIAysB,KAOAkE,GAAAnH,GAEAoH,GAAA/E,GACA+E,GAAApH,YAAAmH,GAEA,IAAAE,GAAApxB,GAAAtK,eA4BA,SAAA27B,KACA,OAAArxB,GAAA9I,MAAA,GAA0B,GAAA9J,MAAAC,KAAAC,WAAA,CAC1BgK,OAAA,SAAAzK,EAAAoH,EAAAD,EAAA+C,GACA,aAAAlK,GAAA,UAAAA,EAAA,CACA,IACA/K,EAAAgS,EAAA3D,EADAmhC,EAAAt9B,EAAAnH,GAAAe,OAOA,IAJAqG,EAAApH,KACAoH,EAAApH,GAAA,IAGA/K,EAAA,EAAeA,EAAAwvC,IAAUxvC,EACzBqO,EAAA6D,EAAAnH,GAAA/K,GACAgS,EAAAs9B,GAAAjhC,EAAA2D,KAAA,UAAAjH,EAAA,qBAEA/K,GAAAmS,EAAApH,GAAAe,QACAqG,EAAApH,GAAAmW,KAAA,KAGA/O,EAAApH,GAAA/K,GAAAgS,MAAA3D,EAAA2D,MAAA3D,EAAA2D,OAAAG,EAAApH,GAAA/K,GAAAgS,KAGAkM,GAAA9I,MAAAjD,EAAApH,GAAA/K,GAAA,CAAAolC,GAAAM,iBAAA1zB,GAAA3D,IAGA6P,GAAA9I,MAAAjD,EAAApH,GAAA/K,GAAAqO,QAIA6P,GAAAlJ,QAAAjK,EAAAoH,EAAAD,EAAA+C,MAWA,SAAAw6B,KACA,OAAAvxB,GAAA9I,MAAA,GAA0B,GAAA9J,MAAAC,KAAAC,WAAA,CAC1BgK,OAAA,SAAAzK,EAAAoH,EAAAD,EAAA+C,GACA,IAAAC,EAAA/C,EAAApH,IAAA,GACAoK,EAAAjD,EAAAnH,GAEA,WAAAA,EAEAoH,EAAApH,GAAAwkC,GAAAr6B,EAAAC,GACI,UAAApK,EAEJoH,EAAApH,GAAAmT,GAAA9I,MAAAF,EAAA,CAAAkwB,GAAAM,iBAAAvwB,EAAAnD,MAAAmD,IAEA+I,GAAAlJ,QAAAjK,EAAAoH,EAAAD,EAAA+C,MA4CA,SAAAy6B,GAAA5e,GACA,cAAAA,GAAA,WAAAA,EA5HA9T,GAAAT,KAAA,UACA0I,SAAA,GACA0qB,OAAA,CACA,YACA,WACA,QACA,aACA,aAEA9iB,MAAA,CACA+iB,QAAA,KACA9iB,KAAA,UACAwM,WAAA,EACAuW,kBAAA,KAEArd,QAAA,KACAyO,qBAAA,EACA6O,YAAA,EACAC,4BAAA,IA6GA,IAAAC,GAAA,SAAA15B,EAAAysB,GAEA,OADA/2B,KAAAikC,UAAA35B,EAAAysB,GACA/2B,MAGAkS,GAAAzI,OAAAu6B,GAAA3kC,UAAA,CAIA4kC,UAAA,SAAA35B,EAAAysB,GACA,IAAAltB,EAAA7J,KAEA+2B,EAtDA,SAAAA,GAKA,IAAA9f,GAJA8f,KAAA,IAIA9f,KAAA8f,EAAA9f,MAAA,GASA,OARAA,EAAAC,SAAAD,EAAAC,UAAA,GACAD,EAAA6K,OAAA7K,EAAA6K,QAAA,GAEAiV,EAAA9tB,QAAAw6B,GACAzyB,GAAAO,OACAP,GAAA+lB,EAAA/wB,MACA+wB,EAAA9tB,SAAA,IAEA8tB,EAwCAmN,CAAAnN,GAEA,IAAA9kB,EAAAskB,GAAAO,eAAAxsB,EAAAysB,GACA3kB,EAAAH,KAAAG,OACA5E,EAAA4E,KAAA5E,OACAD,EAAA6E,KAAA7E,MAEA1D,EAAA7C,GAAAkL,GAAA9K,MACAyC,EAAAwD,IAAA4E,EACApI,EAAAuI,SACAvI,EAAAktB,SACAltB,EAAA0D,QACA1D,EAAA2D,SACA3D,EAAA0tB,YAAA/pB,EAAAD,EAAAC,EAAA,KACA3D,EAAAZ,QAAA8tB,EAAA9tB,QACAY,EAAAs6B,iBAAA,EAUAt6B,EAAAuD,MAAAvD,EACAA,EAAAma,WAAAna,EAGAm6B,GAAAI,UAAAv6B,EAAA7C,IAAA6C,EAGAtC,OAAA2M,eAAArK,EAAA,QACAsK,IAAA,WACA,OAAAtK,EAAAktB,OAAA9f,MAEA7C,IAAA,SAAApR,GACA6G,EAAAktB,OAAA9f,KAAAjU,KAIAiP,GAAAG,GASAvI,EAAA0I,aACA1I,EAAA8N,UALAtR,QAAAC,MAAA,sEAWAiM,WAAA,WACA,IAAA1I,EAAA7J,KAsBA,OAnBAo4B,GAAAQ,OAAA/uB,EAAA,cAEAqI,GAAAmyB,YAAAx6B,IAAAZ,QAAAq7B,kBAEAz6B,EAAA06B,aAEA16B,EAAAZ,QAAA66B,YAEAj6B,EAAA26B,QAAA,GAIA36B,EAAA46B,sBACA56B,EAAA66B,sBACA76B,EAAA86B,cAGAvM,GAAAQ,OAAA/uB,EAAA,aAEAA,GAGAsD,MAAA,WAEA,OADA+E,GAAAE,OAAAjF,MAAAnN,MACAA,MAGA4kC,KAAA,WAGA,OADAnwB,GAAAW,gBAAApV,MACAA,MAGAwkC,OAAA,SAAAK,GACA,IAAAh7B,EAAA7J,KACAiJ,EAAAY,EAAAZ,QACAmJ,EAAAvI,EAAAuI,OACAmlB,EAAAtuB,EAAAgsB,qBAAAprB,EAAA0tB,aAAA,KAMAuN,EAAA/xC,KAAAC,IAAA,EAAAD,KAAAmB,MAAAge,GAAA6yB,gBAAA3yB,KACA4yB,EAAAjyC,KAAAC,IAAA,EAAAD,KAAAmB,MAAAqjC,EAAAuN,EAAAvN,EAAArlB,GAAA+yB,iBAAA7yB,KAEA,IAAAvI,EAAA0D,QAAAu3B,GAAAj7B,EAAA2D,SAAAw3B,KAIA5yB,EAAA7E,MAAA1D,EAAA0D,MAAAu3B,EACA1yB,EAAA5E,OAAA3D,EAAA2D,OAAAw3B,EACA5yB,EAAAhE,MAAAb,MAAAu3B,EAAA,KACA1yB,EAAAhE,MAAAZ,OAAAw3B,EAAA,KAEA9yB,GAAAmyB,YAAAx6B,EAAAZ,EAAAq7B,mBAEAO,GAAA,CAEA,IAAAK,EAAA,CAAkB33B,MAAAu3B,EAAAt3B,OAAAw3B,GAClB5M,GAAAQ,OAAA/uB,EAAA,UAAAq7B,IAGAj8B,EAAAk8B,UACAl8B,EAAAk8B,SAAAt7B,EAAAq7B,GAGAr7B,EAAA+6B,OACA/6B,EAAA8N,OAAA,CACArD,SAAArL,EAAA86B,gCAKAU,oBAAA,WACA,IAAAx7B,EAAAjJ,KAAAiJ,QACAm8B,EAAAn8B,EAAA4N,QAAA,GACAwuB,EAAAp8B,EAAA5G,MAEA6P,GAAA/J,KAAAi9B,EAAAtuB,MAAA,SAAAwuB,EAAAz+B,GACAy+B,EAAAt+B,GAAAs+B,EAAAt+B,IAAA,UAAAH,IAGAqL,GAAA/J,KAAAi9B,EAAApuB,MAAA,SAAAuuB,EAAA1+B,GACA0+B,EAAAv+B,GAAAu+B,EAAAv+B,IAAA,UAAAH,IAGAw+B,IACAA,EAAAr+B,GAAAq+B,EAAAr+B,IAAA,UAOA09B,oBAAA,WACA,IAAA76B,EAAA7J,KACAiJ,EAAAY,EAAAZ,QACA4N,EAAAhN,EAAAgN,QAAA,GACAsX,EAAA,GACAqX,EAAAj+B,OAAAgB,KAAAsO,GAAAypB,OAAA,SAAAz9B,EAAAmE,GAEA,OADAnE,EAAAmE,IAAA,EACAnE,GACG,IAEHoG,EAAA4N,SACAsX,IAAA3qB,QACAyF,EAAA4N,OAAAC,OAAA,IAAAhO,IAAA,SAAAw8B,GACA,OAAar8B,QAAAq8B,EAAAG,MAAA,WAAAC,UAAA,aAEbz8B,EAAA4N,OAAAG,OAAA,IAAAlO,IAAA,SAAAy8B,GACA,OAAat8B,QAAAs8B,EAAAE,MAAA,SAAAC,UAAA,YAKbz8B,EAAA5G,OACA8rB,EAAAjZ,KAAA,CACAjM,UAAA5G,MACAojC,MAAA,eACAE,WAAA,EACAD,UAAA,cAIAxzB,GAAA/J,KAAAgmB,EAAA,SAAA7jB,GACA,IAAA+6B,EAAA/6B,EAAArB,QACAjC,EAAAq+B,EAAAr+B,GACA4+B,EAAAtC,GAAA+B,EAAAr/B,KAAAsE,EAAAm7B,OAEA/B,GAAA2B,EAAAvgB,YAAA4e,GAAAp5B,EAAAo7B,aACAL,EAAAvgB,SAAAxa,EAAAo7B,WAGAF,EAAAx+B,IAAA,EACA,IAAA3E,EAAA,KACA,GAAA2E,KAAA6P,KAAA7P,GAAAhB,OAAA4/B,GACAvjC,EAAAwU,EAAA7P,IACAiC,QAAAo8B,EACAhjC,EAAAgL,IAAAxD,EAAAwD,IACAhL,EAAA+K,MAAAvD,MACI,CACJ,IAAAg8B,EAAAzM,GAAAK,oBAAAmM,GACA,IAAAC,EACA,OAEAxjC,EAAA,IAAAwjC,EAAA,CACA7+B,KACAhB,KAAA4/B,EACA38B,QAAAo8B,EACAh4B,IAAAxD,EAAAwD,IACAD,MAAAvD,IAEAgN,EAAAxU,EAAA2E,IAAA3E,EAGAA,EAAAyjC,oBAKAx7B,EAAAq7B,YACA97B,EAAAxH,WAIA6P,GAAA/J,KAAAq9B,EAAA,SAAAO,EAAA/+B,GACA++B,UACAlvB,EAAA7P,KAIA6C,EAAAgN,SAEAuiB,GAAAS,kBAAA75B,OAGAgmC,yBAAA,WACA,IAAAn8B,EAAA7J,KACAimC,EAAA,GA0BA,OAxBA/zB,GAAA/J,KAAA0B,EAAAoN,KAAAC,SAAA,SAAAR,EAAAR,GACA,IAAAM,EAAA3M,EAAAsN,eAAAjB,GACAlQ,EAAA0Q,EAAA1Q,MAAA6D,EAAAktB,OAAA/wB,KAQA,GANAwQ,EAAAxQ,MAAAwQ,EAAAxQ,WACA6D,EAAAq8B,mBAAAhwB,GACAM,EAAA3M,EAAAsN,eAAAjB,IAEAM,EAAAxQ,OAEAwQ,EAAAwN,WACAxN,EAAAwN,WAAAzN,YAAAL,GACAM,EAAAwN,WAAA3N,iBACI,CACJ,IAAA8vB,EAAA3Z,GAAAhW,EAAAxQ,MACA,QAAAnG,IAAAsmC,EACA,UAAAC,MAAA,IAAA5vB,EAAAxQ,KAAA,0BAGAwQ,EAAAwN,WAAA,IAAAmiB,EAAAt8B,EAAAqM,GACA+vB,EAAA/wB,KAAAsB,EAAAwN,cAEGna,GAEHo8B,GAOAI,cAAA,WACA,IAAAx8B,EAAA7J,KACAkS,GAAA/J,KAAA0B,EAAAoN,KAAAC,SAAA,SAAAR,EAAAR,GACArM,EAAAsN,eAAAjB,GAAA8N,WAAAtM,SACG7N,IAMH6N,MAAA,WACA1X,KAAAqmC,gBACArmC,KAAAogC,QAAA7tB,cAGAoF,OAAA,SAAAof,GACA,IAtUA3pB,EACAk5B,EAqUAz8B,EAAA7J,KAgBA,GAdA+2B,GAAA,iBAAAA,IAEAA,EAAA,CACAziB,SAAAyiB,EACAliB,KAAArV,UAAA,KA3UA8mC,GADAl5B,EAgVAvD,GA/UAZ,QAEAiJ,GAAA/J,KAAAiF,EAAAyJ,OAAA,SAAAxU,GACA8sB,GAAAG,UAAAliB,EAAA/K,KAGAikC,EAAA7C,GACAzyB,GAAAO,OACAP,GAAA5D,EAAA2pB,OAAA/wB,MACAsgC,GAEAl5B,EAAAnE,QAAAmE,EAAA2pB,OAAA9tB,QAAAq9B,EACAl5B,EAAAq3B,sBACAr3B,EAAAs3B,sBAGAt3B,EAAAgzB,QAAAza,SAAA2gB,EAAAvhB,SACA3X,EAAAgzB,QAAA7tB,aAkUA6lB,GAAAe,YAAAtvB,IAEA,IAAAuuB,GAAAQ,OAAA/uB,EAAA,iBAKAA,EAAAu2B,QAAAvoB,MAAAhO,EAAAoN,KAGA,IAAAgvB,EAAAp8B,EAAAm8B,2BAGA9zB,GAAA/J,KAAA0B,EAAAoN,KAAAC,SAAA,SAAAR,EAAAR,GACArM,EAAAsN,eAAAjB,GAAA8N,WAAAzL,yBACG1O,GAEHA,EAAA08B,eAGA18B,EAAAZ,QAAAoL,WAAAxK,EAAAZ,QAAAoL,UAAAC,UACApC,GAAA/J,KAAA89B,EAAA,SAAAjiB,GACAA,EAAAtM,UAIA7N,EAAA28B,iBAIA38B,EAAAu2B,QAAA7tB,aAIA1I,EAAA48B,WAAA,GAGArO,GAAAQ,OAAA/uB,EAAA,eAEAA,EAAAs6B,gBACAt6B,EAAA68B,iBAAA,CACApyB,SAAAyiB,EAAAziB,SACAnC,OAAA4kB,EAAA5kB,OACA0C,KAAAkiB,EAAAliB,MAGAhL,EAAAiK,OAAAijB,KASAwP,aAAA,YAGA,IAAAnO,GAAAQ,OAFA54B,KAEA,kBAIAmvB,GAAAxX,OAAA3X,UAAAuN,MAAAvN,KAAAwN,QASA4qB,GAAAQ,OAfA54B,KAeA,oBACAo4B,GAAAQ,OAhBA54B,KAgBA,iBAQAwmC,eAAA,WAGA,QAAApO,GAAAQ,OAFA54B,KAEA,yBAIA,QAAAhM,EAAA,EAAA2U,EANA3I,KAMAiX,KAAAC,SAAApX,OAAiD9L,EAAA2U,IAAU3U,EAN3DgM,KAOA2mC,cAAA3yC,GAGAokC,GAAAQ,OAVA54B,KAUA,yBAQA2mC,cAAA,SAAA9/B,GACA,IACA2P,EADAxW,KACAmX,eAAAtQ,GACA/W,EAAA,CACA0mB,OACA3P,UAGA,IAAAuxB,GAAAQ,OAPA54B,KAOA,uBAAAlQ,MAIA0mB,EAAAwN,WAAArM,SAEAygB,GAAAQ,OAbA54B,KAaA,sBAAAlQ,MAGAgkB,OAAA,SAAAijB,GACA,IAAAltB,EAAA7J,KAEA+2B,GAAA,iBAAAA,IAEAA,EAAA,CACAziB,SAAAyiB,EACAliB,KAAArV,UAAA,KAIA,IAAAonC,EAAA/8B,EAAAZ,QAAAoL,UACAC,EAAAgvB,GAAAvM,EAAAziB,SAAAsyB,KAAAtyB,UACAO,EAAAkiB,EAAAliB,KAEA,QAAAujB,GAAAQ,OAAA/uB,EAAA,iBAIA,IAAA2K,EAAA,SAAAH,GACA+jB,GAAAQ,OAAA/uB,EAAA,eACAqI,GAAAnK,SAAA6+B,KAAApyB,WAAA,CAAAH,GAAAxK,IAGA,GAAA+8B,GAAAtyB,EAAA,CACA,IAAAD,EAAA,IAAAJ,GAAA,CACAJ,SAAAS,EAAA,MACAnC,OAAA4kB,EAAA5kB,QAAAy0B,EAAAz0B,OAEA2B,OAAA,SAAA1G,EAAAy5B,GACA,IAAAC,EAAA50B,GAAAC,OAAAzH,QAAAm8B,EAAA10B,QACAyB,EAAAizB,EAAAjzB,YACAmzB,EAAAnzB,EAAAizB,EAAAhzB,SAEAzG,EAAA8L,KAAA4tB,EAAAC,KAAAnzB,IAGAG,oBAAA6yB,EAAAryB,WACAP,oBAAAQ,IAGAC,GAAAG,aAAA/K,EAAAwK,EAAAC,EAAAO,QAEAhL,EAAAqP,OAGA1E,EAAA,IAAAP,GAAA,CAAkCJ,SAAA,EAAAzG,MAAAvD,KAGlC,OAAAA,IAGAqP,KAAA,SAAAF,GACA,IAAAnP,EAAA7J,KAEA6J,EAAAsD,QAEA+E,GAAA7K,cAAA2R,KACAA,EAAA,GAGAnP,EAAAgJ,WAAAmG,GAEAnP,EAAA0D,OAAA,GAAA1D,EAAA2D,QAAA,IAIA,IAAA4qB,GAAAQ,OAAA/uB,EAAA,cAAAmP,MAKA9G,GAAA/J,KAAA0B,EAAAmlB,MAAA,SAAAC,GACAA,EAAA/V,KAAArP,EAAA8U,YACG9U,GAEHA,EAAAm9B,aAAAhuB,GACAnP,EAAAo9B,aAAAjuB,GAEAof,GAAAQ,OAAA/uB,EAAA,aAAAmP,MAMAnG,WAAA,SAAAmG,GAGA,IAFA,IAEAhlB,EAAA,EAAA2U,GAFA3I,KAEAiX,KAAAC,UAAA,IAAApX,OAAyD9L,EAAA2U,IAAU3U,EAFnEgM,KAGA8iB,iBAAA9uB,IAHAgM,KAIAmX,eAAAnjB,GAAAgwB,WAAAnR,WAAAmG,GAJAhZ,KAQAogC,QAAAvtB,WAAAmG,IAQAguB,aAAA,SAAAhuB,GACA,IAAAnP,EAAA7J,KAEA,QAAAo4B,GAAAQ,OAAA/uB,EAAA,sBAAAmP,IAAA,CAKA,QAAAhlB,GAAA6V,EAAAoN,KAAAC,UAAA,IAAApX,OAAA,EAAmD9L,GAAA,IAAQA,EAC3D6V,EAAAiZ,iBAAA9uB,IACA6V,EAAAq9B,YAAAlzC,EAAAglB,GAIAof,GAAAQ,OAAA/uB,EAAA,qBAAAmP,MAQAkuB,YAAA,SAAArgC,EAAAmS,GACA,IACAxC,EADAxW,KACAmX,eAAAtQ,GACA/W,EAAA,CACA0mB,OACA3P,QACAmS,gBAGA,IAAAof,GAAAQ,OARA54B,KAQA,qBAAAlQ,MAIA0mB,EAAAwN,WAAA9K,KAAAF,GAEAof,GAAAQ,OAdA54B,KAcA,oBAAAlQ,MAQAm3C,aAAA,SAAAjuB,GACA,IACAonB,EADApgC,KACAogC,QACAtwC,EAAA,CACAswC,UACApnB,gBAGA,IAAAof,GAAAQ,OAPA54B,KAOA,qBAAAlQ,MAIAswC,EAAAlnB,OAEAkf,GAAAQ,OAbA54B,KAaA,oBAAAlQ,MAOAq3C,kBAAA,SAAA1gB,GACA,OAAA2H,GAAAC,MAAAC,OAAAtuB,KAAAymB,IAGA2gB,mBAAA,SAAA3gB,GACA,OAAA2H,GAAAC,MAAAxM,MAAA7hB,KAAAymB,EAAA,CAAgD6G,WAAA,KAGhD+Z,mBAAA,SAAA5gB,GACA,OAAA2H,GAAAC,MAAA,UAAAruB,KAAAymB,EAAA,CAAoD6G,WAAA,KAGpD6V,0BAAA,SAAA1c,EAAA3F,EAAA7X,GACA,IAAA0P,EAAAyV,GAAAC,MAAAvN,GACA,yBAAAnI,EACAA,EAAA3Y,KAAAymB,EAAAxd,GAGA,IAGAq+B,kBAAA,SAAA7gB,GACA,OAAA2H,GAAAC,MAAA3X,QAAA1W,KAAAymB,EAAA,CAAkD6G,WAAA,KAGlDnW,eAAA,SAAAjB,GACA,IACAQ,EADA1W,KACAiX,KAAAC,SAAAhB,GACAQ,EAAA6wB,QACA7wB,EAAA6wB,MAAA,IAGA,IAAA/wB,EAAAE,EAAA6wB,MANAvnC,KAMAgH,IAaA,OAZAwP,IACAA,EAAAE,EAAA6wB,MARAvnC,KAQAgH,IAAA,CACAhB,KAAA,KACAiR,KAAA,GACAP,QAAA,KACAsN,WAAA,KACAxR,OAAA,KACAoE,QAAA,KACAG,QAAA,OAIAP,GAGAmV,uBAAA,WAEA,IADA,IAAA1R,EAAA,EACAjmB,EAAA,EAAA2U,EAAA3I,KAAAiX,KAAAC,SAAApX,OAAmD9L,EAAA2U,IAAU3U,EAC7DgM,KAAA8iB,iBAAA9uB,IACAimB,IAGA,OAAAA,GAGA6I,iBAAA,SAAA5M,GACA,IAAAM,EAAAxW,KAAAmX,eAAAjB,GAIA,wBAAAM,EAAAhE,QAAAgE,EAAAhE,QAAAxS,KAAAiX,KAAAC,SAAAhB,GAAA1D,QAGAg1B,eAAA,WACA,OAAAxnC,KAAAiJ,QAAA+c,eAAAhmB,OAMAkmC,mBAAA,SAAAhwB,GACA,IAAAlP,EAAAhH,KAAAgH,GACA0P,EAAA1W,KAAAiX,KAAAC,SAAAhB,GACAM,EAAAE,EAAA6wB,OAAA7wB,EAAA6wB,MAAAvgC,GAEAwP,IACAA,EAAAwN,WAAApM,iBACAlB,EAAA6wB,MAAAvgC,KAIA4Q,QAAA,WACA,IAEA5jB,EAAA2U,EAFAkB,EAAA7J,KACAoS,EAAAvI,EAAAuI,OAMA,IAHAvI,EAAA+6B,OAGA5wC,EAAA,EAAA2U,EAAAkB,EAAAoN,KAAAC,SAAApX,OAA6C9L,EAAA2U,IAAU3U,EACvD6V,EAAAq8B,mBAAAlyC,GAGAoe,IACAvI,EAAA49B,eACAv1B,GAAAE,OAAAjF,MAAAtD,GACA0sB,GAAAmB,eAAA7tB,EAAAwD,KACAxD,EAAAuI,OAAA,KACAvI,EAAAwD,IAAA,MAGA+qB,GAAAQ,OAAA/uB,EAAA,kBAEAm6B,GAAAI,UAAAv6B,EAAA7C,KAGA0gC,cAAA,WACA,OAAA1nC,KAAAoS,OAAAu1B,UAAAz/B,MAAAlI,KAAAoS,OAAA5S,YAGAmlC,YAAA,WACA,IAAA96B,EAAA7J,KACA6J,EAAAu2B,QAAA,IAAAiD,GAAA,CACAtrB,OAAAlO,EACA+9B,eAAA/9B,EACAgO,MAAAhO,EAAAoN,KACA0O,SAAA9b,EAAAZ,QAAA8b,UACGlb,IAMH06B,WAAA,WACA,IAAA16B,EAAA7J,KACAgW,EAAAnM,EAAAg+B,WAAA,GACAhyB,EAAA,WACAhM,EAAAi+B,aAAA5/B,MAAA2B,EAAArK,YAGA0S,GAAA/J,KAAA0B,EAAAZ,QAAA06B,OAAA,SAAA39B,GACAuwB,GAAAlD,iBAAAxpB,EAAA7D,EAAA6P,GACAG,EAAAhQ,GAAA6P,IAKAhM,EAAAZ,QAAA66B,aACAjuB,EAAA,WACAhM,EAAA26B,UAGAjO,GAAAlD,iBAAAxpB,EAAA,SAAAgM,GACAG,EAAAwuB,OAAA3uB,IAOA4xB,aAAA,WACA,IAAA59B,EAAA7J,KACAgW,EAAAnM,EAAAg+B,WACA7xB,WAIAnM,EAAAg+B,WACA31B,GAAA/J,KAAA6N,EAAA,SAAAH,EAAA7P,GACAuwB,GAAA7C,oBAAA7pB,EAAA7D,EAAA6P,OAIAkyB,iBAAA,SAAA9uB,EAAA6H,EAAAiZ,GACA,IACA1hB,EAAArkB,EAAA2U,EADAgQ,EAAAohB,EAAA,mCAGA,IAAA/lC,EAAA,EAAA2U,EAAAsQ,EAAAnZ,OAAqC9L,EAAA2U,IAAU3U,GAC/CqkB,EAAAY,EAAAjlB,KAEAgM,KAAAmX,eAAAkB,EAAAL,eAAAgM,WAAArL,GAAAN,IAQAyvB,aAAA,SAAArhB,GACA,IAAA5c,EAAA7J,KACAogC,EAAAv2B,EAAAu2B,QAEA,QAAAhI,GAAAQ,OAAA/uB,EAAA,eAAA4c,IAAA,CAKA5c,EAAAs6B,iBAAA,EACAt6B,EAAA68B,iBAAA,KAEA,IAAAxH,EAAAr1B,EAAAq5B,YAAAzc,GAKA2Z,IACAlB,EAAAkB,EAAAxtB,OACAwtB,EAAA8C,YAAAzc,GACAyY,EAAAkB,EAAA8C,YAAAzc,IAGA2R,GAAAQ,OAAA/uB,EAAA,cAAA4c,IAEA,IAAAuhB,EAAAn+B,EAAA68B,iBAmBA,OAlBAsB,EAEAn+B,EAAAiK,OAAAk0B,GACG9I,IAAAr1B,EAAAoL,YAEHpL,EAAA+6B,OAIA/6B,EAAAiK,OAAA,CACAQ,SAAAzK,EAAAZ,QAAA4X,MAAAgjB,kBACAhvB,MAAA,KAIAhL,EAAAs6B,iBAAA,EACAt6B,EAAA68B,iBAAA,KAEA78B,IASAq5B,YAAA,SAAAzc,GACA,IAAA5c,EAAA7J,KACAiJ,EAAAY,EAAAZ,SAAA,GACAg/B,EAAAh/B,EAAA4X,MACAqe,GAAA,EAqCA,OAnCAr1B,EAAA48B,WAAA58B,EAAA48B,YAAA,GAGA,aAAAhgB,EAAAzgB,KACA6D,EAAAy1B,OAAA,GAEAz1B,EAAAy1B,OAAAz1B,EAAAs5B,0BAAA1c,EAAAwhB,EAAAnnB,KAAAmnB,GAKA/1B,GAAAnK,SAAAkB,EAAA26B,SAAA36B,EAAA4X,MAAA+iB,QAAA,CAAAnd,EAAAuG,OAAAnjB,EAAAy1B,QAAAz1B,GAEA,YAAA4c,EAAAzgB,MAAA,UAAAygB,EAAAzgB,MACAiD,EAAAud,SAEAvd,EAAAud,QAAAjnB,KAAAsK,EAAA4c,EAAAuG,OAAAnjB,EAAAy1B,QAKAz1B,EAAA48B,WAAA3mC,QACA+J,EAAAk+B,iBAAAl+B,EAAA48B,WAAAwB,EAAAnnB,MAAA,GAIAjX,EAAAy1B,OAAAx/B,QAAAmoC,EAAAnnB,MACAjX,EAAAk+B,iBAAAl+B,EAAAy1B,OAAA2I,EAAAnnB,MAAA,GAGAoe,GAAAhtB,GAAA1J,YAAAqB,EAAAy1B,OAAAz1B,EAAA48B,YAGA58B,EAAA48B,WAAA58B,EAAAy1B,OAEAJ,KASA8E,GAAAI,UAAA,GAEA,IAAA8D,GAAAlE,GAipBA,SAAAmE,KACA,UAAA/B,MACA,6GAsBA,SAAAgC,GAAAn/B,GACAjJ,KAAAiJ,WAAA,GA/pBA+6B,GAAAqE,WAAArE,GASAA,GAAAsE,MAAA,GASAp2B,GAAAq2B,YAAA9E,GASAvxB,GAAAs2B,WAAAjF,GAuoBArxB,GAAAzI,OAAA2+B,GAAA/oC,UAAA,CAMAopC,QAAAN,GASAO,MAAAP,GASAQ,OAAAR,GAUAzS,IAAAyS,GAUAS,KAAAT,GAUAU,QAAAV,GAQAW,MAAAX,GAWAY,QAAA,SAAA/lC,GACA,OAAAA,KAIAolC,GAAAY,SAAA,SAAAC,GACA/2B,GAAAzI,OAAA2+B,GAAA/oC,UAAA4pC,IAGA,IAEAC,GAAA,CACAC,MAHAf,IAUAgB,GAAA,CAKAC,WAAA,CAOAjpC,OAAA,SAAA4C,GACA,OAAAkP,GAAA5K,QAAAtE,KAAA,GAAAA,GAWA2H,OAAA,SAAA2+B,EAAAziC,EAAA2c,GAEA,IAAAvwB,EAAAuwB,EAAA1jB,OAAA,EAAA0jB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAGAzwB,KAAAorB,IAAAlrB,GAAA,GACAq2C,IAAAv2C,KAAAmB,MAAAo1C,KAEAr2C,EAAAq2C,EAAAv2C,KAAAmB,MAAAo1C,IAIA,IAAAC,EAAAr3B,GAAAs3B,MAAAz2C,KAAAorB,IAAAlrB,IACAw2C,EAAA,GAEA,OAAAH,EAAA,CACA,IAAAI,EAAA32C,KAAAC,IAAAD,KAAAorB,IAAAqF,EAAA,IAAAzwB,KAAAorB,IAAAqF,IAAA1jB,OAAA,KACA,GAAA4pC,EAAA,MACA,IAAAC,EAAAz3B,GAAAs3B,MAAAz2C,KAAAorB,IAAAmrB,IACAG,EAAAH,EAAAM,cAAA72C,KAAAmB,MAAAy1C,GAAA52C,KAAAmB,MAAAq1C,QACK,CACL,IAAAM,GAAA,EAAA92C,KAAAmB,MAAAq1C,GACAM,EAAA92C,KAAAC,IAAAD,KAAAD,IAAA+2C,EAAA,OACAJ,EAAAH,EAAAQ,QAAAD,SAGAJ,EAAA,IAGA,OAAAA,GAGAM,YAAA,SAAAT,EAAAziC,EAAA2c,GACA,IAAAwmB,EAAAV,EAAAv2C,KAAAQ,IAAA,GAAAR,KAAAmB,MAAAge,GAAAs3B,MAAAF,KAEA,WAAAA,EACA,IACI,IAAAU,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAnjC,OAAA2c,EAAA1jB,OAAA,EACJwpC,EAAAM,gBAEA,MAKAK,GAAA/3B,GAAAtK,eACAE,GAAAoK,GAAApK,sBA2DA,SAAAoiC,GAAA1mB,GACA,IACAxvB,EAAA2U,EADAmZ,EAAA,GAGA,IAAA9tB,EAAA,EAAA2U,EAAA6a,EAAA1jB,OAAiC9L,EAAA2U,IAAU3U,EAC3C8tB,EAAA5M,KAAAsO,EAAAxvB,GAAA6tB,OAGA,OAAAC,EAoBA,SAAAqoB,GAAAl4B,EAAAm4B,EAAA34B,GACA,OAAAS,GAAA5K,QAAA8iC,GACAl4B,GAAAm4B,YAAAp4B,EAAAR,EAAA24B,GACAn4B,EAAA0uB,YAAAyJ,GAAA78B,MAxFAyD,GAAAT,KAAA,SACAwa,SAAA,EACAjG,SAAA,OACA7D,QAAA,EAGAC,UAAA,CACA6J,SAAA,EACAuf,MAAA,qBACA9tB,UAAA,EACA+tB,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,mBAAA,GACAC,yBAAA,EACA3pB,iBAAA,EACArE,WAAA,GACAC,iBAAA,GAIAguB,WAAA,CAEAhgB,SAAA,EAGAigB,YAAA,GAGAtsB,QAAA,CACA9Q,IAAA,EACAE,OAAA,IAKA0V,MAAA,CACA0H,aAAA,EACA+f,YAAA,EACAC,YAAA,GACAC,QAAA,EACAzsB,QAAA,EACArW,SAAA,EACA0iB,SAAA,EACAqgB,UAAA,EACAC,gBAAA,EACAC,YAAA,EAEAvjC,SAAAqhC,GAAAC,WAAAjpC,OACAmrC,MAAA,GACAC,MAAA,MAsCA,IAAAC,GAAA/3B,GAAAjK,OAAA,CAOAunB,WAAA,WAEA,OACArjB,KAFA3N,KAEA0rC,aAAA,EACA99B,IAHA5N,KAGA2rC,YAAA,EACA99B,MAJA7N,KAIA4rC,cAAA,EACA99B,OALA9N,KAKA6rC,eAAA,IAQApoB,SAAA,WACA,OAAAzjB,KAAA8rC,QAOAhG,kBAAA,WACA,IAAAtiB,EAAAxjB,KAAAiJ,QAAAua,MAWA,QAAAzkB,KAVA,IAAAykB,EAAA+nB,QACA/nB,EAAA+nB,MAAA,CACAxgB,SAAA,KAGA,IAAAvH,EAAAgoB,QACAhoB,EAAAgoB,MAAA,CACAzgB,SAAA,IAGAvH,EACA,UAAAzkB,GAAA,UAAAA,SACA,IAAAykB,EAAA+nB,MAAAxsC,KACAykB,EAAA+nB,MAAAxsC,GAAAykB,EAAAzkB,SAEA,IAAAykB,EAAAgoB,MAAAzsC,KACAykB,EAAAgoB,MAAAzsC,GAAAykB,EAAAzkB,MAKAgtC,aAAA,WACA75B,GAAAnK,SAAA/H,KAAAiJ,QAAA8iC,aAAA,CAAA/rC,QAGA2X,OAAA,SAAAq0B,EAAAC,EAAAC,GACA,IACAl4C,EAAA2U,EAAAmZ,EAAAD,EAAA2B,EAAA4mB,EADAvgC,EAAA7J,KA4DA,IAxDA6J,EAAAkiC,eAGAliC,EAAAmiC,WACAniC,EAAAoiC,YACApiC,EAAAqiC,QAAAh6B,GAAAzI,OAAA,CACAkE,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,GACGo+B,GAEHriC,EAAAsiC,eAAA,EACAtiC,EAAAuiC,kBAAA,EACAviC,EAAAwiC,iBAAAxiC,EAAAwiC,kBAAA,GAGAxiC,EAAAyiC,sBACAziC,EAAA0iC,gBACA1iC,EAAA2iC,qBAGA3iC,EAAA4iC,mBACA5iC,EAAA6iC,sBACA7iC,EAAA8iC,kBASA9iC,EAAA+iC,mBAIAppB,EAAA3Z,EAAAgjC,cAAA,GAGArpB,EAAA3Z,EAAAijC,gBAAAtpB,MAEA3Z,EAAAkjC,8BAKAjrB,EAAAjY,EAAAmjC,qBAAAxpB,IAAA3Z,EAAA2Z,MAEA3Z,EAAAojC,6BAEApjC,EAAA2Z,MAAA1B,EAKA9tB,EAAA,EAAA2U,EAAAmZ,EAAAhiB,OAAmC9L,EAAA2U,IAAU3U,EAC7C6tB,EAAAC,EAAA9tB,IACAo2C,EAAA5mB,EAAAxvB,IAOAo2C,EAAAvoB,QALA2B,EAAAtO,KAAAk1B,EAAA,CACAvoB,QACA2pB,OAAA,IAoBA,OAbA3hC,EAAAiiC,OAAAtoB,EAGA3Z,EAAAqjC,8BACArjC,EAAAsjC,wBACAtjC,EAAAujC,6BAEAvjC,EAAAwjC,YACAxjC,EAAAyjC,MACAzjC,EAAA0jC,WAEA1jC,EAAA2jC,cAEA3jC,EAAAyd,SAGAkmB,YAAA,WACAt7B,GAAAnK,SAAA/H,KAAAiJ,QAAAukC,YAAA,CAAAxtC,QAKAssC,oBAAA,WACAp6B,GAAAnK,SAAA/H,KAAAiJ,QAAAqjC,oBAAA,CAAAtsC,QAEAusC,cAAA,WACA,IAAA1iC,EAAA7J,KAEA6J,EAAAqY,gBAEArY,EAAA0D,MAAA1D,EAAAmiC,SACAniC,EAAA8D,KAAA,EACA9D,EAAAgE,MAAAhE,EAAA0D,QAEA1D,EAAA2D,OAAA3D,EAAAoiC,UAGApiC,EAAA+D,IAAA,EACA/D,EAAAiE,OAAAjE,EAAA2D,QAIA3D,EAAA6hC,YAAA,EACA7hC,EAAA8hC,WAAA,EACA9hC,EAAA+hC,aAAA,EACA/hC,EAAAgiC,cAAA,GAEAW,mBAAA,WACAt6B,GAAAnK,SAAA/H,KAAAiJ,QAAAujC,mBAAA,CAAAxsC,QAIAysC,iBAAA,WACAv6B,GAAAnK,SAAA/H,KAAAiJ,QAAAwjC,iBAAA,CAAAzsC,QAEA0sC,oBAAAx6B,GAAA/K,KACAwlC,gBAAA,WACAz6B,GAAAnK,SAAA/H,KAAAiJ,QAAA0jC,gBAAA,CAAA3sC,QAIA4sC,iBAAA,WACA16B,GAAAnK,SAAA/H,KAAAiJ,QAAA2jC,iBAAA,CAAA5sC,QAEA6sC,WAAA36B,GAAA/K,KACA2lC,gBAAA,SAAAtpB,GACA,IAAA3Z,EAAA7J,KAEA,OAAAkS,GAAA5K,QAAAkc,MAAA1jB,OACAoS,GAAAnK,SAAA8B,EAAAZ,QAAA6jC,gBAAA,CAAAjjC,EAAA2Z,KAGA3Z,EAAA2Z,MAAAtR,GAAAnK,SAAA8B,EAAAZ,QAAA6jC,gBAAA,CAAAjjC,IAAA2Z,SAAA3Z,EAAA2Z,MACAA,IAGAupB,4BAAA,WACA76B,GAAAnK,SAAA/H,KAAAiJ,QAAA8jC,4BAAA,CAAA/sC,QAEAgtC,qBAAA,WACA,IAEAS,EAFAztC,KAEAiJ,QAAAua,MAFAxjB,KAGAwjB,MAHAxjB,KAGAwjB,MAAA1a,IAAA2kC,EAAAC,cAAAD,EAAA1lC,SAAA/H,OAEAitC,2BAAA,WACA/6B,GAAAnK,SAAA/H,KAAAiJ,QAAAgkC,2BAAA,CAAAjtC,QAKAktC,4BAAA,WACAh7B,GAAAnK,SAAA/H,KAAAiJ,QAAAikC,4BAAA,CAAAltC,QAEAmtC,sBAAA,WACA,IAAAtjC,EAAA7J,KACAiS,EAAApI,EAAAwD,IACAogC,EAAA5jC,EAAAZ,QAAAua,MACA1B,EAAAooB,GAAArgC,EAAAiiC,QAIA6B,EAAAz7B,GAAAjJ,QAAAoI,WAAAo8B,GACAx7B,EAAAR,KAAAk8B,EAAA3sC,OAEA,IAAA4sC,EAAAH,EAAAxC,aAAA,EAEA,GAAAnpB,EAAAhiB,QAAA+J,EAAAZ,QAAA8hB,SAAAlhB,EAAAqY,eASA,IARA,IAEA2rB,EAFAC,EAAA57B,GAAAm4B,YAAAp4B,EAAA07B,EAAA3sC,OAAA8gB,EAAAjY,EAAAwiC,kBACA0B,EAAAD,EAIAE,EAAAnkC,EAAA6Z,gBAAA,GAAA7Z,EAAA6Z,gBAAA,KAGAqqB,EAAAC,GAAAJ,EAAAH,EAAAvC,aAAA,CACA,IAAA+C,EAAA/7B,GAAAg8B,UAAAN,GAIA,GAHAC,EAAA96C,KAAAwC,IAAA04C,GACAl7C,KAAAyC,IAAAy4C,GAEAH,EAAAjkC,EAAAoiC,UAAA,CAEA2B,IACA,MAGAA,IACAG,EAAAF,EAAAC,EAIAjkC,EAAA+jC,iBAEAR,2BAAA,WACAl7B,GAAAnK,SAAA/H,KAAAiJ,QAAAmkC,2BAAA,CAAAptC,QAKAqtC,UAAA,WACAn7B,GAAAnK,SAAA/H,KAAAiJ,QAAAokC,UAAA,CAAArtC,QAEAstC,IAAA,WACA,IAAAzjC,EAAA7J,KAEAsnB,EAAAzd,EAAAyd,QAAA,CACA/Z,MAAA,EACAC,OAAA,GAGAsU,EAAAooB,GAAArgC,EAAAiiC,QAEA3kB,EAAAtd,EAAAZ,QACAwkC,EAAAtmB,EAAA3D,MACA2qB,EAAAhnB,EAAA4jB,WACAqD,EAAAjnB,EAAAjG,UACA6J,EAAAlhB,EAAAwkC,aACAvpB,EAAAqC,EAAArC,SACA5C,EAAArY,EAAAqY,eAEAosB,EAAAp8B,GAAAjJ,QAAAoI,WACAs8B,EAAAW,EAAAb,GACA/C,EAAAvjB,EAAAjG,UAAAwpB,eAkBA,GAbApjB,EAAA/Z,MAFA2U,EAEArY,EAAA0kC,cAAA1kC,EAAAmiC,SAAAniC,EAAAqiC,QAAAv+B,KAAA9D,EAAAqiC,QAAAr+B,MAAAhE,EAAAmiC,SAEAjhB,GAAAqjB,EAAA3D,UAAAC,EAAA,EAKApjB,EAAA9Z,OADA0U,EACA6I,GAAAqjB,EAAA3D,UAAAC,EAAA,EAEA7gC,EAAAoiC,UAIAkC,EAAApjB,WAAA,CACA,IAAAyjB,EAAAF,EAAAH,GACAM,EAAAv8B,GAAAjJ,QAAAmI,UAAA+8B,EAAAzvB,SACAgwB,EAAAF,EAAA58B,WAAA68B,EAAAjhC,OAEA0U,EACAoF,EAAA9Z,QAAAkhC,EAEApnB,EAAA/Z,OAAAmhC,EAKA,GAAAjB,EAAA1iB,WAAA,CACA,IAAA4jB,EAAAz8B,GAAAm4B,YAAAxgC,EAAAwD,IAAAsgC,EAAA3sC,OAAA8gB,EAAAjY,EAAAwiC,kBACAuC,EAAA18B,GAAA28B,mBAAA/sB,GACAgtB,EAAA,GAAAnB,EAAAn/B,KACAugC,EAAAllC,EAAAZ,QAAAua,MAAA9E,QAMA,GAHA7U,EAAAsiC,eAAAyC,EACA/kC,EAAAuiC,kBAAAuC,EAEAzsB,EAAA,CACA,IAAA+rB,EAAA/7B,GAAAg8B,UAAArkC,EAAA+jC,eACAC,EAAA96C,KAAAwC,IAAA04C,GACAe,EAAAj8C,KAAAyC,IAAAy4C,GAGAgB,EAAAD,EAAAL,EACAhB,EAAA/7B,WAAAg9B,EACAE,EAEAxnB,EAAA9Z,OAAAza,KAAAD,IAAA+W,EAAAoiC,UAAA3kB,EAAA9Z,OAAAyhC,EAAAF,GAEAllC,EAAAwD,IAAAoE,KAAAk8B,EAAA3sC,OACA,IAIA0qC,EAAAE,EAJAsD,EAAA/E,GAAAtgC,EAAAwD,IAAAyU,EAAA,GAAA6rB,EAAA3sC,QACAmuC,EAAAhF,GAAAtgC,EAAAwD,IAAAyU,IAAAhiB,OAAA,GAAA6tC,EAAA3sC,QACAouC,EAAAvlC,EAAA6Z,gBAAA,GAAA7Z,EAAA8D,KACA0hC,EAAAxlC,EAAAgE,MAAAhE,EAAA6Z,gBAAA5B,EAAAhiB,OAAA,GAKA,IAAA+J,EAAA+jC,eACAlC,EAAA,WAAA5mB,EAAA+oB,EAAAqB,EAAArB,EAAAiB,EACAlD,EAAA,WAAA9mB,EAAA+oB,EAAAiB,EAAAjB,EAAAsB,IAEAzD,EAAAwD,EAAA,EACAtD,EAAAuD,EAAA,GAEAtlC,EAAA6hC,YAAA34C,KAAAC,IAAA04C,EAAA0D,EAAA,KACAvlC,EAAA+hC,aAAA74C,KAAAC,IAAA44C,EAAAyD,EAAA,UAIA5B,EAAAtC,OACAwD,EAAA,EAIAA,GAAAI,EAAAD,EAGAxnB,EAAA/Z,MAAAxa,KAAAD,IAAA+W,EAAAmiC,SAAA1kB,EAAA/Z,MAAAohC,GAEA9kC,EAAA8hC,WAAAgC,EAAAn/B,KAAA,EACA3E,EAAAgiC,cAAA8B,EAAAn/B,KAAA,EAIA3E,EAAAylC,gBAEAzlC,EAAA0D,MAAA+Z,EAAA/Z,MACA1D,EAAA2D,OAAA8Z,EAAA9Z,QAOA8hC,cAAA,WACA,IAAAzlC,EAAA7J,KACA6J,EAAAqiC,UACAriC,EAAA6hC,YAAA34C,KAAAC,IAAA6W,EAAA6hC,YAAA7hC,EAAAqiC,QAAAv+B,KAAA,GACA9D,EAAA8hC,WAAA54C,KAAAC,IAAA6W,EAAA8hC,WAAA9hC,EAAAqiC,QAAAt+B,IAAA,GACA/D,EAAA+hC,aAAA74C,KAAAC,IAAA6W,EAAA+hC,aAAA/hC,EAAAqiC,QAAAr+B,MAAA,GACAhE,EAAAgiC,cAAA94C,KAAAC,IAAA6W,EAAAgiC,cAAAhiC,EAAAqiC,QAAAp+B,OAAA,KAIAy/B,SAAA,WACAr7B,GAAAnK,SAAA/H,KAAAiJ,QAAAskC,SAAA,CAAAvtC,QAIAkiB,aAAA,WACA,cAAAliB,KAAAiJ,QAAA6b,UAAA,WAAA9kB,KAAAiJ,QAAA6b,UAEAypB,YAAA,WACA,OAAAvuC,KAAAiJ,QAAA,WAIA6a,cAAA,SAAAyrB,GAEA,GAAAr9B,GAAA7K,cAAAkoC,GACA,OAAA7pB,IAGA,qBAAA6pB,gBAAA5nC,UAAAD,SAAA6nC,GACA,OAAA7pB,IAGA,GAAA6pB,EACA,GAAAvvC,KAAAkiB,gBACA,QAAAriB,IAAA0vC,EAAA/7C,EACA,OAAAwM,KAAA8jB,cAAAyrB,EAAA/7C,QAEI,QAAAqM,IAAA0vC,EAAA97C,EACJ,OAAAuM,KAAA8jB,cAAAyrB,EAAA97C,GAKA,OAAA87C,GAQAvP,iBAAA9tB,GAAA/K,KASAic,iBAAAlR,GAAA/K,KAOAqoC,iBAAAt9B,GAAA/K,KAMAuc,gBAAA,SAAA7c,GACA,IAAAgD,EAAA7J,KACAihB,EAAApX,EAAAZ,QAAAgY,OACA,GAAApX,EAAAqY,eAAA,CACA,IAAAutB,EAAA5lC,EAAA0D,OAAA1D,EAAA6hC,YAAA7hC,EAAA+hC,cACAoC,EAAAyB,EAAA18C,KAAAC,IAAA6W,EAAAiiC,OAAAhsC,QAAAmhB,EAAA,QACAyuB,EAAA1B,EAAAnnC,EAAAgD,EAAA6hC,YAEAzqB,IACAyuB,GAAA1B,EAAA,GAGA,IAAA2B,EAAA9lC,EAAA8D,KAAA+hC,EAEA,OADAC,GAAA9lC,EAAA0kC,cAAA1kC,EAAAqiC,QAAAv+B,KAAA,EAGA,IAAAiiC,EAAA/lC,EAAA2D,QAAA3D,EAAA8hC,WAAA9hC,EAAAgiC,eACA,OAAAhiC,EAAA+D,IAAA/G,GAAA+oC,GAAA/lC,EAAAiiC,OAAAhsC,OAAA,KAOA2lB,mBAAA,SAAAoqB,GACA,IAAAhmC,EAAA7J,KACA,GAAA6J,EAAAqY,eAAA,CACA,IAAAutB,EAAA5lC,EAAA0D,OAAA1D,EAAA6hC,YAAA7hC,EAAA+hC,cACAkE,EAAAL,EAAAI,EAAAhmC,EAAA6hC,YAEAiE,EAAA9lC,EAAA8D,KAAAmiC,EAEA,OADAH,GAAA9lC,EAAA0kC,cAAA1kC,EAAAqiC,QAAAv+B,KAAA,EAGA,OAAA9D,EAAA+D,IAAAiiC,EAAAhmC,EAAA2D,QAOAyU,aAAA,WACA,OAAAjiB,KAAAojB,iBAAApjB,KAAA+vC,iBAGAA,aAAA,WACA,IACAj9C,EADAkN,KACAlN,IACAE,EAFAgN,KAEAhN,IAEA,OAJAgN,KAIAkrB,YAAA,EACAp4B,EAAA,GAAAE,EAAA,EAAAA,EACAF,EAAA,GAAAE,EAAA,EAAAF,EACA,GAOAk9C,UAAA,SAAAxsB,GACA,IAiBAxvB,EAAAo2C,EAjBAvgC,EAAA7J,KACAkiB,EAAArY,EAAAqY,eACA+tB,EAAApmC,EAAAZ,QAAAua,MAAA+nB,MACA2E,EAAA1sB,EAAA1jB,OACAqwC,GAAA,EACAC,EAAAH,EAAAI,cAIAC,EAAAzmC,EAAA0mC,aAAAL,EAAA,GAGAM,EAAAtuB,EACArY,EAAA0D,OAAA1D,EAAA6hC,YAAA7hC,EAAA+hC,cACA/hC,EAAA2D,QAAA3D,EAAA8hC,WAAA9hC,EAAA4mC,eAEAxqC,EAAA,GAaA,IAVAqqC,EAAAE,IACAL,EAAA,EAAAp9C,KAAAmB,MAAAo8C,EAAAE,IAKAN,EAAAE,IACAD,EAAAp9C,KAAAC,IAAAm9C,EAAA,EAAAp9C,KAAAmB,MAAAg8C,EAAAE,KAGAp8C,EAAA,EAAaA,EAAAk8C,EAAel8C,IAC5Bo2C,EAAA5mB,EAAAxvB,GAEAm8C,EAAA,GAAAn8C,EAAAm8C,EAAA,UAEA/F,EAAAvoB,MAEA5b,EAAAiP,KAAAk1B,GAEA,OAAAnkC,GAMAsqC,UAAA,WACA,IAAA1mC,EAAA7J,KACAkiB,EAAArY,EAAAqY,eACA+tB,EAAApmC,EAAAZ,QAAAua,MAAA+nB,MAGAmF,EAAAx+B,GAAAg8B,UAAArkC,EAAA+jC,eACAr4C,EAAAxC,KAAAorB,IAAAprB,KAAAwC,IAAAm7C,IACAl7C,EAAAzC,KAAAorB,IAAAprB,KAAAyC,IAAAk7C,IAEAhyB,EAAAuxB,EAAA5E,iBAAA,EACAn4C,EAAA2W,EAAAuiC,kBAAA1tB,GAAA,EAEAivB,EAAAz7B,GAAAjJ,QAAAoI,WAAA4+B,GACA9/C,EAAA0Z,EAAAsiC,eAAAwB,EAAA/7B,WAAA8M,GAAA,EAGA,OAAAwD,EACA/xB,EAAAoF,EAAArC,EAAAsC,EAAAtC,EAAAqC,EAAApF,EAAAqF,EACArF,EAAAqF,EAAAtC,EAAAqC,EAAApF,EAAAoF,EAAArC,EAAAsC,GAMA64C,WAAA,WACA,IAGAr6C,EAAA2U,EAAA6N,EAFApJ,EADApN,KACAoN,MACA2d,EAFA/qB,KAEAiJ,QAAA8hB,QAGA,YAAAA,EACA,QAAAA,EAIA,IAAA/2B,EAAA,EAAA2U,EAAAyE,EAAA6J,KAAAC,SAAApX,OAAgD9L,EAAA2U,IAAU3U,EAC1D,GAAAoZ,EAAA0V,iBAAA9uB,MACAwiB,EAAApJ,EAAA+J,eAAAnjB,IACA4iB,UAbA5W,KAaAgH,IAAAwP,EAAAO,UAbA/W,KAaAgH,IACA,SAKA,UAOAkS,KAAA,SAAAyF,GACA,IAAA9U,EAAA7J,KACAiJ,EAAAY,EAAAZ,QAEA,GAAAY,EAAAwkC,aAAA,CAIA,IAmCAsC,EAAAC,EAAAC,EAnCAzjC,EAAAvD,EAAAuD,MACA6E,EAAApI,EAAAwD,IACAiE,EAAAN,GAAAO,OACAb,EAAAY,EAAAZ,iBACAu/B,EAAAhnC,EAAAua,MAAA+nB,MACAuF,EAAA7nC,EAAAua,MAAAgoB,OAAAyE,EACA/uB,EAAAjY,EAAAiY,UACA6pB,EAAA9hC,EAAA8hC,WACAjmB,EAAA7b,EAAA6b,SAEAisB,EAAA,IAAAlnC,EAAA+jC,cACAoD,EAAAf,EAAA9E,OACAjpB,EAAArY,EAAAqY,eAEAosB,EAAAp8B,GAAAjJ,QAAAoI,WACAmS,EAAAysB,EAAAllB,SAAAklB,EAAA7E,SAAAvhC,EAAAmmC,UAAAnmC,EAAA4Z,YAAA5Z,EAAA4Z,WACAwtB,EAAAhH,GAAAgG,EAAAiB,UAAAxgC,GACAi9B,EAAAW,EAAA2B,GACAr+B,EAAA+7B,EAAA/7B,WACAu/B,EAAAlH,GAAA6G,EAAAI,UAAAxgC,GACA0gC,EAAA9C,EAAAwC,GACA/B,EAAAkB,EAAAvxB,QACA4sB,EAAA2E,EAAA3E,YAEA+F,EAAAnwB,EAAAupB,UAAAvpB,EAAAwpB,eAAA,EAEA4G,EAAArH,GAAAc,EAAAmG,UAAAxgC,GACA89B,EAAAF,EAAAvD,GACA0D,EAAAv8B,GAAAjJ,QAAAmI,UAAA25B,EAAArsB,SACA6yB,EAAAr/B,GAAAg8B,UAAArkC,EAAA+jC,eAEA4D,EAAA,GAEAC,EAAAvwB,EAAAqpB,WAAAziC,GAAAoZ,EAAA1E,UAAA,OACAk1B,EAAAx/B,GAAAy/B,YAkLA,GA/KA,QAAA7sB,GACA6rB,EAAAe,EAAAtkC,EAAAvD,EAAAiE,OAAA2jC,GACAb,EAAA/mC,EAAAiE,OAAAujC,EACAR,EAAAF,EAAAc,EAAA,GACG,WAAA3sB,GACH6rB,EAAAe,EAAAtkC,EAAAvD,EAAA+D,IAAA6jC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAhnC,EAAA+D,IAAAyjC,GACG,SAAAvsB,GACH6rB,EAAAe,EAAAtkC,EAAAvD,EAAAgE,MAAA4jC,GACAb,EAAA/mC,EAAAgE,MAAAwjC,EACAR,EAAAF,EAAAc,EAAA,IAEAd,EAAAe,EAAAtkC,EAAAvD,EAAA8D,KAAA8jC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAhnC,EAAA8D,KAAA0jC,GAKAn/B,GAAA/J,KAAAqb,EAAA,SAAA4mB,EAAAvjC,GAEA,IAAAqL,GAAA7K,cAAA+iC,EAAAvoB,OAAA,CAIA,IACArF,EAAAo1B,EAAA90B,EAAAC,EAeA80B,EAAAC,EAAAC,EAAAC,EAAAjzB,EAAAE,EAAAD,EAAAhqB,EAAAi9C,EAAAC,EAAAC,EAAAhQ,EAhBAtgB,EAAAuoB,EAAAvoB,MAEAhb,IAAAgD,EAAAuoC,eAAAnpC,EAAAgY,SAAAC,EAAAC,iBAEA3E,EAAA0E,EAAAypB,cACAiH,EAAA1wB,EAAA0pB,cACA9tB,EAAAoE,EAAA2pB,oBAAA,GACA9tB,EAAAmE,EAAA4pB,0BAAA,IAEAtuB,EAAA1U,GAAAoZ,EAAA1E,UAAA3V,GACA+qC,EAAA9pC,GAAAoZ,EAAAopB,MAAAzjC,GACAiW,EAAAoE,EAAApE,YAAA,GACAC,EAAAmE,EAAAnE,kBAAA,GAKA,IAAAse,EAAAnpB,GAAA5K,QAAAua,KAAA/hB,OAAA,EACAuyC,EA/tBA,SAAAhwC,EAAAwE,EAAAsa,GACA,IAAAkxB,EAAAhwC,EAAAqhB,gBAAA7c,GAaA,OAXAsa,IACA,IAAA9e,EAAAohB,WAAA3jB,OACAuyC,GAAAhwC,EAAA6f,eACAnvB,KAAAC,IAAAq/C,EAAAhwC,EAAAsL,KAAAtL,EAAAwL,MAAAwkC,GACAt/C,KAAAC,IAAAq/C,EAAAhwC,EAAAuL,IAAAvL,EAAAyL,OAAAukC,GAEAA,GADG,IAAAxrC,GACHxE,EAAAqhB,gBAAA,GAAA2uB,GAAA,GAEAA,EAAAhwC,EAAAqhB,gBAAA7c,EAAA,OAGAwrC,EAitBAC,CAAAzoC,EAAAhD,EAAAqa,EAAAC,iBAEA,GAAAe,EAAA,CACA,IAAAqwB,EAAAlB,EAAAtC,EAEAsD,EAAAxoC,EAAA8D,KA/BA,OAgCAikC,EAAA,iBAGAC,EAAAE,EAAAhzB,EAAAC,EAAA0yB,EAAAtkC,EAAAilC,EAAA71B,GACAs1B,EAAAlB,EACAoB,EAAAnB,EACAoB,EAAApoC,EAAA6Z,gBAAA7c,GAAAykC,EAEA,QAAAxmB,GACA7F,EAAAyyB,EAAAtkC,EAAAuR,EAAA/Q,IAAA6jC,KAAA,EACAz8C,EAAA2pB,EAAA7Q,OACAqkC,IAAApB,EAAA,MAAA1V,GAAAzpB,EACAuwB,EAAA4O,EAAA,gBACAmB,EAAAroC,EAAAiE,OAAAykC,IAEAtzB,EAAAN,EAAA/Q,IACA5Y,EAAA08C,EAAAtkC,EAAAuR,EAAA7Q,OAAA2jC,KAAA,EACAU,GAAApB,EAAA,MAAAn/B,EACAuwB,EAAA4O,EAAA,iBACAmB,EAAAroC,EAAA+D,IAAA2kC,OAEI,CACJ,IAAAC,GAAAxB,EAAA,EAAAK,GAAAtC,EAEAsD,EAAAxoC,EAAA+D,IAxDA,OAyDAgkC,EAAA,iBAGAC,EAAAjB,EACAmB,EAAAlB,EACAiB,EAAAE,EAAA/yB,EAAAjqB,EAAA08C,EAAAtkC,EAAAilC,EAAA71B,GACA01B,EAAAroC,EAAA6Z,gBAAA7c,GAAAykC,EACA6G,GAAA,EAAA9W,GAAAzpB,EAAA,EAEA,SAAAkT,GACA/F,EAAA2yB,EAAAtkC,EAAAuR,EAAAhR,KAAA8jC,KAAA,EACAzyB,EAAAL,EAAA9Q,MACAs0B,EAAA6O,EAAA,eACAiB,EAAApoC,EAAAgE,MAAA2kC,IAEAzzB,EAAAJ,EAAAhR,KACAqR,EAAA0yB,EAAAtkC,EAAAuR,EAAA9Q,MAAA4jC,KAAA,EACAtP,EAAA6O,EAAA,eACAiB,EAAApoC,EAAA8D,KAAA6kC,GAIAhB,EAAAt8B,KAAA,CACA28B,MACAC,MACAC,MACAC,MACAjzB,KACAE,KACAD,KACAhqB,KACAi9C,SACAC,SACAO,QAAAj2B,EACAk2B,QAAAd,EACAe,aAAA71B,EACA81B,mBAAA71B,EACA1O,UAAA,EAAAkjC,EACA1vB,QACA2pB,MAAApB,EAAAoB,MACA2G,aACAhQ,iBAKAjwB,GAAA/J,KAAAqpC,EAAA,SAAAqB,GACA,IAAAJ,EAAAI,EAAAJ,QACAC,EAAAG,EAAAH,QA2BA,GAzBAxxB,EAAA6J,SAAA0nB,GAAAC,IACAzgC,EAAA5C,OACA4C,EAAAuK,UAAAi2B,EACAxgC,EAAAyK,YAAAg2B,EACAzgC,EAAA2L,cACA3L,EAAA2L,YAAAi1B,EAAAF,cACA1gC,EAAA4L,eAAAg1B,EAAAD,oBAGA3gC,EAAAtD,YAEAuS,EAAAupB,YACAx4B,EAAAlE,OAAA8kC,EAAAhB,IAAAgB,EAAAf,KACA7/B,EAAArD,OAAAikC,EAAAd,IAAAc,EAAAb,MAGA9wB,EAAAspB,kBACAv4B,EAAAlE,OAAA8kC,EAAA9zB,GAAA8zB,EAAA5zB,IACAhN,EAAArD,OAAAikC,EAAA7zB,GAAA6zB,EAAA79C,KAGAid,EAAAlD,SACAkD,EAAAzC,WAGAygC,EAAAllB,QAAA,CAEA9Y,EAAA5C,OACA4C,EAAA6gC,UAAAD,EAAAZ,OAAAY,EAAAX,QACAjgC,EAAA1M,OAAAstC,EAAAxkC,UACA4D,EAAAR,KAAAohC,EAAArH,MAAA4F,EAAApwC,OAAA2sC,EAAA3sC,OACAiR,EAAAsK,UAAAs2B,EAAArH,MAAA2F,EAAAF,EACAh/B,EAAAmwB,aAAA,SACAnwB,EAAAkwB,UAAA0Q,EAAA1Q,UAEA,IAAAtgB,EAAAgxB,EAAAhxB,MACApuB,EAAAo/C,EAAAV,WACA,GAAAjgC,GAAA5K,QAAAua,GACA,QAAA7tB,EAAA,EAAoBA,EAAA6tB,EAAA/hB,SAAkB9L,EAEtCie,EAAAowB,SAAA,GAAAxgB,EAAA7tB,GAAA,EAAAP,GACAA,GAAAme,OAGAK,EAAAowB,SAAAxgB,EAAA,EAAApuB,GAEAwe,EAAAzC,aAIAu7B,EAAAhgB,QAAA,CAEA,IAAAgoB,EACAC,EACA3kC,EAAA,EACA4kC,EAAAzE,EAAA58B,WAAA,EAEA,GAAAsQ,EACA6wB,EAAAlpC,EAAA8D,MAAA9D,EAAAgE,MAAAhE,EAAA8D,MAAA,EACAqlC,EAAA,WAAAluB,EACAjb,EAAAiE,OAAAmlC,EAAAxE,EAAA3gC,OACAjE,EAAA+D,IAAAqlC,EAAAxE,EAAA7gC,QACI,CACJ,IAAAslC,EAAA,SAAApuB,EACAiuB,EAAAG,EACArpC,EAAA8D,KAAAslC,EAAAxE,EAAA7gC,IACA/D,EAAAgE,MAAAolC,EAAAxE,EAAA7gC,IACAolC,EAAAnpC,EAAA+D,KAAA/D,EAAAiE,OAAAjE,EAAA+D,KAAA,EACAS,EAAA6kC,GAAA,GAAAngD,KAAAqC,GAAA,GAAArC,KAAAqC,GAGA6c,EAAA5C,OACA4C,EAAA6gC,UAAAC,EAAAC,GACA/gC,EAAA1M,OAAA8I,GACA4D,EAAAkwB,UAAA,SACAlwB,EAAAmwB,aAAA,SACAnwB,EAAAsK,UAAA+0B,EACAr/B,EAAAR,KAAA+8B,EAAAxtC,OACAiR,EAAAowB,SAAA0I,EAAAC,YAAA,KACA/4B,EAAAzC,UAGA,GAAAiiC,EAAA,CAEA,IAEA1yB,EAAAC,EAAAC,EAAAjqB,EAFAm+C,EAAA1B,EACA2B,EAAAtrC,GAAAoZ,EAAA1E,UAAAgH,EAAA1jB,OAAA,KAGAoiB,GACAnD,EAAA2yB,EAAAtkC,EAAAvD,EAAA8D,KAAAwlC,KAAA,EACAn0B,EAAA0yB,EAAAtkC,EAAAvD,EAAAgE,MAAAulC,KAAA,EACAn0B,EAAAjqB,EAAA27C,IAEA1xB,EAAAyyB,EAAAtkC,EAAAvD,EAAA+D,IAAAulC,KAAA,EACAn+C,EAAA08C,EAAAtkC,EAAAvD,EAAAiE,OAAAslC,KAAA,EACAr0B,EAAAC,EAAA2xB,GAGA1+B,EAAAuK,UAAAi1B,EACAx/B,EAAAyK,YAAA5U,GAAAoZ,EAAAopB,MAAA,GACAr4B,EAAAtD,YACAsD,EAAAlE,OAAAgR,EAAAE,GACAhN,EAAArD,OAAAoQ,EAAAhqB,GACAid,EAAAlD,cASAskC,GAAA5H,GAAAhiC,OAAA,CAMA6pC,UAAA,WACA,IAAAr8B,EAAAjX,KAAAoN,MAAA6J,KACA,OAAAjX,KAAAiJ,QAAA6Y,SAAA9hB,KAAAkiB,eAAAjL,EAAAs8B,QAAAt8B,EAAAu8B,UAAAv8B,EAAA6K,QAGA4qB,oBAAA,WACA,IAIAr3B,EAJAxL,EAAA7J,KACA8hB,EAAAjY,EAAAypC,YACAzpC,EAAA4pC,SAAA,EACA5pC,EAAA6pC,SAAA5xB,EAAAhiB,OAAA,OAGAD,IAAAgK,EAAAZ,QAAAua,MAAA1wB,MAEAuiB,EAAAyM,EAAA1X,QAAAP,EAAAZ,QAAAua,MAAA1wB,KACA+W,EAAA4pC,UAAA,IAAAp+B,IAAAxL,EAAA4pC,eAGA5zC,IAAAgK,EAAAZ,QAAAua,MAAAxwB,MAEAqiB,EAAAyM,EAAA1X,QAAAP,EAAAZ,QAAAua,MAAAxwB,KACA6W,EAAA6pC,UAAA,IAAAr+B,IAAAxL,EAAA6pC,UAGA7pC,EAAA/W,IAAAgvB,EAAAjY,EAAA4pC,UACA5pC,EAAA7W,IAAA8uB,EAAAjY,EAAA6pC,WAGA7G,WAAA,WACA,IAAAhjC,EAAA7J,KACA8hB,EAAAjY,EAAAypC,YAEAzpC,EAAA2Z,MAAA,IAAA3Z,EAAA4pC,UAAA5pC,EAAA6pC,WAAA5xB,EAAAhiB,OAAA,EAAAgiB,IAAAxiB,MAAAuK,EAAA4pC,SAAA5pC,EAAA6pC,SAAA,IAGA1T,iBAAA,SAAAn5B,EAAAqP,GACA,IAAArM,EAAA7J,KACAoN,EAAAvD,EAAAuD,MAEA,OAAAA,EAAA+J,eAAAjB,GAAA8N,WAAA1M,qBAAAzN,EAAA7C,GACA6C,EAAAia,cAAA1W,EAAA6J,KAAAC,SAAAhB,GAAAe,KAAApQ,IAGAgD,EAAA2Z,MAAA3c,EAAAgD,EAAA4pC,WAIArwB,iBAAA,SAAApgB,EAAA6D,GACA,IAOA8sC,EAPA9pC,EAAA7J,KACAihB,EAAApX,EAAAZ,QAAAgY,OAEA2yB,EAAA7gD,KAAAC,IAAA6W,EAAA6pC,SAAA,EAAA7pC,EAAA4pC,UAAAxyB,EAAA,QAQA,GAHAje,UACA2wC,EAAA9pC,EAAAqY,eAAAlf,EAAAxP,EAAAwP,EAAAvP,QAEAoM,IAAA8zC,QAAA9zC,IAAAmD,GAAAV,MAAAuE,GAAA,CACA,IAAAib,EAAAjY,EAAAypC,YACAtwC,EAAA2wC,GAAA3wC,EACA,IAAA01B,EAAA5W,EAAA1X,QAAApH,GACA6D,GAAA,IAAA6xB,IAAA7xB,EAGA,GAAAgD,EAAAqY,eAAA,CACA,IAAA2xB,EAAAhqC,EAAA0D,MAAAqmC,EACAE,EAAAD,GAAAhtC,EAAAgD,EAAA4pC,UAMA,OAJAxyB,IACA6yB,GAAAD,EAAA,GAGAhqC,EAAA8D,KAAAmmC,EAEA,IAAAC,EAAAlqC,EAAA2D,OAAAomC,EACAI,EAAAD,GAAAltC,EAAAgD,EAAA4pC,UAMA,OAJAxyB,IACA+yB,GAAAD,EAAA,GAGAlqC,EAAA+D,IAAAomC,GAGAtwB,gBAAA,SAAA7c,GACA,OAAA7G,KAAAojB,iBAAApjB,KAAAwjB,MAAA3c,KAAA7G,KAAAyzC,SAAA,OAGAjE,iBAAA,SAAAE,GACA,IAAA7lC,EAAA7J,KACAihB,EAAApX,EAAAZ,QAAAgY,OAEA2yB,EAAA7gD,KAAAC,IAAA6W,EAAAiiC,OAAAhsC,QAAAmhB,EAAA,QACAgzB,EAAApqC,EAAAqY,eACAgyB,GAAAD,EAAApqC,EAAA0D,MAAA1D,EAAA2D,QAAAomC,EAcA,OAZAlE,GAAAuE,EAAApqC,EAAA8D,KAAA9D,EAAA+D,IAEAqT,IACAyuB,GAAAwE,EAAA,IAGAxE,GAAA,EACA,EAEA38C,KAAAgN,MAAA2vC,EAAAwE,IAGArqC,EAAA4pC,UAGAxxB,aAAA,WACA,OAAAjiB,KAAA8N,UAKAqmC,GAjIA,CACArvB,SAAA,UAiIAuuB,GAAAc,aAEA,IAAAhtC,GAAA+K,GAAA/K,KACAE,GAAA6K,GAAA7K,cAgFA+sC,GAAA3I,GAAAhiC,OAAA,CACAqa,cAAA,SAAA9gB,GACA,uBAAAA,GACAA,EAEAyoC,GAAApsC,UAAAykB,cAAAvkB,KAAAS,KAAAgD,IAGAqxC,uBAAA,WACA,IAAAxqC,EAAA7J,KACAmnB,EAAAtd,EAAAZ,QACAwkC,EAAAtmB,EAAA3D,MAKA,GAAAiqB,EAAAviB,YAAA,CACA,IAAAopB,EAAApiC,GAAAqiC,KAAA1qC,EAAA/W,KACA0hD,EAAAtiC,GAAAqiC,KAAA1qC,EAAA7W,KAEAshD,EAAA,GAAAE,EAAA,EAEA3qC,EAAA7W,IAAA,EACIshD,EAAA,GAAAE,EAAA,IAEJ3qC,EAAA/W,IAAA,GAIA,IAAA2hD,OAAA50C,IAAA4tC,EAAA36C,UAAA+M,IAAA4tC,EAAAiH,aACAC,OAAA90C,IAAA4tC,EAAAz6C,UAAA6M,IAAA4tC,EAAAmH,kBAEA/0C,IAAA4tC,EAAA36C,IACA+W,EAAA/W,IAAA26C,EAAA36C,SACG+M,IAAA4tC,EAAAiH,eACH,OAAA7qC,EAAA/W,IACA+W,EAAA/W,IAAA26C,EAAAiH,aAEA7qC,EAAA/W,IAAAC,KAAAD,IAAA+W,EAAA/W,IAAA26C,EAAAiH,oBAIA70C,IAAA4tC,EAAAz6C,IACA6W,EAAA7W,IAAAy6C,EAAAz6C,SACG6M,IAAA4tC,EAAAmH,eACH,OAAA/qC,EAAA7W,IACA6W,EAAA7W,IAAAy6C,EAAAmH,aAEA/qC,EAAA7W,IAAAD,KAAAC,IAAA6W,EAAA7W,IAAAy6C,EAAAmH,eAIAH,IAAAE,GAKA9qC,EAAA/W,KAAA+W,EAAA7W,MACAyhD,EACA5qC,EAAA7W,IAAA6W,EAAA/W,IAAA,EAEA+W,EAAA/W,IAAA+W,EAAA7W,IAAA,GAKA6W,EAAA/W,MAAA+W,EAAA7W,MACA6W,EAAA7W,MAEAy6C,EAAAviB,aACArhB,EAAA/W,QAKA+hD,aAAA,WACA,IAIAzE,EAHA3C,EADAztC,KACAiJ,QAAAua,MACAsxB,EAAArH,EAAAqH,SACAzE,EAAA5C,EAAA4C,cAcA,OAXAyE,EACA1E,EAAAr9C,KAAAgiD,KAPA/0C,KAOAhN,IAAA8hD,GAAA/hD,KAAAmB,MAPA8L,KAOAlN,IAAAgiD,GAAA,GAEA1E,EATApwC,KASAg1C,oBACA3E,KAAA,IAGAA,IACAD,EAAAr9C,KAAAD,IAAAu9C,EAAAD,IAGAA,GAGA4E,kBAAA,WACA,OAAArtC,OAAA8lB,mBAGAwnB,yBAAA9tC,GAEA0lC,WAAA,WACA,IAAAhjC,EAAA7J,KACAmnB,EAAAtd,EAAAZ,QACAwkC,EAAAtmB,EAAA3D,MAMA4sB,EAAAvmC,EAAAgrC,eAGAK,EAAA,CACA9E,SAHAA,EAAAr9C,KAAAC,IAAA,EAAAo9C,GAIAt9C,IAAA26C,EAAA36C,IACAE,IAAAy6C,EAAAz6C,IACAmiD,UAAA1H,EAAA0H,UACAL,SAAA5iC,GAAAtK,eAAA6lC,EAAA2H,cAAA3H,EAAAqH,WAEAtxB,EAAA3Z,EAAA2Z,MAjMA,SAAA6xB,EAAAC,GACA,IAeAC,EAAAC,EAAAC,EAAAC,EAfAlyB,EAAA,GAMAsxB,EAAAO,EAAAP,SACAa,EAAAb,GAAA,EACAc,EAAAP,EAAAjF,SAAA,EACAt9C,EAAAuiD,EAAAviD,IACAE,EAAAqiD,EAAAriD,IACAmiD,EAAAE,EAAAF,UACAU,EAAAP,EAAAxiD,IACAgjD,EAAAR,EAAAtiD,IACA+iD,EAAA7jC,GAAA8jC,SAAAF,EAAAD,GAAAD,EAAAD,KAKA,GAAAI,EAdA,OAcA1uC,GAAAvU,IAAAuU,GAAArU,GACA,OAAA6iD,EAAAC,IAGAJ,EAAA3iD,KAAAgiD,KAAAe,EAAAC,GAAAhjD,KAAAmB,MAAA2hD,EAAAE,IACAH,IAEAG,EAAA7jC,GAAA8jC,QAAAN,EAAAK,EAAAH,EAAAD,MAGAb,GAAAztC,GAAA8tC,GAEAI,EAAAxiD,KAAAQ,IAAA,GAAA2e,GAAA+jC,eAAAF,KAGAR,EAAAxiD,KAAAQ,IAAA,GAAA4hD,GACAY,EAAAhjD,KAAAgiD,KAAAgB,EAAAR,MAGAC,EAAAziD,KAAAmB,MAAA2hD,EAAAE,KACAN,EAAA1iD,KAAAgiD,KAAAe,EAAAC,KAGAjB,KAEAztC,GAAAvU,IAAAof,GAAAgkC,YAAApjD,EAAAijD,IAAA,OACAP,EAAA1iD,IAEAuU,GAAArU,IAAAkf,GAAAgkC,YAAAljD,EAAA+iD,IAAA,OACAN,EAAAziD,IAIA0iD,GAAAD,EAAAD,GAAAO,EAGAL,EADAxjC,GAAAikC,aAAAT,EAAA3iD,KAAAgN,MAAA21C,GAAAK,EAAA,KACAhjD,KAAAgN,MAAA21C,GAEA3iD,KAAAgiD,KAAAW,GAGAF,EAAAziD,KAAAgN,MAAAy1C,EAAAD,KACAE,EAAA1iD,KAAAgN,MAAA01C,EAAAF,KACA/xB,EAAAtO,KAAA7N,GAAAvU,GAAA0iD,EAAA1iD,GACA,QAAAo0B,EAAA,EAAgBA,EAAAwuB,IAAexuB,EAC/B1D,EAAAtO,KAAAniB,KAAAgN,OAAAy1C,EAAAtuB,EAAA6uB,GAAAR,MAIA,OAFA/xB,EAAAtO,KAAA7N,GAAArU,GAAAyiD,EAAAziD,GAEAwwB,EA4HA4yB,CAAAlB,EAAArrC,GAEAA,EAAAorC,2BAIAprC,EAAA7W,IAAAkf,GAAAlf,IAAAwwB,GACA3Z,EAAA/W,IAAAof,GAAApf,IAAA0wB,GAEAiqB,EAAAplC,SACAmb,EAAAnb,UAEAwB,EAAAmJ,MAAAnJ,EAAA7W,IACA6W,EAAAqZ,IAAArZ,EAAA/W,MAEA+W,EAAAmJ,MAAAnJ,EAAA/W,IACA+W,EAAAqZ,IAAArZ,EAAA7W,MAIAg6C,qBAAA,WACA,IAAAnjC,EAAA7J,KACA6J,EAAAwsC,eAAAxsC,EAAA2Z,MAAAlkB,QACAuK,EAAAuoC,cAAAvoC,EAAA2Z,MAAApZ,QAAA,GAEAqhC,GAAApsC,UAAA2tC,qBAAAztC,KAAAsK,MAIAysC,GAAA,CACAxxB,SAAA,OACAtB,MAAA,CACAzb,SAAAqhC,GAAAC,WAAA1+B,SAIA4rC,GAAAnC,GAAA3qC,OAAA,CACAijC,oBAAA,WACA,IAAA7iC,EAAA7J,KACAmnB,EAAAtd,EAAAZ,QACAmE,EAAAvD,EAAAuD,MACA6J,EAAA7J,EAAA6J,KACAC,EAAAD,EAAAC,SACAgL,EAAArY,EAAAqY,eAIA,SAAAs0B,EAAAhgC,GACA,OAAA0L,EAAA1L,EAAAI,UAAA/M,EAAA7C,GAAAwP,EAAAO,UAAAlN,EAAA7C,GAIA6C,EAAA/W,IAAA,KACA+W,EAAA7W,IAAA,KAEA,IAAAyjD,EAAAtvB,EAAAvE,QAeA,QAdA/iB,IAAA42C,GACAvkC,GAAA/J,KAAA+O,EAAA,SAAAR,EAAAR,GACA,IAAAugC,EAAA,CAIA,IAAAjgC,EAAApJ,EAAA+J,eAAAjB,GACA9I,EAAA0V,iBAAA5M,IAAAsgC,EAAAhgC,SACA3W,IAAA2W,EAAA6K,QACAo1B,GAAA,MAKAtvB,EAAAvE,SAAA6zB,EAAA,CACA,IAAAC,EAAA,GAEAxkC,GAAA/J,KAAA+O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAApJ,EAAA+J,eAAAjB,GACAnX,EAAA,CACAyX,EAAAxQ,UAEAnG,IAAAsnB,EAAAvE,cAAA/iB,IAAA2W,EAAA6K,MAAAnL,EAAA,GACAM,EAAA6K,OACA6E,KAAA,UAEArmB,IAAA62C,EAAA33C,KACA23C,EAAA33C,GAAA,CACA43C,eAAA,GACAC,eAAA,KAKA,IAAAD,EAAAD,EAAA33C,GAAA43C,eACAC,EAAAF,EAAA33C,GAAA63C,eAEAxpC,EAAA0V,iBAAA5M,IAAAsgC,EAAAhgC,IACAtE,GAAA/J,KAAAuO,EAAAO,KAAA,SAAAs4B,EAAA1oC,GACA,IAAA7D,GAAA6G,EAAAia,cAAAyrB,GACAjtC,MAAAU,IAAAwT,EAAAS,KAAApQ,GAAA2L,SAIAmkC,EAAA9vC,GAAA8vC,EAAA9vC,IAAA,EACA+vC,EAAA/vC,GAAA+vC,EAAA/vC,IAAA,EAEAsgB,EAAA0vB,eACAF,EAAA9vC,GAAA,IACO7D,EAAA,EACP4zC,EAAA/vC,IAAA7D,EAEA2zC,EAAA9vC,IAAA7D,OAMAkP,GAAA/J,KAAAuuC,EAAA,SAAAI,GACA,IAAA12C,EAAA02C,EAAAH,eAAAnzC,OAAAszC,EAAAF,gBACAG,EAAA7kC,GAAApf,IAAAsN,GACA42C,EAAA9kC,GAAAlf,IAAAoN,GACAyJ,EAAA/W,IAAA,OAAA+W,EAAA/W,IAAAikD,EAAAhkD,KAAAD,IAAA+W,EAAA/W,IAAAikD,GACAltC,EAAA7W,IAAA,OAAA6W,EAAA7W,IAAAgkD,EAAAjkD,KAAAC,IAAA6W,EAAA7W,IAAAgkD,UAIA9kC,GAAA/J,KAAA+O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAApJ,EAAA+J,eAAAjB,GACA9I,EAAA0V,iBAAA5M,IAAAsgC,EAAAhgC,IACAtE,GAAA/J,KAAAuO,EAAAO,KAAA,SAAAs4B,EAAA1oC,GACA,IAAA7D,GAAA6G,EAAAia,cAAAyrB,GACAjtC,MAAAU,IAAAwT,EAAAS,KAAApQ,GAAA2L,SAIA,OAAA3I,EAAA/W,IACA+W,EAAA/W,IAAAkQ,EACOA,EAAA6G,EAAA/W,MACP+W,EAAA/W,IAAAkQ,GAGA,OAAA6G,EAAA7W,IACA6W,EAAA7W,IAAAgQ,EACOA,EAAA6G,EAAA7W,MACP6W,EAAA7W,IAAAgQ,QAOA6G,EAAA/W,IAAA4U,SAAAmC,EAAA/W,OAAAwP,MAAAuH,EAAA/W,KAAA+W,EAAA/W,IAxGA,EAyGA+W,EAAA7W,IAAA0U,SAAAmC,EAAA7W,OAAAsP,MAAAuH,EAAA7W,KAAA6W,EAAA7W,IAxGA,EA2GAgN,KAAAq0C,0BAIAW,kBAAA,WACA,IACArH,EAEA,OAHA3tC,KAGAkiB,eACAnvB,KAAAgiD,KAJA/0C,KAIAuN,MAAA,KAEAogC,EAAAz7B,GAAAjJ,QAAAoI,WANArR,KAMAiJ,QAAAua,OACAzwB,KAAAgiD,KAPA/0C,KAOAwN,OAAAmgC,EAAA/7B,cAIAqjC,yBAAA,WACAj1C,KAAAkiB,gBAEAliB,KAAAwjB,MAAAnb,WAIA23B,iBAAA,SAAAn5B,EAAAqP,GACA,OAAAlW,KAAA8jB,cAAA9jB,KAAAoN,MAAA6J,KAAAC,SAAAhB,GAAAe,KAAApQ,KAIAuc,iBAAA,SAAApgB,GAGA,IAAA6G,EAAA7J,KACAgT,EAAAnJ,EAAAmJ,MAEAmX,GAAAtgB,EAAAia,cAAA9gB,GAEAihB,EAAApa,EAAAqZ,IAAAlQ,EAOA,OALAnJ,EAAAqY,eACArY,EAAA8D,KAAA9D,EAAA0D,MAAA0W,GAAAkG,EAAAnX,GAEAnJ,EAAAiE,OAAAjE,EAAA2D,OAAAyW,GAAAkG,EAAAnX,IAKAw8B,iBAAA,SAAAE,GACA,IAAA7lC,EAAA7J,KACAkiB,EAAArY,EAAAqY,eACA+0B,EAAA/0B,EAAArY,EAAA0D,MAAA1D,EAAA2D,OACAyT,GAAAiB,EAAAwtB,EAAA7lC,EAAA8D,KAAA9D,EAAAiE,OAAA4hC,GAAAuH,EACA,OAAAptC,EAAAmJ,OAAAnJ,EAAAqZ,IAAArZ,EAAAmJ,OAAAiO,GAGAyC,gBAAA,SAAA7c,GACA,OAAA7G,KAAAojB,iBAAApjB,KAAAq2C,eAAAxvC,OAKAqwC,GAAAZ,GACAC,GAAApC,UAAA+C,GAEA,IAAAC,GAAAjlC,GAAAtK,eAgDAwvC,GAAA,CACAtyB,SAAA,OAGAtB,MAAA,CACAzb,SAAAqhC,GAAAC,WAAAU,cAKA,SAAAsN,GAAAr0C,EAAA6E,GACA,OAAAqK,GAAAxK,SAAA1E,OAAA,EAAAA,EAAA6E,EAGA,IAAAyvC,GAAA7L,GAAAhiC,OAAA,CACAijC,oBAAA,WACA,IAAA7iC,EAAA7J,KACAmnB,EAAAtd,EAAAZ,QACAmE,EAAAvD,EAAAuD,MACA6J,EAAA7J,EAAA6J,KACAC,EAAAD,EAAAC,SACAgL,EAAArY,EAAAqY,eACA,SAAAs0B,EAAAhgC,GACA,OAAA0L,EAAA1L,EAAAI,UAAA/M,EAAA7C,GAAAwP,EAAAO,UAAAlN,EAAA7C,GAIA6C,EAAA/W,IAAA,KACA+W,EAAA7W,IAAA,KACA6W,EAAA0tC,WAAA,KAEA,IAAAd,EAAAtvB,EAAAvE,QAeA,QAdA/iB,IAAA42C,GACAvkC,GAAA/J,KAAA+O,EAAA,SAAAR,EAAAR,GACA,IAAAugC,EAAA,CAIA,IAAAjgC,EAAApJ,EAAA+J,eAAAjB,GACA9I,EAAA0V,iBAAA5M,IAAAsgC,EAAAhgC,SACA3W,IAAA2W,EAAA6K,QACAo1B,GAAA,MAKAtvB,EAAAvE,SAAA6zB,EAAA,CACA,IAAAC,EAAA,GAEAxkC,GAAA/J,KAAA+O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAApJ,EAAA+J,eAAAjB,GACAnX,EAAA,CACAyX,EAAAxQ,UAEAnG,IAAAsnB,EAAAvE,cAAA/iB,IAAA2W,EAAA6K,MAAAnL,EAAA,GACAM,EAAA6K,OACA6E,KAAA,KAEA9Y,EAAA0V,iBAAA5M,IAAAsgC,EAAAhgC,UACA3W,IAAA62C,EAAA33C,KACA23C,EAAA33C,GAAA,IAGAmT,GAAA/J,KAAAuO,EAAAO,KAAA,SAAAs4B,EAAA1oC,GACA,IAAAzG,EAAAs2C,EAAA33C,GACAiE,GAAA6G,EAAAia,cAAAyrB,GAEAjtC,MAAAU,IAAAwT,EAAAS,KAAApQ,GAAA2L,QAAAxP,EAAA,IAGA5C,EAAAyG,GAAAzG,EAAAyG,IAAA,EACAzG,EAAAyG,IAAA7D,QAKAkP,GAAA/J,KAAAuuC,EAAA,SAAAI,GACA,GAAAA,EAAAh3C,OAAA,GACA,IAAAi3C,EAAA7kC,GAAApf,IAAAgkD,GACAE,EAAA9kC,GAAAlf,IAAA8jD,GACAjtC,EAAA/W,IAAA,OAAA+W,EAAA/W,IAAAikD,EAAAhkD,KAAAD,IAAA+W,EAAA/W,IAAAikD,GACAltC,EAAA7W,IAAA,OAAA6W,EAAA7W,IAAAgkD,EAAAjkD,KAAAC,IAAA6W,EAAA7W,IAAAgkD,WAKA9kC,GAAA/J,KAAA+O,EAAA,SAAAR,EAAAR,GACA,IAAAM,EAAApJ,EAAA+J,eAAAjB,GACA9I,EAAA0V,iBAAA5M,IAAAsgC,EAAAhgC,IACAtE,GAAA/J,KAAAuO,EAAAO,KAAA,SAAAs4B,EAAA1oC,GACA,IAAA7D,GAAA6G,EAAAia,cAAAyrB,GAEAjtC,MAAAU,IAAAwT,EAAAS,KAAApQ,GAAA2L,QAAAxP,EAAA,IAIA,OAAA6G,EAAA/W,IACA+W,EAAA/W,IAAAkQ,EACOA,EAAA6G,EAAA/W,MACP+W,EAAA/W,IAAAkQ,GAGA,OAAA6G,EAAA7W,IACA6W,EAAA7W,IAAAgQ,EACOA,EAAA6G,EAAA7W,MACP6W,EAAA7W,IAAAgQ,GAGA,IAAAA,IAAA,OAAA6G,EAAA0tC,YAAAv0C,EAAA6G,EAAA0tC,cACA1tC,EAAA0tC,WAAAv0C,QAQAhD,KAAAq0C,0BAGAA,uBAAA,WACA,IAAAxqC,EAAA7J,KACAytC,EAAA5jC,EAAAZ,QAAAua,MAIA3Z,EAAA/W,IAAAukD,GAAA5J,EAAA36C,IAAA+W,EAAA/W,KACA+W,EAAA7W,IAAAqkD,GAAA5J,EAAAz6C,IAAA6W,EAAA7W,KAEA6W,EAAA/W,MAAA+W,EAAA7W,MACA,IAAA6W,EAAA/W,KAAA,OAAA+W,EAAA/W,KACA+W,EAAA/W,IAAAC,KAAAQ,IAAA,GAAAR,KAAAmB,MAAAge,GAAAs3B,MAAA3/B,EAAA/W,MAAA,GACA+W,EAAA7W,IAAAD,KAAAQ,IAAA,GAAAR,KAAAmB,MAAAge,GAAAs3B,MAAA3/B,EAAA7W,MAAA,KAEA6W,EAAA/W,IAXA,EAYA+W,EAAA7W,IAXA,KAcA,OAAA6W,EAAA/W,MACA+W,EAAA/W,IAAAC,KAAAQ,IAAA,GAAAR,KAAAmB,MAAAge,GAAAs3B,MAAA3/B,EAAA7W,MAAA,IAEA,OAAA6W,EAAA7W,MACA6W,EAAA7W,IAAA,IAAA6W,EAAA/W,IACAC,KAAAQ,IAAA,GAAAR,KAAAmB,MAAAge,GAAAs3B,MAAA3/B,EAAA/W,MAAA,GAnBA,IAsBA,OAAA+W,EAAA0tC,aACA1tC,EAAA/W,IAAA,EACA+W,EAAA0tC,WAAA1tC,EAAA/W,IACI+W,EAAA7W,IAAA,EACJ6W,EAAA0tC,WAAAxkD,KAAAQ,IAAA,GAAAR,KAAAmB,MAAAge,GAAAs3B,MAAA3/B,EAAA7W,OAEA6W,EAAA0tC,WA7BA,IAkCA1K,WAAA,WACA,IAAAhjC,EAAA7J,KACAytC,EAAA5jC,EAAAZ,QAAAua,MACAnb,GAAAwB,EAAAqY,eAEAmzB,EAAA,CACAviD,IAAAukD,GAAA5J,EAAA36C,KACAE,IAAAqkD,GAAA5J,EAAAz6C,MAEAwwB,EAAA3Z,EAAA2Z,MA9MA,SAAA6xB,EAAAC,GACA,IAMAkC,EAAAC,EANAj0B,EAAA,GAEAk0B,EAAAP,GAAA9B,EAAAviD,IAAAC,KAAAQ,IAAA,GAAAR,KAAAmB,MAAAge,GAAAs3B,MAAA8L,EAAAxiD,QAEA6kD,EAAA5kD,KAAAmB,MAAAge,GAAAs3B,MAAA8L,EAAAtiD,MACA4kD,EAAA7kD,KAAAgiD,KAAAO,EAAAtiD,IAAAD,KAAAQ,IAAA,GAAAokD,IAGA,IAAAD,GACAF,EAAAzkD,KAAAmB,MAAAge,GAAAs3B,MAAA8L,EAAAiC,aACAE,EAAA1kD,KAAAmB,MAAAohD,EAAAiC,WAAAxkD,KAAAQ,IAAA,GAAAikD,IAEAh0B,EAAAtO,KAAAwiC,GACAA,EAAAD,EAAA1kD,KAAAQ,IAAA,GAAAikD,KAEAA,EAAAzkD,KAAAmB,MAAAge,GAAAs3B,MAAAkO,IACAD,EAAA1kD,KAAAmB,MAAAwjD,EAAA3kD,KAAAQ,IAAA,GAAAikD,KAEA,IAAArC,EAAAqC,EAAA,EAAAzkD,KAAAQ,IAAA,GAAAR,KAAAorB,IAAAq5B,IAAA,EAEA,GACAh0B,EAAAtO,KAAAwiC,GAGA,MADAD,IAEAA,EAAA,EAEAtC,IADAqC,GACA,IAAArC,GAGAuC,EAAA3kD,KAAAgN,MAAA03C,EAAA1kD,KAAAQ,IAAA,GAAAikD,GAAArC,WACEqC,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,GAEF,IAAAC,EAAAV,GAAA9B,EAAAriD,IAAA0kD,GAGA,OAFAl0B,EAAAtO,KAAA2iC,GAEAr0B,EAyKAs0B,CAAAzC,EAAAxrC,GAIAA,EAAA7W,IAAAkf,GAAAlf,IAAAwwB,GACA3Z,EAAA/W,IAAAof,GAAApf,IAAA0wB,GAEAiqB,EAAAplC,SACAA,KACAwB,EAAAmJ,MAAAnJ,EAAA7W,IACA6W,EAAAqZ,IAAArZ,EAAA/W,MAEA+W,EAAAmJ,MAAAnJ,EAAA/W,IACA+W,EAAAqZ,IAAArZ,EAAA7W,KAEAqV,GACAmb,EAAAnb,WAIA2kC,qBAAA,WACAhtC,KAAA+3C,WAAA/3C,KAAAwjB,MAAAlkB,QAEAmsC,GAAApsC,UAAA2tC,qBAAAztC,KAAAS,OAIAggC,iBAAA,SAAAn5B,EAAAqP,GACA,OAAAlW,KAAA8jB,cAAA9jB,KAAAoN,MAAA6J,KAAAC,SAAAhB,GAAAe,KAAApQ,KAGA6c,gBAAA,SAAA7c,GACA,OAAA7G,KAAAojB,iBAAApjB,KAAA+3C,WAAAlxC,KASAmxC,mBAAA,SAAAh1C,GACA,IAAAw0C,EAAAzkD,KAAAmB,MAAAge,GAAAs3B,MAAAxmC,IACAy0C,EAAA1kD,KAAAmB,MAAA8O,EAAAjQ,KAAAQ,IAAA,GAAAikD,IAEA,OAAAC,EAAA1kD,KAAAQ,IAAA,GAAAikD,IAGAp0B,iBAAA,SAAApgB,GACA,IAMAi0C,EAAAvH,EAAA18B,EAAAkQ,EAAAqxB,EANA1qC,EAAA7J,KACAytC,EAAA5jC,EAAAZ,QAAAua,MACAnb,EAAAolC,EAAAplC,QACAmhC,EAAAt3B,GAAAs3B,MACAyO,EAAApuC,EAAAmuC,mBAAAnuC,EAAA0tC,YACAt2B,EAAA,EAgCA,OA7BAje,GAAA6G,EAAAia,cAAA9gB,GACAqF,GACA2K,EAAAnJ,EAAAqZ,IACAA,EAAArZ,EAAAmJ,MACAuhC,GAAA,IAEAvhC,EAAAnJ,EAAAmJ,MACAkQ,EAAArZ,EAAAqZ,IACAqxB,EAAA,GAEA1qC,EAAAqY,gBACA+0B,EAAAptC,EAAA0D,MACAmiC,EAAArnC,EAAAwB,EAAAgE,MAAAhE,EAAA8D,OAEAspC,EAAAptC,EAAA2D,OACA+mC,IAAA,EACA7E,EAAArnC,EAAAwB,EAAA+D,IAAA/D,EAAAiE,QAEA9K,IAAAgQ,IACA,IAAAA,IACAiO,EAAAk2B,GAAA1J,EAAAj8B,SAAAR,GAAAO,OAAAX,iBACAqmC,GAAAh2B,EACAjO,EAAAilC,GAEA,IAAAj1C,IACAie,GAAAg2B,GAAAzN,EAAAtmB,GAAAsmB,EAAAx2B,KAAAw2B,EAAAxmC,GAAAwmC,EAAAx2B,KAEA08B,GAAA6E,EAAAtzB,GAEAyuB,GAGAF,iBAAA,SAAAE,GACA,IAKAuH,EAAAjkC,EAAAkQ,EAAAlgB,EALA6G,EAAA7J,KACAytC,EAAA5jC,EAAAZ,QAAAua,MACAnb,EAAAolC,EAAAplC,QACAmhC,EAAAt3B,GAAAs3B,MACAyO,EAAApuC,EAAAmuC,mBAAAnuC,EAAA0tC,YAiBA,GAdAlvC,GACA2K,EAAAnJ,EAAAqZ,IACAA,EAAArZ,EAAAmJ,QAEAA,EAAAnJ,EAAAmJ,MACAkQ,EAAArZ,EAAAqZ,KAEArZ,EAAAqY,gBACA+0B,EAAAptC,EAAA0D,MACAvK,EAAAqF,EAAAwB,EAAAgE,MAAA6hC,IAAA7lC,EAAA8D,OAEAspC,EAAAptC,EAAA2D,OACAxK,EAAAqF,EAAAqnC,EAAA7lC,EAAA+D,IAAA/D,EAAAiE,OAAA4hC,GAEA1sC,IAAAgQ,EAAA,CACA,OAAAA,EAAA,CACA,IAAAiO,EAAAk2B,GAAA1J,EAAAj8B,SAAAR,GAAAO,OAAAX,iBACA5N,GAAAie,EACAg2B,GAAAh2B,EACAjO,EAAAilC,EAEAj1C,GAAAwmC,EAAAtmB,GAAAsmB,EAAAx2B,GACAhQ,GAAAi0C,EACAj0C,EAAAjQ,KAAAQ,IAAA,GAAAi2C,EAAAx2B,GAAAhQ,GAEA,OAAAA,KAKAk1C,GAAAd,GACAE,GAAAnD,UAAA+D,GAEA,IAAAC,GAAAjmC,GAAAtK,eACAwwC,GAAAlmC,GAAApK,sBACAuwC,GAAAnmC,GAAAjJ,QAAA8I,QAEAumC,GAAA,CACAvtB,SAAA,EAGAwtB,SAAA,EACAzzB,SAAA,YAEAgG,WAAA,CACAC,SAAA,EACAuf,MAAA,qBACA9tB,UAAA,EACAM,WAAA,GACAC,iBAAA,GAGAmE,UAAA,CACA8J,UAAA,GAIAxH,MAAA,CAEAg1B,mBAAA,EAGAC,cAAA,yBAGAC,iBAAA,EAGAC,iBAAA,EAEA5wC,SAAAqhC,GAAAC,WAAA1+B,QAGAsgB,YAAA,CAEAF,SAAA,EAGAvZ,SAAA,GAGAzJ,SAAA,SAAA8Z,GACA,OAAAA,KAKA,SAAA+2B,GAAAv2C,GACA,IAAA8kB,EAAA9kB,EAAA4G,QACA,OAAAke,EAAA2D,WAAAC,SAAA5D,EAAA8D,YAAAF,QAAA1oB,EAAA+K,MAAA6J,KAAA6K,OAAAhiB,OAAA,EAGA,SAAA+4C,GAAA1xB,GACA,IAAAsmB,EAAAtmB,EAAA3D,MAEA,OAAAiqB,EAAA1iB,SAAA5D,EAAA4D,QACAotB,GAAA1K,EAAAj8B,SAAAR,GAAAO,OAAAX,iBAAA,EAAA68B,EAAAiL,iBAEA,EAiBA,SAAAI,GAAAz9B,EAAAyc,EAAAtpB,EAAA1b,EAAAE,GACA,OAAAqoB,IAAAvoB,GAAAuoB,IAAAroB,EACA,CACAggB,MAAA8kB,EAAAtpB,EAAA,EACA0U,IAAA4U,EAAAtpB,EAAA,GAEE6M,EAAAvoB,GAAAuoB,EAAAroB,EACF,CACAggB,MAAA8kB,EAAAtpB,EACA0U,IAAA4U,GAIA,CACA9kB,MAAA8kB,EACA5U,IAAA4U,EAAAtpB,GAuFA,SAAAuqC,GAAA19B,GACA,WAAAA,GAAA,MAAAA,EACA,SACEA,EAAA,IACF,OAGA,QAGA,SAAAgnB,GAAAh1B,EAAA4Y,EAAAnB,EAAAlT,GACA,IACA5d,EAAA2U,EADAlV,EAAAqxB,EAAArxB,EAAAme,EAAA,EAGA,GAAAM,GAAA5K,QAAA2e,GACA,IAAAjyB,EAAA,EAAA2U,EAAAsd,EAAAnmB,OAAiC9L,EAAA2U,IAAU3U,EAC3CqZ,EAAAg1B,SAAApc,EAAAjyB,GAAA8wB,EAAAtxB,EAAAC,GACAA,GAAAme,OAGAvE,EAAAg1B,SAAApc,EAAAnB,EAAAtxB,EAAAC,GAIA,SAAAulD,GAAA39B,EAAA49B,EAAAn0B,GACA,KAAAzJ,GAAA,MAAAA,EACAyJ,EAAArxB,GAAAwlD,EAAA9oD,EAAA,GACEkrB,EAAA,KAAAA,EAAA,MACFyJ,EAAArxB,GAAAwlD,EAAA9oD,GAiGA,SAAA+oD,GAAAC,GACA,OAAAjnC,GAAAuB,SAAA0lC,KAAA,EAGA,IAAAC,GAAAhF,GAAA3qC,OAAA,CACA8iC,cAAA,WACA,IAAA1iC,EAAA7J,KAGA6J,EAAA0D,MAAA1D,EAAAmiC,SACAniC,EAAA2D,OAAA3D,EAAAoiC,UACApiC,EAAA8hC,WAAAkN,GAAAhvC,EAAAZ,SAAA,EACAY,EAAA+hB,QAAA74B,KAAAmB,MAAA2V,EAAA0D,MAAA,GACA1D,EAAAgiB,QAAA94B,KAAAmB,OAAA2V,EAAA2D,OAAA3D,EAAA8hC,YAAA,GACA9hC,EAAAwvC,YAAAtmD,KAAAD,IAAA+W,EAAA2D,OAAA3D,EAAA8hC,WAAA9hC,EAAA0D,OAAA,GAGAm/B,oBAAA,WACA,IAAA7iC,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAta,EAAA6U,OAAA8lB,kBACAz6B,EAAA2U,OAAA2xC,kBAEApnC,GAAA/J,KAAAiF,EAAA6J,KAAAC,SAAA,SAAAR,EAAAR,GACA,GAAA9I,EAAA0V,iBAAA5M,GAAA,CACA,IAAAM,EAAApJ,EAAA+J,eAAAjB,GAEAhE,GAAA/J,KAAAuO,EAAAO,KAAA,SAAAs4B,EAAA1oC,GACA,IAAA7D,GAAA6G,EAAAia,cAAAyrB,GACAjtC,MAAAU,IAAAwT,EAAAS,KAAApQ,GAAA2L,SAIA1f,EAAAC,KAAAD,IAAAkQ,EAAAlQ,GACAE,EAAAD,KAAAC,IAAAgQ,EAAAhQ,SAKA6W,EAAA/W,QAAA6U,OAAA8lB,kBAAA,EAAA36B,EACA+W,EAAA7W,QAAA2U,OAAA2xC,kBAAA,EAAAtmD,EAGA6W,EAAAwqC,0BAIAW,kBAAA,WACA,OAAAjiD,KAAAgiD,KAAA/0C,KAAAq5C,YAAAR,GAAA74C,KAAAiJ,WAGA+jC,qBAAA,WACA,IAAAnjC,EAAA7J,KAEAo0C,GAAA/0C,UAAA2tC,qBAAAztC,KAAAsK,GAGAA,EAAAohB,YAAAphB,EAAAuD,MAAA6J,KAAA6K,OAAAhZ,IAAAe,EAAAZ,QAAAgiB,YAAAljB,SAAA8B,IAGAm2B,iBAAA,SAAAn5B,EAAAqP,GACA,OAAAlW,KAAA8jB,cAAA9jB,KAAAoN,MAAA6J,KAAAC,SAAAhB,GAAAe,KAAApQ,KAGAymC,IAAA,WACA,IACAnmB,EADAnnB,KACAiJ,QAEAke,EAAA4D,SAAA5D,EAAA8D,YAAAF,QAjRA,SAAA1oB,GA4BA,IAWArO,EAAAilD,EAAA3sB,EAXAitB,EAAArnC,GAAAjJ,QAAAoI,WAAAhP,EAAA4G,QAAAgiB,aAIAuuB,EAAA,CACAnpD,EAAA,EACAsC,EAAA0P,EAAAkL,MACAjZ,EAAA,EACAzB,EAAAwP,EAAAmL,OAAAnL,EAAAspC,YAEA8N,EAAA,GAGAp3C,EAAAgL,IAAAoE,KAAA8nC,EAAAv4C,OACAqB,EAAAq3C,iBAAA,GAEA,IAhFArsC,EAAAuE,EAAAiQ,EAgFA83B,EAAAf,GAAAv2C,GACA,IAAArO,EAAA,EAAYA,EAAA2lD,EAAgB3lD,IAAA,CAC5Bs4B,EAAAjqB,EAAAu3C,iBAAA5lD,EAAAqO,EAAAg3C,YAAA,GAlFAhsC,EAmFAhL,EAAAgL,IAnFAuE,EAmFA2nC,EAAA3nC,WAnFAiQ,EAmFAxf,EAAA4oB,YAAAj3B,IAAA,GAAAilD,EAlFA/mC,GAAA5K,QAAAua,GACA,CACA3uB,EAAAgf,GAAAm4B,YAAAh9B,IAAAoE,KAAAoQ,GACA1xB,EAAA0xB,EAAA/hB,OAAA8R,GAIA,CACA1e,EAAAma,EAAAszB,YAAA9e,GAAAtU,MACApd,EAAAyhB,GA0EAvP,EAAAq3C,iBAAA1lD,GAAAilD,EAGA,IAAAhL,EAAA5rC,EAAAw3C,cAAA7lD,GACAqnB,EAAAnJ,GAAA4nC,UAAA7L,GAAA,IACA8L,EAAAjB,GAAAz9B,EAAAiR,EAAA94B,EAAAylD,EAAA/lD,EAAA,OACA8mD,EAAAlB,GAAAz9B,EAAAiR,EAAA74B,EAAAwlD,EAAA9oD,EAAA,QAEA4pD,EAAA/mC,MAAAwmC,EAAAnpD,IACAmpD,EAAAnpD,EAAA0pD,EAAA/mC,MACAymC,EAAAppD,EAAA49C,GAGA8L,EAAA72B,IAAAs2B,EAAA7mD,IACA6mD,EAAA7mD,EAAAonD,EAAA72B,IACAu2B,EAAA9mD,EAAAs7C,GAGA+L,EAAAhnC,MAAAwmC,EAAAllD,IACAklD,EAAAllD,EAAA0lD,EAAAhnC,MACAymC,EAAAnlD,EAAA25C,GAGA+L,EAAA92B,IAAAs2B,EAAA3mD,IACA2mD,EAAA3mD,EAAAmnD,EAAA92B,IACAu2B,EAAA5mD,EAAAo7C,GAIA5rC,EAAA43C,cAAA53C,EAAAg3C,YAAAG,EAAAC,GAqMAS,CAJAl6C,WAMAm6C,eAAA,UAQAF,cAAA,SAAAG,EAAAZ,EAAAC,GACA,IAAA5vC,EAAA7J,KACAq6C,EAAAb,EAAAnpD,EAAA0C,KAAAyC,IAAAikD,EAAAppD,GACAiqD,EAAAvnD,KAAAC,IAAAwmD,EAAA7mD,EAAAkX,EAAA0D,MAAA,GAAAxa,KAAAyC,IAAAikD,EAAA9mD,GACA4nD,GAAAf,EAAAllD,EAAAvB,KAAAwC,IAAAkkD,EAAAnlD,GACAkmD,GAAAznD,KAAAC,IAAAwmD,EAAA3mD,GAAAgX,EAAA2D,OAAA3D,EAAA8hC,YAAA,GAAA54C,KAAAwC,IAAAkkD,EAAA5mD,GAEAwnD,EAAAnB,GAAAmB,GACAC,EAAApB,GAAAoB,GACAC,EAAArB,GAAAqB,GACAC,EAAAtB,GAAAsB,GAEA3wC,EAAAwvC,YAAAtmD,KAAAD,IACAC,KAAAmB,MAAAkmD,GAAAC,EAAAC,GAAA,GACAvnD,KAAAmB,MAAAkmD,GAAAG,EAAAC,GAAA,IACA3wC,EAAAswC,eAAAE,EAAAC,EAAAC,EAAAC,IAGAL,eAAA,SAAAM,EAAAC,EAAAC,EAAAC,GACA,IAAA/wC,EAAA7J,KACA66C,EAAAhxC,EAAA0D,MAAAmtC,EAAA7wC,EAAAwvC,YACAyB,EAAAL,EAAA5wC,EAAAwvC,YACA0B,EAAAJ,EAAA9wC,EAAAwvC,YACA2B,EAAAnxC,EAAA2D,OAAA3D,EAAA8hC,WAAAiP,EAAA/wC,EAAAwvC,YAEAxvC,EAAA+hB,QAAA74B,KAAAmB,OAAA4mD,EAAAD,GAAA,EAAAhxC,EAAA8D,MACA9D,EAAAgiB,QAAA94B,KAAAmB,OAAA6mD,EAAAC,GAAA,EAAAnxC,EAAA+D,IAAA/D,EAAA8hC,aAGAkO,cAAA,SAAAhzC,GACA,IAAAo0C,EAAA,EAAAloD,KAAAqC,GAAAwjD,GAAA54C,MACAub,EAAAvb,KAAAoN,MAAAnE,SAAAjJ,KAAAoN,MAAAnE,QAAAsS,WACAvb,KAAAoN,MAAAnE,QAAAsS,WACA,EAEA2/B,EAAA3/B,EAAAxoB,KAAAqC,GAAA,MAGA,OAAAyR,EAAAo0C,EAAAC,GAGAnvB,8BAAA,SAAA/oB,GACA,IAAA6G,EAAA7J,KAEA,UAAAgD,EACA,SAIA,IAAAm4C,EAAAtxC,EAAAwvC,aAAAxvC,EAAA7W,IAAA6W,EAAA/W,KACA,OAAA+W,EAAAZ,QAAAua,MAAAnb,SACAwB,EAAA7W,IAAAgQ,GAAAm4C,GAEAn4C,EAAA6G,EAAA/W,KAAAqoD,GAGAvB,iBAAA,SAAA/yC,EAAAu0C,GACA,IACAC,EADAr7C,KACA65C,cAAAhzC,GAAA9T,KAAAqC,GAAA,EACA,OACA5B,EAAAT,KAAAwC,IAAA8lD,GAAAD,EAHAp7C,KAGA4rB,QACAn4B,EAAAV,KAAAyC,IAAA6lD,GAAAD,EAJAp7C,KAIA6rB,UAIAU,yBAAA,SAAA1lB,EAAA7D,GACA,OAAAhD,KAAA45C,iBAAA/yC,EAAA7G,KAAA+rB,8BAAA/oB,KAGAs4C,gBAAA,WACA,IACAxoD,EADAkN,KACAlN,IACAE,EAFAgN,KAEAhN,IAEA,OAJAgN,KAIAusB,yBAAA,EAJAvsB,KAKAkrB,YAAA,EACAp4B,EAAA,GAAAE,EAAA,EAAAA,EACAF,EAAA,GAAAE,EAAA,EAAAF,EACA,IAGAomB,KAAA,WACA,IAAArP,EAAA7J,KACAmnB,EAAAtd,EAAAZ,QACAmlC,EAAAjnB,EAAAjG,UACAusB,EAAAtmB,EAAA3D,MAEA,GAAA2D,EAAA4D,QAAA,CACA,IAAA1d,EAAAxD,EAAAwD,IACAkO,EAAAvb,KAAA65C,cAAA,GACAlM,EAAAz7B,GAAAjJ,QAAAoI,WAAAo8B,IAEAtmB,EAAA2D,WAAAC,SAAA5D,EAAA8D,YAAAF,UAxQA,SAAA1oB,GACA,IAAAgL,EAAAhL,EAAAgL,IACA8Z,EAAA9kB,EAAA4G,QACAsyC,EAAAp0B,EAAA2D,WACAsjB,EAAAjnB,EAAAjG,UACAs6B,EAAAr0B,EAAA8D,YACAzO,EAAA27B,GAAAoD,EAAA/+B,UAAA4xB,EAAA5xB,WACAo1B,EAAAuG,GAAAoD,EAAAjR,MAAA8D,EAAA9D,OACAmR,EAAA5C,GAAA1xB,GAEA9Z,EAAAgC,OACAhC,EAAAmP,YACAnP,EAAAqP,YAAAk1B,EACAvkC,EAAAuQ,cACAvQ,EAAAuQ,YAAAy6B,GAAA,CAAAkD,EAAAz+B,WAAAsxB,EAAAtxB,WAAA,MACAzP,EAAAwQ,eAAAw6B,GAAA,CAAAkD,EAAAx+B,iBAAAqxB,EAAArxB,iBAAA,KAGA,IAAA2+B,EAAAr5C,EAAA0pB,8BAAA5E,EAAA3D,MAAAnb,QAAAhG,EAAAvP,IAAAuP,EAAArP,KAGAumD,EAAArnC,GAAAjJ,QAAAoI,WAAAmqC,GAEAnuC,EAAAoE,KAAA8nC,EAAAv4C,OACAqM,EAAA+0B,aAAA,SAEA,QAAApuC,EAAA4kD,GAAAv2C,GAAA,EAAuCrO,GAAA,EAAQA,IAAA,CAC/C,GAAAunD,EAAAxwB,SAAAvO,GAAAo1B,EAAA,CACA,IAAA+J,EAAAt5C,EAAAu3C,iBAAA5lD,EAAA0nD,GACAruC,EAAAsB,YACAtB,EAAAU,OAAA1L,EAAAupB,QAAAvpB,EAAAwpB,SACAxe,EAAAuB,OAAA+sC,EAAAnoD,EAAAmoD,EAAAloD,GACA4Z,EAAA0B,SAGA,GAAAysC,EAAAzwB,QAAA,CAEA,IAAA6wB,EAAA,IAAA5nD,EAAAynD,EAAA,IACAI,EAAAx5C,EAAAu3C,iBAAA5lD,EAAA0nD,EAAAE,EAAA,GAGAE,EAAA1D,GAAAoD,EAAAtK,UAAAl9C,EAAAgd,GAAAO,OAAAb,kBACArD,EAAAkP,UAAAu/B,EAEA,IAAA7N,EAAA5rC,EAAAw3C,cAAA7lD,GACAqnB,EAAAnJ,GAAA4nC,UAAA7L,GACA5gC,EAAA80B,UAAA4W,GAAA19B,GACA29B,GAAA39B,EAAAhZ,EAAAq3C,iBAAA1lD,GAAA6nD,GACAxZ,GAAAh1B,EAAAhL,EAAA4oB,YAAAj3B,IAAA,GAAA6nD,EAAAtC,EAAA3nC,aAGAvE,EAAAmC,UAsNAusC,CAAAlyC,GAGAqI,GAAA/J,KAAA0B,EAAA2Z,MAAA,SAAA3B,EAAAhb,GAEA,GAAAA,EAAA,GAAA4mC,EAAAplC,QAAA,CACA,IAAA2zC,EAAAnyC,EAAAkiB,8BAAAliB,EAAAwsC,eAAAxvC,IAOA,GAJAunC,EAAArjB,SAAA,IAAAlkB,GA5NA,SAAAxE,EAAA+rC,EAAA1gC,EAAA7G,GACA,IAKAylB,EALAjf,EAAAhL,EAAAgL,IACA2d,EAAAojB,EAAApjB,SACA2uB,EAAAf,GAAAv2C,GACAuvC,EAAAwG,GAAAhK,EAAA9D,MAAAzjC,EAAA,GACA2V,EAAA47B,GAAAhK,EAAA5xB,UAAA3V,EAAA,GAGA,IAAAmkB,GAAA2uB,IAAA/H,GAAAp1B,EAAA,CAaA,GATAnP,EAAAgC,OACAhC,EAAAqP,YAAAk1B,EACAvkC,EAAAmP,YACAnP,EAAAuQ,cACAvQ,EAAAuQ,YAAAwwB,EAAAtxB,YAAA,IACAzP,EAAAwQ,eAAAuwB,EAAArxB,kBAAA,GAGA1P,EAAAsB,YACAqc,EAEA3d,EAAAW,IAAA3L,EAAAupB,QAAAvpB,EAAAwpB,QAAAne,EAAA,IAAA3a,KAAAqC,QACE,CAEFk3B,EAAAjqB,EAAAu3C,iBAAA,EAAAlsC,GACAL,EAAAU,OAAAue,EAAA94B,EAAA84B,EAAA74B,GAEA,QAAAO,EAAA,EAAiBA,EAAA2lD,EAAgB3lD,IACjCs4B,EAAAjqB,EAAAu3C,iBAAA5lD,EAAA0Z,GACAL,EAAAuB,OAAA0d,EAAA94B,EAAA84B,EAAA74B,GAGA4Z,EAAAY,YACAZ,EAAA0B,SACA1B,EAAAmC,WAyLAysC,CAAApyC,EAAAukC,EAAA4N,EAAAn1C,GAGA4mC,EAAA1iB,QAAA,CACA,IAAAkmB,EAAAkH,GAAA1K,EAAAyD,UAAAlgC,GAAAO,OAAAb,kBAOA,GANArD,EAAAoE,KAAAk8B,EAAA3sC,OAEAqM,EAAAgC,OACAhC,EAAAylC,UAAAjpC,EAAA+hB,QAAA/hB,EAAAgiB,SACAxe,EAAA9H,OAAAgW,GAEAkyB,EAAA+K,kBAAA,CACA,IAAAzK,EAAA1gC,EAAAszB,YAAA9e,GAAAtU,MACAF,EAAAkP,UAAAkxB,EAAAgL,cACAprC,EAAAkT,UACAwtB,EAAA,EAAAN,EAAAkL,kBACAqD,EAAArO,EAAAn/B,KAAA,EAAAi/B,EAAAiL,iBACA3K,EAAA,EAAAN,EAAAkL,iBACAhL,EAAAn/B,KAAA,EAAAi/B,EAAAiL,kBAIArrC,EAAA80B,UAAA,SACA90B,EAAA+0B,aAAA,SACA/0B,EAAAkP,UAAA00B,EACA5jC,EAAAg1B,SAAAxgB,EAAA,GAAAm6B,GACA3uC,EAAAmC,kBASA0sC,GAAA5D,GACAc,GAAAjF,UAAA+H,GAEA,IAAAC,GAAAjqC,GAAAtK,eAGAw0C,GAAAz0C,OAAA00C,mBAAA,iBACAC,GAAA30C,OAAA40C,kBAAA,iBAEAC,GAAA,CACAC,YAAA,CACAC,QAAA,EACAluC,KAAA,EACAmuC,MAAA,8BAEAC,OAAA,CACAF,QAAA,EACAluC,KAAA,IACAmuC,MAAA,kBAEAE,OAAA,CACAH,QAAA,EACAluC,KAAA,IACAmuC,MAAA,kBAEAG,KAAA,CACAJ,QAAA,EACAluC,KAAA,KACAmuC,MAAA,cAEAI,IAAA,CACAL,QAAA,EACAluC,KAAA,MACAmuC,MAAA,SAEAK,KAAA,CACAN,QAAA,EACAluC,KAAA,OACAmuC,MAAA,WAEAM,MAAA,CACAP,QAAA,EACAluC,KAAA,OACAmuC,MAAA,SAEAO,QAAA,CACAR,QAAA,EACAluC,KAAA,OACAmuC,MAAA,WAEAQ,KAAA,CACAT,QAAA,EACAluC,KAAA,SAIA4uC,GAAA71C,OAAAgB,KAAAi0C,IAEA,SAAAa,GAAApoD,EAAApC,GACA,OAAAoC,EAAApC,EAGA,SAAAyqD,GAAAnvB,GACA,IAEAn6B,EAAA2U,EAAA2B,EAFAizC,EAAA,GACAC,EAAA,GAGA,IAAAxpD,EAAA,EAAA2U,EAAAwlB,EAAAruB,OAAiC9L,EAAA2U,IAAU3U,EAC3CsW,EAAA6jB,EAAAn6B,GACAupD,EAAAjzC,KACAizC,EAAAjzC,IAAA,EACAkzC,EAAAtoC,KAAA5K,IAIA,OAAAkzC,EAsFA,SAAAC,GAAAC,EAAAC,EAAAx0C,EAAAy0C,GACA,IAAA35B,EAjCA,SAAAy5B,EAAA3+C,EAAAiE,GAKA,IAJA,IAEA66C,EAAAC,EAAAC,EAFAC,EAAA,EACA/pD,EAAAypD,EAAA59C,OAAA,EAGAk+C,GAAA,GAAAA,GAAA/pD,GAAA,CAKA,GAHA6pD,EAAAJ,GADAG,EAAAG,EAAA/pD,GAAA,GACA,SACA8pD,EAAAL,EAAAG,IAEAC,EAEA,OAAWE,GAAA,KAAA/pD,GAAA8pD,GACR,GAAAA,EAAAh/C,GAAAiE,EACHg7C,EAAAH,EAAA,MACG,MAAAC,EAAA/+C,GAAAiE,GAGH,OAAWg7C,GAAAF,EAAA7pD,GAAA8pD,GAFX9pD,EAAA4pD,EAAA,GAOA,OAASG,GAAAD,EAAA9pD,GAAA,MAUTgqD,CAAAP,EAAAC,EAAAx0C,GAGAma,EAAAW,EAAA+5B,GAAA/5B,EAAAhwB,GAAAgwB,EAAA+5B,GAAAN,IAAA59C,OAAA,GAAA49C,EAAA,GACAx5B,EAAAD,EAAA+5B,GAAA/5B,EAAAhwB,GAAAgwB,EAAAhwB,GAAAypD,IAAA59C,OAAA,GAAA49C,EAAA,GAEAQ,EAAAh6B,EAAAy5B,GAAAr6B,EAAAq6B,GACAhpD,EAAAupD,GAAA/0C,EAAAma,EAAAq6B,IAAAO,EAAA,EACAj9B,GAAAiD,EAAA05B,GAAAt6B,EAAAs6B,IAAAjpD,EAEA,OAAA2uB,EAAAs6B,GAAA38B,EAGA,SAAAk9B,GAAA97C,EAAA+7C,GACA,IAAAC,EAAAh8C,EAAAi8C,SACAr1C,EAAA5G,EAAA4G,QAAAs1C,KACAC,EAAAv1C,EAAAu1C,OACA7V,EAAA6V,GAAAv1C,EAAA0/B,OACA3lC,EAAAo7C,EAaA,MAXA,mBAAAI,IACAx7C,EAAAw7C,EAAAx7C,IAIAkP,GAAAxK,SAAA1E,KACAA,EAAA,iBAAA2lC,EACA0V,EAAA3V,MAAA1lC,EAAA2lC,GACA0V,EAAA3V,MAAA1lC,IAGA,OAAAA,GACAA,GAKAw7C,GAAA,mBAAA7V,IACA3lC,EAAA2lC,EAAAyV,GAGAlsC,GAAAxK,SAAA1E,KACAA,EAAAq7C,EAAA3V,MAAA1lC,KAIAA,GAGA,SAAA0lC,GAAArmC,EAAA+7C,GACA,GAAAlsC,GAAA7K,cAAA+2C,GACA,YAGA,IAAAn1C,EAAA5G,EAAA4G,QAAAs1C,KACAv7C,EAAAm7C,GAAA97C,IAAAyhB,cAAAs6B,IACA,cAAAp7C,EACAA,GAGAiG,EAAAlJ,QACAiD,GAAAX,EAAAi8C,SAAAzV,QAAA7lC,EAAAiG,EAAAlJ,QAGAiD,GAgEA,SAAAy7C,GAAA9I,GACA,QAAA3hD,EAAAopD,GAAAhzC,QAAAurC,GAAA,EAAAhtC,EAAAy0C,GAAAt9C,OAA2D9L,EAAA2U,IAAU3U,EACrE,GAAAwoD,GAAAY,GAAAppD,IAAA0oD,OACA,OAAAU,GAAAppD,GAWA,SAAA0qD,GAAAr8C,EAAAvP,EAAAE,EAAA2rD,GACA,IAYAJ,EAZAF,EAAAh8C,EAAAi8C,SACAr1C,EAAA5G,EAAA4G,QACA21C,EAAA31C,EAAAs1C,KACAhT,EAAAqT,EAAAjJ,MAnDA,SAAAkJ,EAAA/rD,EAAAE,EAAA2rD,GACA,IACA3qD,EAAA8qD,EAAAvJ,EADA5sC,EAAAy0C,GAAAt9C,OAGA,IAAA9L,EAAAopD,GAAAhzC,QAAAy0C,GAAiC7qD,EAAA2U,EAAA,IAAc3U,EAI/C,GAHA8qD,EAAAtC,GAAAY,GAAAppD,IACAuhD,EAAAuJ,EAAAnC,MAAAmC,EAAAnC,MAAAmC,EAAAnC,MAAA78C,OAAA,GAAAw8C,GAEAwC,EAAApC,QAAA3pD,KAAAgiD,MAAA/hD,EAAAF,IAAAyiD,EAAAuJ,EAAAtwC,QAAAmwC,EACA,OAAAvB,GAAAppD,GAIA,OAAAopD,GAAAz0C,EAAA,GAsCAo2C,CAAAH,EAAAC,QAAA/rD,EAAAE,EAAA2rD,GACAnT,EAAAiT,GAAAlT,GACAuJ,EAAAqH,GAAAyC,EAAA9J,SAAA8J,EAAAI,cACAC,EAAA,SAAA1T,GAAAqT,EAAAM,WACAC,EAAAl2C,EAAAua,MAAAgoB,MAAAzR,QACA+kB,EAAAtC,GAAAjR,GACA6T,EAAAtsD,EACA6vB,EAAA3vB,EACAwwB,EAAA,GAgCA,IA7BAsxB,IACAA,EAvFA,SAAAhiD,EAAAE,EAAA2iD,EAAAgJ,GACA,IAIA3qD,EAAA2U,EAAA4sC,EAJAtxB,EAAAjxB,EAAAF,EACAgsD,EAAAtC,GAAA7G,GACA0J,EAAAP,EAAAtwC,KACAmuC,EAAAmC,EAAAnC,MAGA,IAAAA,EACA,OAAA5pD,KAAAgiD,KAAA9wB,GAAA06B,EAAAU,IAGA,IAAArrD,EAAA,EAAA2U,EAAAg0C,EAAA78C,OAAiC9L,EAAA2U,IACjC4sC,EAAAoH,EAAA3oD,KACAjB,KAAAgiD,KAAA9wB,GAAAo7B,EAAA9J,KAAAoJ,MAF2C3qD,GAO3C,OAAAuhD,EAqEA+J,CAAAxsD,EAAAE,EAAAu4C,EAAAoT,IAIAM,IACAG,GAAAf,EAAAxV,QAAAuW,EAAA,UAAAH,GACAt8B,GAAA07B,EAAAxV,QAAAlmB,EAAA,UAAAs8B,IAIAG,GAAAf,EAAAxV,QAAAuW,EAAAH,EAAA,MAAA1T,IACA5oB,GAAA07B,EAAAxV,QAAAlmB,EAAAs8B,EAAA,MAAA1T,IAGAv4C,IACA2vB,GAAA07B,EAAA3oB,IAAA/S,EAAA,EAAA4oB,IAGAgT,EAAAa,EAEAD,GAAA3T,IAAAyT,IAAAL,EAAA7+C,QAIAw+C,GAAAF,EAAAxV,QAAA0V,EAAA/S,GACA+S,GAAAF,EAAA3oB,IAAA6oB,MAAAa,EAAAb,IAAAO,EAAAtwC,KAAAsmC,MAAAvJ,IAGOgT,EAAA57B,EAAa47B,GAAAF,EAAA3oB,IAAA6oB,EAAAzJ,EAAAvJ,GACpB/nB,EAAAtO,MAAAqpC,GAKA,OAFA/6B,EAAAtO,MAAAqpC,GAEA/6B,EAqDA,IAmDA+7B,GAAA9T,GAAAhiC,OAAA,CACA8I,WAAA,WACAvS,KAAA8lC,oBACA2F,GAAApsC,UAAAkT,WAAAhT,KAAAS,OAGA2X,OAAA,WACA,IACA1O,EADAjJ,KACAiJ,QACAs1C,EAAAt1C,EAAAs1C,OAAAt1C,EAAAs1C,KAAA,IACAF,EAHAr+C,KAGAs+C,SAAA,IAAApV,GAAAC,MAAAlgC,EAAAu2C,SAAAC,MAaA,OAVAlB,EAAA5V,QACAtiC,QAAAq5C,KAAA,0EAOAxtC,GAAA5I,QAAAi1C,EAAAoB,eAAAtB,EAAA5V,WAEAgD,GAAApsC,UAAAsY,OAAAzP,MAhBAlI,KAgBAR,YAMAskB,cAAA,SAAAyrB,GAIA,OAHAA,QAAA1vC,IAAA0vC,EAAAj7C,IACAi7C,IAAAj7C,GAEAm3C,GAAApsC,UAAAykB,cAAAvkB,KAAAS,KAAAuvC,IAGA7C,oBAAA,WACA,IAUA14C,EAAAkzB,EAAAve,EAAAwkB,EAAAlW,EAAA2oC,EAVA/1C,EAAA7J,KACAoN,EAAAvD,EAAAuD,MACAixC,EAAAx0C,EAAAy0C,SACAM,EAAA/0C,EAAAZ,QAAAs1C,KACA5I,EAAAiJ,EAAAjJ,MAAA,MACA7iD,EAAAwpD,GACAtpD,EAAAopD,GACAyD,EAAA,GACA3oC,EAAA,GACA4K,EAAA,GAEAg+B,EAAA1yC,EAAA6J,KAAA6K,QAAA,GAGA,IAAA9tB,EAAA,EAAA2U,EAAAm3C,EAAAhgD,OAAuC9L,EAAA2U,IAAU3U,EACjD8tB,EAAA5M,KAAAwzB,GAAA7+B,EAAAi2C,EAAA9rD,KAIA,IAAAA,EAAA,EAAA2U,GAAAyE,EAAA6J,KAAAC,UAAA,IAAApX,OAAwD9L,EAAA2U,IAAU3U,EAClE,GAAAoZ,EAAA0V,iBAAA9uB,GAIA,GAHAijB,EAAA7J,EAAA6J,KAAAC,SAAAljB,GAAAijB,KAGA/E,GAAAzK,SAAAwP,EAAA,IAGA,IAFAC,EAAAljB,GAAA,GAEAkzB,EAAA,EAAAiG,EAAAlW,EAAAnX,OAAoConB,EAAAiG,IAAUjG,EAC9C04B,EAAAlX,GAAA7+B,EAAAoN,EAAAiQ,IACA24B,EAAA3qC,KAAA0qC,GACA1oC,EAAAljB,GAAAkzB,GAAA04B,MAEK,CACL,IAAA14B,EAAA,EAAAiG,EAAArL,EAAAhiB,OAAsConB,EAAAiG,IAAUjG,EAChD24B,EAAA3qC,KAAA4M,EAAAoF,IAEAhQ,EAAAljB,GAAA8tB,EAAAxiB,MAAA,QAGA4X,EAAAljB,GAAA,GAIA8tB,EAAAhiB,SAEAgiB,EAAAw7B,GAAAx7B,GAAAgN,KAAAuuB,IACAvqD,EAAAC,KAAAD,MAAAgvB,EAAA,IACA9uB,EAAAD,KAAAC,MAAA8uB,IAAAhiB,OAAA,KAGA+/C,EAAA//C,SACA+/C,EAAAvC,GAAAuC,GAAA/wB,KAAAuuB,IACAvqD,EAAAC,KAAAD,MAAA+sD,EAAA,IACA7sD,EAAAD,KAAAC,MAAA6sD,IAAA//C,OAAA,KAGAhN,EAAA41C,GAAA7+B,EAAA+0C,EAAA9rD,QACAE,EAAA01C,GAAA7+B,EAAA+0C,EAAA5rD,QAGAF,MAAAwpD,IAAA+B,EAAAxV,QAAA9zB,KAAAC,MAAA2gC,GAAA7iD,EACAE,MAAAopD,IAAAiC,EAAAvV,MAAA/zB,KAAAC,MAAA2gC,GAAA,EAAA3iD,EAGA6W,EAAA/W,IAAAC,KAAAD,MAAAE,GACA6W,EAAA7W,IAAAD,KAAAC,IAAAF,EAAA,EAAAE,GAGA6W,EAAAk2C,YAAAl2C,EAAAqY,eACArY,EAAAm2C,OAAA,GACAn2C,EAAAo2C,YAAA,CACAhpC,KAAA4oC,EACA3oC,WACA4K,WAIA+qB,WAAA,WACA,IAOA74C,EAAA2U,EAAAi3C,EAPA/1C,EAAA7J,KACAlN,EAAA+W,EAAA/W,IACAE,EAAA6W,EAAA7W,IACAiW,EAAAY,EAAAZ,QACA21C,EAAA31C,EAAAs1C,KACAsB,EAAA,GACAr8B,EAAA,GAGA,OAAAva,EAAAua,MAAAtd,QACA,WACA25C,EAAAh2C,EAAAo2C,YAAAhpC,KACA,MACA,aACA4oC,EAAAh2C,EAAAo2C,YAAAn+B,OACA,MACA,WACA,QACA+9B,EAAAnB,GAAA70C,EAAA/W,EAAAE,EAAA6W,EAAAq2C,iBAAAptD,IAaA,IAVA,UAAAmW,EAAA8W,QAAA8/B,EAAA//C,SACAhN,EAAA+sD,EAAA,GACA7sD,EAAA6sD,IAAA//C,OAAA,IAIAhN,EAAA41C,GAAA7+B,EAAA+0C,EAAA9rD,QACAE,EAAA01C,GAAA7+B,EAAA+0C,EAAA5rD,QAGAgB,EAAA,EAAA2U,EAAAk3C,EAAA//C,OAAuC9L,EAAA2U,IAAU3U,GACjD4rD,EAAAC,EAAA7rD,KACAlB,GAAA8sD,GAAA5sD,GACAwwB,EAAAtO,KAAA0qC,GAiBA,OAbA/1C,EAAA/W,MACA+W,EAAA7W,MAGA6W,EAAAs2C,MAAAvB,EAAAjJ,MAnVA,SAAAtzC,EAAAmhB,EAAAq7B,EAAA/rD,EAAAE,GACA,IACAgB,EAAA2hD,EADAhtC,EAAAy0C,GAAAt9C,OAGA,IAAA9L,EAAA2U,EAAA,EAAmB3U,GAAAopD,GAAAhzC,QAAAy0C,GAA6B7qD,IAEhD,GADA2hD,EAAAyH,GAAAppD,GACAwoD,GAAA7G,GAAA+G,QAAAr6C,EAAAi8C,SAAA1V,KAAA51C,EAAAF,EAAA6iD,IAAAnyB,EAAA1jB,OACA,OAAA61C,EAIA,OAAAyH,GAAAyB,EAAAzB,GAAAhzC,QAAAy0C,GAAA,GAwUAuB,CAAAv2C,EAAA2Z,EAAAo7B,EAAAC,QAAAh1C,EAAA/W,IAAA+W,EAAA7W,KACA6W,EAAAw2C,WAAA5B,GAAA50C,EAAAs2C,OACAt2C,EAAAm2C,OA5gBA,SAAAH,EAAA/sD,EAAAE,EAAAstD,GACA,cAAAA,IAAAT,EAAA//C,OACA,OACA,CAAIy+C,KAAAzrD,EAAAglC,IAAA,GACJ,CAAIymB,KAAAvrD,EAAA8kC,IAAA,IAIJ,IAEA9jC,EAAA2U,EAAA2a,EAAAC,EAAAW,EAFAw5B,EAAA,GACAvvB,EAAA,CAAAr7B,GAGA,IAAAkB,EAAA,EAAA2U,EAAAk3C,EAAA//C,OAAsC9L,EAAA2U,IAAU3U,GAChDuvB,EAAAs8B,EAAA7rD,IACAlB,GAAAywB,EAAAvwB,GACAm7B,EAAAjZ,KAAAqO,GAMA,IAFA4K,EAAAjZ,KAAAliB,GAEAgB,EAAA,EAAA2U,EAAAwlB,EAAAruB,OAAiC9L,EAAA2U,IAAU3U,EAC3CkwB,EAAAiK,EAAAn6B,EAAA,GACAsvB,EAAA6K,EAAAn6B,EAAA,GACAuvB,EAAA4K,EAAAn6B,QAGA6L,IAAAyjB,QAAAzjB,IAAAqkB,GAAAnxB,KAAAgN,OAAAmkB,EAAAZ,GAAA,KAAAC,GACAm6B,EAAAxoC,KAAA,CAAeqpC,KAAAh7B,EAAAuU,IAAA9jC,GAAA2U,EAAA,KAIf,OAAA+0C,EA4eA6C,CAAA12C,EAAAo2C,YAAAhpC,KAAAnkB,EAAAE,EAAAiW,EAAAq3C,cACAz2C,EAAA22C,SA/PA,SAAA9C,EAAAl6B,EAAA1wB,EAAAE,EAAAiW,GACA,IAEAm2C,EAAAz8B,EAFA3P,EAAA,EACAkQ,EAAA,EAsBA,OAnBAja,EAAAgY,QAAAuC,EAAA1jB,SACAmJ,EAAAs1C,KAAAzrD,MACAssD,EAAA3B,GAAAC,EAAA,OAAAl6B,EAAA,UAEAxQ,EADA,IAAAwQ,EAAA1jB,OACA,EAAAs/C,GAEA3B,GAAAC,EAAA,OAAAl6B,EAAA,UAAA47B,GAAA,GAGAn2C,EAAAs1C,KAAAvrD,MACA2vB,EAAA86B,GAAAC,EAAA,OAAAl6B,IAAA1jB,OAAA,UAEAojB,EADA,IAAAM,EAAA1jB,OACA6iB,GAEAA,EAAA86B,GAAAC,EAAA,OAAAl6B,IAAA1jB,OAAA,eAKA,CAASkT,QAAAkQ,OAuOTu9B,CAAA52C,EAAAm2C,OAAAx8B,EAAA1wB,EAAAE,EAAAiW,GAEAA,EAAAua,MAAAnb,SACAmb,EAAAnb,UAvOA,SAAAhG,EAAAjC,EAAAsgD,GACA,IACA1sD,EAAA2U,EAAA3F,EAAAwoC,EADAhoB,EAAA,GAGA,IAAAxvB,EAAA,EAAA2U,EAAAvI,EAAAN,OAAkC9L,EAAA2U,IAAU3U,EAC5CgP,EAAA5C,EAAApM,GACAw3C,IAAAkV,GAAA19C,KAAAX,EAAAi8C,SAAAzV,QAAA7lC,EAAA09C,GAEAl9B,EAAAtO,KAAA,CACAlS,QACAwoC,UAIA,OAAAhoB,EA4NAm9B,CAAA92C,EAAA2Z,EAAA3Z,EAAAw2C,aAGArgB,iBAAA,SAAAn5B,EAAAqP,GACA,IAAArM,EAAA7J,KACAq+C,EAAAx0C,EAAAy0C,SACArnC,EAAApN,EAAAuD,MAAA6J,KACA2nC,EAAA/0C,EAAAZ,QAAAs1C,KACA18B,EAAA5K,EAAA6K,QAAAjb,EAAAoQ,EAAA6K,OAAAhiB,OAAAmX,EAAA6K,OAAAjb,GAAA,GACA7D,EAAAiU,EAAAC,SAAAhB,GAAAe,KAAApQ,GAKA,OAHAqL,GAAAzK,SAAAzE,KACA6e,EAAAhY,EAAAia,cAAA9gB,IAEA47C,EAAAgC,cACAvC,EAAA1V,OAAAwV,GAAAt0C,EAAAgY,GAAA+8B,EAAAgC,eAEA,iBAAA/+B,EACAA,EAEAw8B,EAAA1V,OAAAwV,GAAAt0C,EAAAgY,GAAA+8B,EAAAe,eAAAkB,WAOAC,mBAAA,SAAAvC,EAAA13C,EAAA2c,EAAAmlB,GACA,IACA0V,EADAr+C,KACAs+C,SACAr1C,EAFAjJ,KAEAiJ,QACAw/B,EAAAx/B,EAAAs1C,KAAAoB,eACAoB,EAAAtY,EAJAzoC,KAIAmgD,OACAO,EALA1gD,KAKAqgD,WACAW,EAAAvY,EAAAiY,GACAO,GAAA5C,EAAAxV,QAAA0V,EAAAmC,GACAQ,EAAAj4C,EAAAua,MAAAgoB,MACAA,EAAA0V,EAAAnnB,SAAA2mB,GAAAM,GAAAzC,IAAA0C,EACAp/B,EAAAw8B,EAAA1V,OAAA4V,EAAA5V,IAAA6C,EAAAwV,EAAAD,IACAtT,EAAAjC,EAAA0V,EAAAj4C,EAAAua,MAAA+nB,MACA4V,EAAAhF,GAAA1O,EAAA1lC,SAAA0lC,EAAAC,cAEA,OAAAyT,IAAAt/B,EAAAhb,EAAA2c,GAAA3B,GAGAmrB,qBAAA,SAAAxpB,GACA,IACAxvB,EAAA2U,EADAmZ,EAAA,GAGA,IAAA9tB,EAAA,EAAA2U,EAAA6a,EAAA1jB,OAAkC9L,EAAA2U,IAAU3U,EAC5C8tB,EAAA5M,KAAAlV,KAAA8gD,mBAAAt9B,EAAAxvB,GAAAgP,MAAAhP,EAAAwvB,IAGA,OAAA1B,GAMAs/B,kBAAA,SAAA7C,GACA,IAAA10C,EAAA7J,KACAqhD,EAAAx3C,EAAAZ,QAAAua,MAAAnb,QACAmG,EAAA3E,EAAAk2C,YAAAl2C,EAAA0D,MAAA1D,EAAA2D,OACAwF,EAAAnJ,EAAAk2C,YAAAsB,EAAAx3C,EAAAgE,MAAAhE,EAAA8D,KAAA0zC,EAAAx3C,EAAAiE,OAAAjE,EAAA+D,IACAkqB,EAAA2lB,GAAA5zC,EAAAm2C,OAAA,OAAAzB,EAAA,OACAt9B,EAAAzS,GAAA3E,EAAA22C,SAAAxtC,MAAA8kB,IAAAjuB,EAAA22C,SAAAxtC,MAAA,EAAAnJ,EAAA22C,SAAAt9B,KAEA,OAAAm+B,EAAAruC,EAAAiO,EAAAjO,EAAAiO,GAGAmC,iBAAA,SAAApgB,EAAA6D,EAAAqP,GACA,IACAqoC,EAAA,KAUA,QARA1+C,IAAAgH,QAAAhH,IAAAqW,IACAqoC,EAJAv+C,KAIAigD,YAAA/oC,SAAAhB,GAAArP,IAGA,OAAA03C,IACAA,EAAA7V,GARA1oC,KAQAgD,IAGA,OAAAu7C,EACA,OAZAv+C,KAYAohD,kBAAA7C,IAIA76B,gBAAA,SAAA7c,GACA,IAAA2c,EAAAxjB,KAAAyjB,WACA,OAAA5c,GAAA,GAAAA,EAAA2c,EAAA1jB,OACAE,KAAAohD,kBAAA59B,EAAA3c,GAAA7D,OACA,MAGAwsC,iBAAA,SAAAE,GACA,IAAA7lC,EAAA7J,KACAwO,EAAA3E,EAAAk2C,YAAAl2C,EAAA0D,MAAA1D,EAAA2D,OACAwF,EAAAnJ,EAAAk2C,YAAAl2C,EAAA8D,KAAA9D,EAAA+D,IACAkqB,GAAAtpB,GAAAkhC,EAAA18B,GAAAxE,EAAA,IAAA3E,EAAA22C,SAAAxtC,MAAA,EAAAnJ,EAAA22C,SAAAxtC,OAAAnJ,EAAA22C,SAAAt9B,IACAq7B,EAAAd,GAAA5zC,EAAAm2C,OAAA,MAAAloB,EAAA,QAGA,OAAAjuB,EAAAy0C,SAAAvV,QAAAwV,IAOA+C,cAAA,SAAAz/B,GACA,IACA0/B,EADAvhD,KACAiJ,QAAAua,MACAg+B,EAFAxhD,KAEAqN,IAAAszB,YAAA9e,GAAAtU,MACA8N,EAAAnJ,GAAAg8B,UAAAqT,EAAArW,aACA2C,EAAA96C,KAAAwC,IAAA8lB,GACA2zB,EAAAj8C,KAAAyC,IAAA6lB,GACAomC,EAAAtF,GAAAoF,EAAA/vC,SAAAR,GAAAO,OAAAX,iBAEA,OAAA4wC,EAAA3T,EAAA4T,EAAAzS,GAMAkR,iBAAA,SAAAwB,GACA,IAAA73C,EAAA7J,KAGA2oC,EAAA9+B,EAAAZ,QAAAs1C,KAAAoB,eAAAlD,YACAkF,EAAA93C,EAAAi3C,mBAAAY,EAAA,KAAA/Y,GACA6Y,EAAA33C,EAAAy3C,cAAAK,GACAlS,EAAA5lC,EAAAqY,eAAArY,EAAA0D,MAAA1D,EAAA2D,OACAmxC,EAAA5rD,KAAAmB,MAAAu7C,EAAA+R,GAEA,OAAA7C,EAAA,EAAAA,EAAA,KAKAiD,GApWA,CACA98B,SAAA,SASAw7B,aAAA,SASAvgC,OAAA,OAEAy/B,SAAA,GACAjB,KAAA,CACAC,QAAA,EACA7V,QAAA,EACAgN,MAAA,EACA51C,OAAA,EACA8hD,eAAA,EACA3C,YAAA,EACAL,QAAA,cACAc,eAAA,IAEAn8B,MAAA,CACA4nB,UAAA,EAUAllC,OAAA,OAEAslC,MAAA,CACAzR,SAAA,KAuTAwlB,GAAApL,UAAAyN,GAEA,IAAA/qC,GAAA,CACAirC,SAAAzO,GACA1oC,OAAA4rC,GACAxM,YAAAuN,GACAyK,aAAA3I,GACAmF,KAAAgB,IAGAyC,GAAA,CACAnB,SAAA,yBACApE,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,QAGAjU,GAAAC,MAAAH,SAAA,mBAAA75C,EAAA,CACA8yD,IAAA,SAEAxZ,QAAA,WACA,OAAAuZ,IAGAtZ,MAAA,SAAA1lC,EAAA2lC,GAMA,MALA,iBAAA3lC,GAAA,iBAAA2lC,EACA3lC,EAAA7T,EAAA6T,EAAA2lC,GACG3lC,aAAA7T,IACH6T,EAAA7T,EAAA6T,IAEAA,EAAAE,UAAAF,EAAAk/C,UAAA,MAGAvZ,OAAA,SAAA4V,EAAA5V,GACA,OAAAx5C,EAAAovD,GAAA5V,WAGAjT,IAAA,SAAA6oB,EAAA4D,EAAAxM,GACA,OAAAxmD,EAAAovD,GAAA7oB,IAAAysB,EAAAxM,GAAAuM,WAGAtZ,KAAA,SAAA51C,EAAAF,EAAA6iD,GACA,OAAAxmD,EAAAmlB,SAAAnlB,EAAA6D,GAAA41C,KAAAz5C,EAAA2D,KAAAsvD,GAAAzM,IAGA9M,QAAA,SAAA0V,EAAA5I,EAAAsJ,GAEA,OADAV,EAAApvD,EAAAovD,GACA,YAAA5I,EACA4I,EAAAW,WAAAD,GAAAiD,UAEA3D,EAAA1V,QAAA8M,GAAAuM,WAGApZ,MAAA,SAAAyV,EAAA5I,GACA,OAAAxmD,EAAAovD,GAAAzV,MAAA6M,GAAAuM,WAWAnZ,QAAA,SAAAwV,GACA,OAAApvD,EAAAovD,KAEC,IAEDvtC,GAAAT,KAAA,UACA4nB,QAAA,CACAkqB,OAAA,CACAC,WAAA,MAKA,IAAAC,GAAA,CACA7rC,QAAA,SAAAxQ,GACA,IAAAW,EAAAX,EAAA4I,KACA1B,EAAAlH,EAAAkH,MACAoJ,EAAApJ,EAAA+J,eAAAtQ,GACA27C,EAAAhsC,GAAApJ,EAAA0V,iBAAAjc,GACAyW,EAAAklC,GAAAhsC,EAAAE,QAAA6G,WAAA,GACAzd,EAAAwd,EAAAxd,QAAA,EAEA,OAAAA,EAAA,SAAAoP,EAAAlb,GACA,OAAAA,EAAA8L,GAAAwd,EAAAtpB,GAAA0e,OAAA,MADA,MAKA+vC,SAAA,SAAAv8C,GACA,IAAAu8C,EAAAv8C,EAAAu8C,SACAjvD,EAAAivD,IAAAjvD,EAAA,KACAC,EAAAgvD,IAAAhvD,EAAA,KAEA,gBAAAyb,GACA,OACA1b,EAAA,OAAAA,EAAA0b,EAAA1b,IACAC,EAAA,OAAAA,EAAAyb,EAAAzb,QAOA,SAAAivD,GAAA3uB,EAAAltB,EAAAoT,GACA,IAEA9T,EAFA4M,EAAAghB,EAAAphB,QAAA,GACA7D,EAAAiE,EAAAjE,KAOA,QAJAjP,IAAAiP,IACAA,IAAAiE,EAAAyG,kBAGA,IAAA1K,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAIA,GADA3I,EAAA/D,WAAA0M,EAAA,IACApH,SAAAvB,IAAApT,KAAAmB,MAAAiS,OAKA,MAJA,MAAA2I,EAAA,UAAAA,EAAA,KACA3I,EAAAU,EAAAV,KAGAA,IAAAU,GAAAV,EAAA,GAAAA,GAAA8T,IAIA9T,EAGA,OAAA2I,GAEA,aACA,cACA,UACA,YACA,WACA,eAEA,aACA,YACA,UACA,OAAAA,EAEA,QACA,UAIA,SAAA6zC,GAAAz8C,GACA,IAIAyZ,EAJA5M,EAAA7M,EAAA6tB,GAAAphB,QAAA,GACAtQ,EAAA6D,EAAA6tB,GAAAxK,QAAA,GACAza,EAAA5I,EAAA4I,KACA3I,EAAA,KAGA,GAAAuB,SAAAoH,GACA,YAmBA,GAZA,UAAAA,EACA3I,OAAAtG,IAAAkT,EAAA6vC,YAAAvgD,EAAAyL,OAAAiF,EAAA6vC,YACE,QAAA9zC,EACF3I,OAAAtG,IAAAkT,EAAA8vC,SAAAxgD,EAAAuL,IAAAmF,EAAA8vC,cACEhjD,IAAAkT,EAAA+vC,UACF38C,EAAA4M,EAAA+vC,UACEzgD,EAAAi5C,gBACFn1C,EAAA9D,EAAAi5C,kBACEj5C,EAAA4f,eACF9b,EAAA9D,EAAA4f,gBAGA9b,QAAA,CACA,QAAAtG,IAAAsG,EAAA3S,QAAAqM,IAAAsG,EAAA1S,EACA,OAAA0S,EAGA,GAAA+L,GAAAxK,SAAAvB,GAEA,OACA3S,GAFAmsB,EAAAtd,EAAA6f,gBAEA/b,EAAA,KACA1S,EAAAksB,EAAA,KAAAxZ,GAKA,YAGA,SAAA48C,GAAAx5C,EAAA1C,EAAAy7C,GACA,IAGAn8C,EAHAD,EAAAqD,EAAA1C,GACAiI,EAAA5I,EAAA4I,KACAk0C,EAAA,CAAAn8C,GAGA,IAAAy7C,EACA,OAAAxzC,EAGA,UAAAA,IAAA,IAAAk0C,EAAA54C,QAAA0E,IAAA,CACA,IAAApH,SAAAoH,GACA,OAAAA,EAIA,KADA3I,EAAAoD,EAAAuF,IAEA,SAGA,GAAA3I,EAAAq8C,QACA,OAAA1zC,EAGAk0C,EAAA9tC,KAAApG,GACAA,EAAA3I,EAAA2I,KAGA,SAGA,SAAAm0C,GAAA/8C,GACA,IAAA4I,EAAA5I,EAAA4I,KACA9I,EAAA,UAEA,WAAA8I,EACA,MAGApH,SAAAoH,KACA9I,EAAA,YAGAu8C,GAAAv8C,GAAAE,IAGA,SAAAg9C,GAAAh0C,GACA,OAAAA,MAAA6O,KAGA,SAAAolC,GAAA91C,EAAA+1C,EAAAC,EAAAC,EAAAC,GACA,IAAAvvD,EAEA,GAAAsvD,GAAAC,EAAA,CAMA,IADAl2C,EAAAU,OAAAq1C,EAAA,GAAA5vD,EAAA4vD,EAAA,GAAA3vD,GACAO,EAAA,EAAYA,EAAAsvD,IAAUtvD,EACtBke,GAAAE,OAAAxD,OAAAvB,EAAA+1C,EAAApvD,EAAA,GAAAovD,EAAApvD,IAOA,IAHAqZ,EAAAuB,OAAAy0C,EAAAE,EAAA,GAAA/vD,EAAA6vD,EAAAE,EAAA,GAAA9vD,GAGAO,EAAAuvD,EAAA,EAAmBvvD,EAAA,IAAOA,EAC1Bke,GAAAE,OAAAxD,OAAAvB,EAAAg2C,EAAArvD,GAAAqvD,EAAArvD,EAAA,QAiDA,IAAAwvD,GAAA,CACAx8C,GAAA,SAEAy8C,oBAAA,SAAAr2C,EAAAnE,GACA,IAGAuN,EAAAxiB,EAAA+/B,EAAA7tB,EAHA+T,GAAA7M,EAAA6J,KAAAC,UAAA,IAAApX,OACAwiD,EAAAr5C,EAAAq5C,UACA/4C,EAAA,GAGA,IAAAvV,EAAA,EAAaA,EAAAimB,IAAWjmB,EACxBwiB,EAAApJ,EAAA+J,eAAAnjB,GACA+/B,EAAAvd,EAAAE,QACAxQ,EAAA,KAEA6tB,KAAAphB,QAAAohB,aAAA9a,GAAAwH,OACAva,EAAA,CACAs8C,QAAAp1C,EAAA0V,iBAAA9uB,GACA8a,KAAA4zC,GAAA3uB,EAAA//B,EAAAimB,GACA7M,QACA2mB,OAIAvd,EAAAktC,QAAAx9C,EACAqD,EAAA2L,KAAAhP,GAGA,IAAAlS,EAAA,EAAaA,EAAAimB,IAAWjmB,GACxBkS,EAAAqD,EAAAvV,MAKAkS,EAAA4I,KAAAi0C,GAAAx5C,EAAAvV,EAAAsuD,GACAp8C,EAAAu8C,SAAAE,GAAAz8C,GACAA,EAAAy9C,OAAAV,GAAA/8C,KAIA09C,kBAAA,SAAAx2C,EAAAtd,GACA,IAAA0mB,EAAA1mB,EAAA0mB,KAAAktC,QACA,GAAAltC,EAAA,CAIA,IAAAnJ,EAAAD,EAAAC,IACA0mB,EAAAvd,EAAAud,GACA9gB,EAAA8gB,EAAArhB,MACA4K,EAAAyW,EAAAxW,WAAA,GACAomC,EAAAntC,EAAAmtC,OACArZ,EAAAr3B,EAAAuG,iBAAAxI,GAAAO,OAAAd,aAEAkzC,GAAArZ,GAAAhtB,EAAAxd,SACAoS,GAAAE,OAAAhD,SAAA/B,EAAAD,EAAAuR,WAlGA,SAAAtR,EAAAiQ,EAAAqmC,EAAA1wC,EAAAq3B,EAAAuZ,GACA,IAMA7vD,EAAA2U,EAAA9B,EAAAi9C,EAAAC,EAAAC,EAAAC,EANAhqC,EAAAqD,EAAAxd,OACAo+C,EAAAjrC,EAAAoK,SACA+lC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EAKA,IAFAl2C,EAAAsB,YAEA3a,EAAA,EAAA2U,EAAAsR,IAAA4pC,EAAqC7vD,EAAA2U,IAAU3U,EAE/C8vD,EAAAxmC,EADAzW,EAAA7S,EAAAimB,GACAvH,MACAqxC,EAAAJ,EAAAG,EAAAj9C,EAAAoM,GACA+wC,EAAAd,GAAAY,GACAG,EAAAf,GAAAa,GAEAC,GAAAC,GACAX,EAAAF,EAAAluC,KAAA4uC,GACAP,EAAAF,EAAAnuC,KAAA6uC,IACGT,GAAAC,IACHrF,GAMA8F,GACAZ,EAAAluC,KAAA4uC,GAEAG,GACAZ,EAAAnuC,KAAA6uC,KATAZ,GAAA91C,EAAA+1C,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,EAAA,GACAC,EAAA,KAYAF,GAAA91C,EAAA+1C,EAAAC,EAAAC,EAAAC,GAEAl2C,EAAAY,YACAZ,EAAAkP,UAAA+tB,EACAj9B,EAAAyB,OAyDAo1C,CAAA72C,EAAAiQ,EAAAqmC,EAAA1wC,EAAAq3B,EAAAvW,EAAArW,OACAxL,GAAAE,OAAA7C,WAAAlC,OAKA82C,GAAAjyC,GAAA/K,KACAi9C,GAAAlyC,GAAAtK,eAoFA,SAAAy8C,GAAAC,EAAA9yC,GACA,OAAA8yC,EAAAC,eAAAD,EAAAE,SAAAhzC,EACAA,EACA8yC,EAAAE,SArFAxzC,GAAAT,KAAA,UACA4V,OAAA,CACA4E,SAAA,EACAjG,SAAA,MACAuK,WAAA,EACAhnB,SAAA,EACA1C,OAAA,IAGA6gB,QAAA,SAAAC,EAAAC,GACA,IAAA7f,EAAA6f,EAAAxQ,aACAuuC,EAAAzkD,KAAAoN,MACAoJ,EAAAiuC,EAAAttC,eAAAtQ,GAGA2P,EAAAhE,OAAA,OAAAgE,EAAAhE,QAAAiyC,EAAAxtC,KAAAC,SAAArQ,GAAA2L,OAAA,KAGAiyC,EAAA9sC,UAGAisB,QAAA,KACA8gB,QAAA,KAEA5iC,OAAA,CACA0iC,SAAA,GACA9lC,QAAA,GAYA0H,eAAA,SAAAhZ,GACA,IAAA6J,EAAA7J,EAAA6J,KACA,OAAA/E,GAAA5K,QAAA2P,EAAAC,UAAAD,EAAAC,SAAApO,IAAA,SAAA4N,EAAA1iB,GACA,OACAiyB,KAAAvP,EAAAmL,MACAtF,UAAArK,GAAA5K,QAAAoP,EAAA8C,iBAAA9C,EAAA8C,gBAAA,GAAA9C,EAAA8C,gBACAhH,QAAApF,EAAA0V,iBAAA9uB,GACA2pB,QAAAjH,EAAAmG,eACA8nC,SAAAjuC,EAAAoG,WACAe,eAAAnH,EAAAqG,iBACAN,SAAA/F,EAAAsG,gBACAR,UAAA9F,EAAAgD,YACAgD,YAAAhG,EAAA+C,YACA4E,WAAA3H,EAAA2H,WAGAnI,aAAAliB,IAEKgM,MAAA,MAKLgmB,eAAA,SAAA5Y,GACA,IAAA6Y,EAAA,GACAA,EAAA/Q,KAAA,cAAA9H,EAAApG,GAAA,aACA,QAAAhT,EAAA,EAAiBA,EAAAoZ,EAAA6J,KAAAC,SAAApX,OAAgC9L,IACjDiyB,EAAA/Q,KAAA,qCAAA9H,EAAA6J,KAAAC,SAAAljB,GAAAwlB,gBAAA,aACApM,EAAA6J,KAAAC,SAAAljB,GAAA6tB,OACAoE,EAAA/Q,KAAA9H,EAAA6J,KAAAC,SAAAljB,GAAA6tB,OAEAoE,EAAA/Q,KAAA,SAGA,OADA+Q,EAAA/Q,KAAA,SACA+Q,EAAAC,KAAA,OAmBA,IAAA0+B,GAAAlxC,GAAAjK,OAAA,CAEA8I,WAAA,SAAAwkB,GACA7kB,GAAAzI,OAAAzJ,KAAA+2B,GAGA/2B,KAAA6kD,eAAA,GAKA7kD,KAAA8kD,aAAA,KAGA9kD,KAAA+kD,cAAA,GAOAhZ,aAAAoY,GACAxsC,OAAA,SAAAq0B,EAAAC,EAAAC,GACA,IAAAriC,EAAA7J,KA0BA,OAvBA6J,EAAAkiC,eAGAliC,EAAAmiC,WACAniC,EAAAoiC,YACApiC,EAAAqiC,UAGAriC,EAAAyiC,sBACAziC,EAAA0iC,gBACA1iC,EAAA2iC,qBAEA3iC,EAAAm7C,oBACAn7C,EAAAo7C,cACAp7C,EAAAq7C,mBAGAr7C,EAAAwjC,YACAxjC,EAAAyjC,MACAzjC,EAAA0jC,WAEA1jC,EAAA2jC,cAEA3jC,EAAAyd,SAEAkmB,YAAA2W,GAIA7X,oBAAA6X,GACA5X,cAAA,WACA,IAAA1iC,EAAA7J,KAEA6J,EAAAqY,gBAEArY,EAAA0D,MAAA1D,EAAAmiC,SACAniC,EAAA8D,KAAA,EACA9D,EAAAgE,MAAAhE,EAAA0D,QAEA1D,EAAA2D,OAAA3D,EAAAoiC,UAGApiC,EAAA+D,IAAA,EACA/D,EAAAiE,OAAAjE,EAAA2D,QAIA3D,EAAA6hC,YAAA,EACA7hC,EAAA8hC,WAAA,EACA9hC,EAAA+hC,aAAA,EACA/hC,EAAAgiC,cAAA,EAGAhiC,EAAAyd,QAAA,CACA/Z,MAAA,EACAC,OAAA,IAGAg/B,mBAAA2X,GAIAa,kBAAAb,GACAc,YAAA,WACA,IAAAp7C,EAAA7J,KACAskD,EAAAz6C,EAAAZ,QAAA6Y,QAAA,GACAqjC,EAAAjzC,GAAAnK,SAAAu8C,EAAAl+B,eAAA,CAAAvc,EAAAuD,OAAAvD,IAAA,GAEAy6C,EAAA/5B,SACA46B,IAAA56B,OAAA,SAAAjgB,GACA,OAAAg6C,EAAA/5B,OAAAjgB,EAAAT,EAAAuD,MAAA6J,SAIApN,EAAAZ,QAAAZ,SACA88C,EAAA98C,UAGAwB,EAAAs7C,eAEAD,iBAAAf,GAIA9W,UAAA8W,GACA7W,IAAA,WACA,IAAAzjC,EAAA7J,KACAmnB,EAAAtd,EAAAZ,QACAq7C,EAAAn9B,EAAArF,OACAiJ,EAAA5D,EAAA4D,QAEA1d,EAAAxD,EAAAwD,IAEA+3C,EAAAlzC,GAAAjJ,QAAAoI,WAAAizC,GACA9yC,EAAA4zC,EAAA52C,KAGA62C,EAAAx7C,EAAAg7C,eAAA,GAEAv9B,EAAAzd,EAAAyd,QACApF,EAAArY,EAAAqY,eAWA,GATAA,GACAoF,EAAA/Z,MAAA1D,EAAAmiC,SACA1kB,EAAA9Z,OAAAud,EAAA,OAEAzD,EAAA/Z,MAAAwd,EAAA,KACAzD,EAAA9Z,OAAA3D,EAAAoiC,WAIAlhB,EAGA,GAFA1d,EAAAoE,KAAA2zC,EAAApkD,OAEAkhB,EAAA,CAIA,IAAAojC,EAAAz7C,EAAAy7C,WAAA,IACAC,EAAA,EAEAl4C,EAAA80B,UAAA,OACA90B,EAAA+0B,aAAA,MAEAlwB,GAAA/J,KAAA0B,EAAAs7C,YAAA,SAAAz+B,EAAA1yB,GACA,IAAAwwD,EAAAH,GAAAC,EAAA9yC,GACAjE,EAAAi3C,EAAAhzC,EAAA,EAAAnE,EAAAszB,YAAAja,EAAAT,MAAA1Y,OAEA,IAAAvZ,GAAAsxD,IAAAxlD,OAAA,GAAAyN,EAAA+2C,EAAA5lC,QAAA4I,EAAA/Z,SACAg4C,GAAA/zC,EAAA8yC,EAAA5lC,QACA4mC,IAAAxlD,QAAA9L,EAAA,QAAAswD,EAAA5lC,SAIA2mC,EAAArxD,GAAA,CACA2Z,KAAA,EACAC,IAAA,EACAL,QACAC,OAAAgE,GAGA8zC,IAAAxlD,OAAA,IAAAyN,EAAA+2C,EAAA5lC,UAGA4I,EAAA9Z,QAAA+3C,MAEI,CACJ,IAAAC,EAAAlB,EAAA5lC,QACA+mC,EAAA57C,EAAA47C,aAAA,GACAC,EAAApB,EAAA5lC,QACAinC,EAAA,EACAC,EAAA,EACAC,EAAAr0C,EAAAg0C,EAEAtzC,GAAA/J,KAAA0B,EAAAs7C,YAAA,SAAAz+B,EAAA1yB,GACA,IAAAwwD,EAAAH,GAAAC,EAAA9yC,GACAs0C,EAAAtB,EAAAhzC,EAAA,EAAAnE,EAAAszB,YAAAja,EAAAT,MAAA1Y,MAGAvZ,EAAA,GAAA4xD,EAAAC,EAAAv+B,EAAA9Z,OAAAg4C,IACAE,GAAAC,EAAArB,EAAA5lC,QACA+mC,EAAAvwC,KAAAywC,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAA5yD,KAAAC,IAAA2yD,EAAAG,GACAF,GAAAC,EAGAR,EAAArxD,GAAA,CACA2Z,KAAA,EACAC,IAAA,EACAL,MAAAu4C,EACAt4C,OAAAgE,KAIAk0C,GAAAC,EACAF,EAAAvwC,KAAAywC,GACAr+B,EAAA/Z,OAAAm4C,EAIA77C,EAAA0D,MAAA+Z,EAAA/Z,MACA1D,EAAA2D,OAAA8Z,EAAA9Z,QAEA+/B,SAAA4W,GAGAjiC,aAAA,WACA,cAAAliB,KAAAiJ,QAAA6b,UAAA,WAAA9kB,KAAAiJ,QAAA6b,UAIA5L,KAAA,WACA,IAAArP,EAAA7J,KACAmnB,EAAAtd,EAAAZ,QACAq7C,EAAAn9B,EAAArF,OACAxQ,EAAAN,GAAAO,OACAd,EAAAa,EAAAb,aACAs1C,EAAAz0C,EAAA2H,SAAA2D,KACAopC,EAAAn8C,EAAA0D,MACA+3C,EAAAz7C,EAAAy7C,WAEA,GAAAn+B,EAAA4D,QAAA,CACA,IAIAk7B,EAJA54C,EAAAxD,EAAAwD,IACA6jC,EAAAkT,GAAAE,EAAApT,UAAA5/B,EAAAZ,kBACA00C,EAAAlzC,GAAAjJ,QAAAoI,WAAAizC,GACA9yC,EAAA4zC,EAAA52C,KAIAnB,EAAA80B,UAAA,OACA90B,EAAA+0B,aAAA,SACA/0B,EAAAmP,UAAA,GACAnP,EAAAqP,YAAAw0B,EACA7jC,EAAAkP,UAAA20B,EACA7jC,EAAAoE,KAAA2zC,EAAApkD,OAEA,IAAAwjD,EAAAH,GAAAC,EAAA9yC,GACA6zC,EAAAx7C,EAAAg7C,eA6DA3iC,EAAArY,EAAAqY,eAEA+jC,EADA/jC,EACA,CACA1uB,EAAAqW,EAAA8D,MAAAq4C,EAAAV,EAAA,MAAAhB,EAAA5lC,QACAjrB,EAAAoW,EAAA+D,IAAA02C,EAAA5lC,QACA9B,KAAA,GAGA,CACAppB,EAAAqW,EAAA8D,KAAA22C,EAAA5lC,QACAjrB,EAAAoW,EAAA+D,IAAA02C,EAAA5lC,QACA9B,KAAA,GAIA,IAAAipC,EAAAr0C,EAAA8yC,EAAA5lC,QACAxM,GAAA/J,KAAA0B,EAAAs7C,YAAA,SAAAz+B,EAAA1yB,GACA,IAAAkyD,EAAA74C,EAAAszB,YAAAja,EAAAT,MAAA1Y,MACAA,EAAAi3C,EAAAhzC,EAAA,EAAA00C,EACA1yD,EAAAyyD,EAAAzyD,EACAC,EAAAwyD,EAAAxyD,EAKAyuB,EACAluB,EAAA,GAAAR,EAAA+Z,EAAA+2C,EAAA5lC,QAAA7U,EAAA8D,KAAA9D,EAAAyd,QAAA/Z,QACA9Z,EAAAwyD,EAAAxyD,GAAAoyD,EACAI,EAAArpC,OACAppB,EAAAyyD,EAAAzyD,EAAAqW,EAAA8D,MAAAq4C,EAAAV,EAAAW,EAAArpC,OAAA,EAAA0nC,EAAA5lC,SAEK1qB,EAAA,GAAAP,EAAAoyD,EAAAh8C,EAAA+D,IAAA/D,EAAAyd,QAAA9Z,SACLha,EAAAyyD,EAAAzyD,IAAAqW,EAAA47C,aAAAQ,EAAArpC,MAAA0nC,EAAA5lC,QACAjrB,EAAAwyD,EAAAxyD,EAAAoW,EAAA+D,IAAA02C,EAAA5lC,QACAunC,EAAArpC,QA5FA,SAAAppB,EAAAC,EAAAizB,GACA,KAAApkB,MAAAkiD,OAAA,IAKAn3C,EAAAgC,OAEA,IAAAmN,EAAA4nC,GAAA19B,EAAAlK,UAAAupC,EAAArsC,aAaA,GAZArM,EAAAkP,UAAA6nC,GAAA19B,EAAAnK,UAAA9L,GACApD,EAAAsQ,QAAAymC,GAAA19B,EAAA/I,QAAAooC,EAAAlpC,gBACAxP,EAAAwQ,eAAAumC,GAAA19B,EAAA7I,eAAAkoC,EAAAhpC,kBACA1P,EAAAoP,SAAA2nC,GAAA19B,EAAAjK,SAAAspC,EAAA/oC,iBACA3P,EAAAmP,YACAnP,EAAAqP,YAAA0nC,GAAA19B,EAAAhK,YAAAjM,GAEApD,EAAAuQ,aAEAvQ,EAAAuQ,YAAAwmC,GAAA19B,EAAAi+B,SAAAoB,EAAAjpC,aAGAqK,EAAArF,QAAAqF,EAAArF,OAAAyiC,cAAA,CAGA,IAAA72C,EAAA82C,EAAAzxD,KAAAozD,MAAA,EACA39B,EAAAh1B,EAAAgxD,EAAA,EACA/7B,EAAAh1B,EAAA+d,EAAA,EAGAU,GAAAE,OAAAjE,UAAAd,EAAAqZ,EAAArI,WAAA3Q,EAAA8a,EAAAC,QAGA,IAAAjM,GACAnP,EAAAu1B,WAAApvC,EAAAC,EAAA+wD,EAAAhzC,GAEAnE,EAAAkT,SAAA/sB,EAAAC,EAAA+wD,EAAAhzC,GAGAnE,EAAAmC,WAyDA42C,CAAA5yD,EAAAC,EAAAizB,GAEA2+B,EAAArxD,GAAA2Z,KAAAna,EACA6xD,EAAArxD,GAAA4Z,IAAAna,EA1DA,SAAAD,EAAAC,EAAAizB,EAAAw/B,GACA,IAAAG,EAAA70C,EAAA,EACA80C,EAAA9B,EAAA6B,EAAA7yD,EACA+yD,EAAA9yD,EAAA4yD,EAEAh5C,EAAAg1B,SAAA3b,EAAAT,KAAAqgC,EAAAC,GAEA7/B,EAAAlU,SAEAnF,EAAAsB,YACAtB,EAAAmP,UAAA,EACAnP,EAAAU,OAAAu4C,EAAAC,GACAl5C,EAAAuB,OAAA03C,EAAAJ,EAAAK,GACAl5C,EAAA0B,UAgDAszB,CAAA7uC,EAAAC,EAAAizB,EAAAw/B,GAEAhkC,EACA+jC,EAAAzyD,GAAA+Z,EAAA+2C,EAAA5lC,QAEAunC,EAAAxyD,GAAAoyD,MAUAW,iBAAA,SAAAhzD,EAAAC,GACA,IACAO,EAAAyyD,EAAAC,EADA78C,EAAA7J,KAGA,GAAAxM,GAAAqW,EAAA8D,MAAAna,GAAAqW,EAAAgE,OAAApa,GAAAoW,EAAA+D,KAAAna,GAAAoW,EAAAiE,OAGA,IADA44C,EAAA78C,EAAAg7C,eACA7wD,EAAA,EAAcA,EAAA0yD,EAAA5mD,SAAe9L,EAG7B,GAFAyyD,EAAAC,EAAA1yD,GAEAR,GAAAizD,EAAA94C,MAAAna,GAAAizD,EAAA94C,KAAA84C,EAAAl5C,OAAA9Z,GAAAgzD,EAAA74C,KAAAna,GAAAgzD,EAAA74C,IAAA64C,EAAAj5C,OAEA,OAAA3D,EAAAs7C,YAAAnxD,GAKA,aAQAkvC,YAAA,SAAAzc,GACA,IAGAkgC,EAHA98C,EAAA7J,KACAmnB,EAAAtd,EAAAZ,QACAjD,EAAA,YAAAygB,EAAAzgB,KAAA,QAAAygB,EAAAzgB,KAGA,iBAAAA,GACA,IAAAmhB,EAAAyc,UAAAzc,EAAAu9B,QACA,WAEG,cAAA1+C,EAKH,OAJA,IAAAmhB,EAAAX,QACA,OAOAmgC,EAAA98C,EAAA28C,iBAAA//B,EAAAjzB,EAAAizB,EAAAhzB,GAEA,UAAAuS,EACA2gD,GAAAx/B,EAAAX,SAEAW,EAAAX,QAAAjnB,KAAAsK,EAAA4c,EAAAuG,OAAA25B,IAGAx/B,EAAAu9B,SAAAiC,IAAA98C,EAAAi7C,eACAj7C,EAAAi7C,cACA39B,EAAAu9B,QAAAnlD,KAAAsK,EAAA4c,EAAAuG,OAAAnjB,EAAAi7C,cAEAj7C,EAAAi7C,aAAA6B,GAGAx/B,EAAAyc,SAAA+iB,GAEAx/B,EAAAyc,QAAArkC,KAAAsK,EAAA4c,EAAAuG,OAAA25B,OAMA,SAAAC,GAAAx5C,EAAAy5C,GACA,IAAA1gC,EAAA,IAAAy+B,GAAA,CACAv3C,IAAAD,EAAAC,IACApE,QAAA49C,EACAz5C,UAGA+hB,GAAAK,UAAApiB,EAAA+Y,EAAA0gC,GACA13B,GAAAC,OAAAhiB,EAAA+Y,GACA/Y,EAAA+Y,SAGA,IAAA2gC,GAAA,CACA9/C,GAAA,SASA+/C,SAAAnC,GAEAoC,WAAA,SAAA55C,GACA,IAAAy5C,EAAAz5C,EAAAnE,QAAAkd,OAEA0gC,GACAD,GAAAx5C,EAAAy5C,IAIA9a,aAAA,SAAA3+B,GACA,IAAAy5C,EAAAz5C,EAAAnE,QAAAkd,OACAA,EAAA/Y,EAAA+Y,OAEA0gC,GACA30C,GAAA5I,QAAAu9C,EAAA71C,GAAAO,OAAA4U,QAEAA,GACAgJ,GAAAK,UAAApiB,EAAA+Y,EAAA0gC,GACA1gC,EAAAld,QAAA49C,GAEAD,GAAAx5C,EAAAy5C,IAEG1gC,IACHgJ,GAAAG,UAAAliB,EAAA+Y,UACA/Y,EAAA+Y,SAIA8gC,WAAA,SAAA75C,EAAAqZ,GACA,IAAAN,EAAA/Y,EAAA+Y,OACAA,GACAA,EAAA+c,YAAAzc,KAKAygC,GAAAh1C,GAAA/K,KAEA6J,GAAAT,KAAA,UACA0U,MAAA,CACA8F,SAAA,EACAlZ,UAAA,OACAwd,WAAA,EACA3Q,QAAA,GACAoG,SAAA,MACAmB,KAAA,GACAtgB,OAAA,OAOA,IAAAwhD,GAAAzzC,GAAAjK,OAAA,CACA8I,WAAA,SAAAwkB,GAEA7kB,GAAAzI,OADAzJ,KACA+2B,GADA/2B,KAIA6kD,eAAA,IAKA9Y,aAAAmb,GACAvvC,OAAA,SAAAq0B,EAAAC,EAAAC,GACA,IAAAriC,EAAA7J,KA0BA,OAvBA6J,EAAAkiC,eAGAliC,EAAAmiC,WACAniC,EAAAoiC,YACApiC,EAAAqiC,UAGAriC,EAAAyiC,sBACAziC,EAAA0iC,gBACA1iC,EAAA2iC,qBAEA3iC,EAAAm7C,oBACAn7C,EAAAo7C,cACAp7C,EAAAq7C,mBAGAr7C,EAAAwjC,YACAxjC,EAAAyjC,MACAzjC,EAAA0jC,WAEA1jC,EAAA2jC,cAEA3jC,EAAAyd,SAGAkmB,YAAA0Z,GAIA5a,oBAAA4a,GACA3a,cAAA,WACA,IAAA1iC,EAAA7J,KAEA6J,EAAAqY,gBAEArY,EAAA0D,MAAA1D,EAAAmiC,SACAniC,EAAA8D,KAAA,EACA9D,EAAAgE,MAAAhE,EAAA0D,QAEA1D,EAAA2D,OAAA3D,EAAAoiC,UAGApiC,EAAA+D,IAAA,EACA/D,EAAAiE,OAAAjE,EAAA2D,QAIA3D,EAAA6hC,YAAA,EACA7hC,EAAA8hC,WAAA,EACA9hC,EAAA+hC,aAAA,EACA/hC,EAAAgiC,cAAA,EAGAhiC,EAAAyd,QAAA,CACA/Z,MAAA,EACAC,OAAA,IAGAg/B,mBAAA0a,GAIAlC,kBAAAkC,GACAjC,YAAAiC,GACAhC,iBAAAgC,GAIA7Z,UAAA6Z,GACA5Z,IAAA,WACA,IAAAzjC,EAAA7J,KACAmnB,EAAAtd,EAAAZ,QACA8hB,EAAA5D,EAAA4D,QACAzD,EAAAzd,EAAAyd,QACA8/B,EAAAl1C,GAAA5K,QAAA6f,EAAAlB,MAAAkB,EAAAlB,KAAAnmB,OAAA,EACAunD,EAAAn1C,GAAAjJ,QAAAoI,WAAA8V,GACA8xB,EAAAluB,EAAAq8B,EAAAC,EAAAz1C,WAAA,EAAAuV,EAAAzI,QAAA,EAEA7U,EAAAqY,gBACAoF,EAAA/Z,MAAA1D,EAAAmiC,SACA1kB,EAAA9Z,OAAAyrC,IAEA3xB,EAAA/Z,MAAA0rC,EACA3xB,EAAA9Z,OAAA3D,EAAAoiC,WAGApiC,EAAA0D,MAAA+Z,EAAA/Z,MACA1D,EAAA2D,OAAA8Z,EAAA9Z,QAGA+/B,SAAA2Z,GAGAhlC,aAAA,WACA,IAAA4V,EAAA93B,KAAAiJ,QAAA6b,SACA,cAAAgT,GAAA,WAAAA,GAIA5e,KAAA,WACA,IAAArP,EAAA7J,KACAqN,EAAAxD,EAAAwD,IACA8Z,EAAAtd,EAAAZ,QAEA,GAAAke,EAAA4D,QAAA,CACA,IAQAihB,EAAAsb,EAAAC,EARAF,EAAAn1C,GAAAjJ,QAAAoI,WAAA8V,GACAvV,EAAAy1C,EAAAz1C,WACAqP,EAAArP,EAAA,EAAAuV,EAAAzI,QACArQ,EAAA,EACAT,EAAA/D,EAAA+D,IACAD,EAAA9D,EAAA8D,KACAG,EAAAjE,EAAAiE,OACAD,EAAAhE,EAAAgE,MAGAR,EAAAkP,UAAArK,GAAAtK,eAAAuf,EAAA+pB,UAAAlgC,GAAAO,OAAAb,kBACArD,EAAAoE,KAAA41C,EAAArmD,OAGA6I,EAAAqY,gBACAolC,EAAA35C,GAAAE,EAAAF,GAAA,EACA45C,EAAA35C,EAAAqT,EACA+qB,EAAAn+B,EAAAF,IAEA25C,EAAA,SAAAngC,EAAArC,SAAAnX,EAAAsT,EAAApT,EAAAoT,EACAsmC,EAAA35C,GAAAE,EAAAF,GAAA,EACAo+B,EAAAl+B,EAAAF,EACAS,EAAAtb,KAAAqC,IAAA,SAAA+xB,EAAArC,UAAA,QAGAzX,EAAAgC,OACAhC,EAAAylC,UAAAwU,EAAAC,GACAl6C,EAAA9H,OAAA8I,GACAhB,EAAA80B,UAAA,SACA90B,EAAA+0B,aAAA,SAEA,IAAAnc,EAAAkB,EAAAlB,KACA,GAAA/T,GAAA5K,QAAA2e,GAEA,IADA,IAAAxyB,EAAA,EACAO,EAAA,EAAmBA,EAAAiyB,EAAAnmB,SAAiB9L,EACpCqZ,EAAAg1B,SAAApc,EAAAjyB,GAAA,EAAAP,EAAAu4C,GACAv4C,GAAAme,OAGAvE,EAAAg1B,SAAApc,EAAA,IAAA+lB,GAGA3+B,EAAAmC,cAKA,SAAAg4C,GAAAp6C,EAAAq6C,GACA,IAAAxiC,EAAA,IAAAkiC,GAAA,CACA95C,IAAAD,EAAAC,IACApE,QAAAw+C,EACAr6C,UAGA+hB,GAAAK,UAAApiB,EAAA6X,EAAAwiC,GACAt4B,GAAAC,OAAAhiB,EAAA6X,GACA7X,EAAAs6C,WAAAziC,EAGA,IAwCAkT,GAAA,GACAkqB,GAAAmB,GACAr9B,GAAA2gC,GACA7hC,GA3CA,CACAje,GAAA,QASA+/C,SAAAI,GAEAH,WAAA,SAAA55C,GACA,IAAAq6C,EAAAr6C,EAAAnE,QAAAgc,MAEAwiC,GACAD,GAAAp6C,EAAAq6C,IAIA1b,aAAA,SAAA3+B,GACA,IAAAq6C,EAAAr6C,EAAAnE,QAAAgc,MACAyiC,EAAAt6C,EAAAs6C,WAEAD,GACAv1C,GAAA5I,QAAAm+C,EAAAz2C,GAAAO,OAAA0T,OAEAyiC,GACAv4B,GAAAK,UAAApiB,EAAAs6C,EAAAD,GACAC,EAAAz+C,QAAAw+C,GAEAD,GAAAp6C,EAAAq6C,IAEGC,IACHv4B,GAAAG,UAAAliB,EAAAs6C,UACAt6C,EAAAs6C,cAmDA,QAAAv0D,MA1CAglC,GAAAkqB,UACAlqB,GAAAhS,UACAgS,GAAAlT,SAOAijB,GAAAhhC,QAAAgL,GAtlKA,WAiZA,SAAAy1C,EAAAC,EAAAp0B,EAAAq0B,GACA,IAAAC,EAYA,MAXA,iBAAAF,GACAE,EAAA3lD,SAAAylD,EAAA,KAEA,IAAAA,EAAAx9C,QAAA,OAEA09C,IAAA,IAAAt0B,EAAA0B,WAAA2yB,KAGAC,EAAAF,EAGAE,EAOA,SAAAC,EAAA/kD,GACA,OAAAA,SAAA,SAAAA,EAUA,SAAAglD,EAAAC,EAAAC,EAAAC,GACA,IAAAl1C,EAAA+gB,SAAAo0B,YACAlzB,EAAAhjB,GAAAm2C,eAAAJ,GACAK,EAAAr1C,EAAAs1C,iBAAAN,GAAAC,GACAM,EAAAv1C,EAAAs1C,iBAAArzB,GAAAgzB,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAAhhD,OAAA8lB,kBAEA,OAAAg7B,GAAAC,EACA31D,KAAAD,IACA21D,EAAAd,EAAAW,EAAAL,EAAAE,GAAAQ,EACAD,EAAAf,EAAAa,EAAAtzB,EAAAizB,GAAAQ,GAGA,OA3bAz2C,GAAAyc,MAAA,SAAAi6B,EAAAC,GACA,GAAA32C,GAAA5K,QAAAshD,IAAAxpD,MAAAC,UAAAkrB,OACA,OAAAq+B,EAAAr+B,OAAAs+B,GAEA,IAAAC,EAAA,GAQA,OANA52C,GAAA/J,KAAAygD,EAAA,SAAAt+C,GACAu+C,EAAAv+C,IACAw+C,EAAA5zC,KAAA5K,KAIAw+C,GAEA52C,GAAAmD,UAAAjW,MAAAC,UAAAgW,UACA,SAAAhL,EAAAtC,EAAAyI,GACA,OAAAnG,EAAAgL,UAAAtN,EAAAyI,IAEA,SAAAnG,EAAAtC,EAAAyI,GACAA,OAAA3Q,IAAA2Q,EAAAnG,EAAAmG,EACA,QAAAxc,EAAA,EAAA2U,EAAA0B,EAAAvK,OAAuC9L,EAAA2U,IAAU3U,EACjD,GAAA+T,EAAAxI,KAAAiR,EAAAnG,EAAArW,KAAAqW,GACA,OAAArW,EAGA,UAEAke,GAAAmf,cAAA,SAAA03B,EAAAF,EAAAG,GAEA92C,GAAA7K,cAAA2hD,KACAA,GAAA,GAEA,QAAAh1D,EAAAg1D,EAAA,EAA8Bh1D,EAAA+0D,EAAAjpD,OAA0B9L,IAAA,CACxD,IAAAi1D,EAAAF,EAAA/0D,GACA,GAAA60D,EAAAI,GACA,OAAAA,IAIA/2C,GAAAg3C,kBAAA,SAAAH,EAAAF,EAAAG,GAEA92C,GAAA7K,cAAA2hD,KACAA,EAAAD,EAAAjpD,QAEA,QAAA9L,EAAAg1D,EAAA,EAA8Bh1D,GAAA,EAAQA,IAAA,CACtC,IAAAi1D,EAAAF,EAAA/0D,GACA,GAAA60D,EAAAI,GACA,OAAAA,IAMA/2C,GAAAuB,SAAA,SAAAjf,GACA,OAAA8N,MAAAF,WAAA5N,KAAAkT,SAAAlT,IAEA0d,GAAAikC,aAAA,SAAA3iD,EAAAC,EAAA01D,GACA,OAAAp2D,KAAAorB,IAAA3qB,EAAAC,GAAA01D,GAEAj3C,GAAAgkC,YAAA,SAAA1iD,EAAA21D,GACA,IAAAC,EAAAr2D,KAAAgN,MAAAvM,GACA,OAAA41D,EAAAD,EAAA31D,GAAA41D,EAAAD,EAAA31D,GAEA0e,GAAAlf,IAAA,SAAAqX,GACA,OAAAA,EAAAi2B,OAAA,SAAAttC,EAAAgQ,GACA,OAAAV,MAAAU,GAGAhQ,EAFAD,KAAAC,MAAAgQ,IAGG2E,OAAA2xC,oBAEHpnC,GAAApf,IAAA,SAAAuX,GACA,OAAAA,EAAAi2B,OAAA,SAAAxtC,EAAAkQ,GACA,OAAAV,MAAAU,GAGAlQ,EAFAC,KAAAD,MAAAkQ,IAGG2E,OAAA8lB,oBAEHvb,GAAAqiC,KAAAxhD,KAAAwhD,KACA,SAAA/gD,GACA,OAAAT,KAAAwhD,KAAA/gD,IAEA,SAAAA,GAEA,WADAA,OACA8O,MAAA9O,GACAA,EAEAA,EAAA,QAEA0e,GAAAs3B,MAAAz2C,KAAAy2C,MACA,SAAAh2C,GACA,OAAAT,KAAAy2C,MAAAh2C,IAEA,SAAAA,GACA,IAAA61D,EAAAt2D,KAAAu2D,IAAA91D,GAAAT,KAAAw2D,OAGAC,EAAAz2D,KAAAgN,MAAAspD,GACAI,EAAAj2D,IAAAT,KAAAQ,IAAA,GAAAi2D,GAEA,OAAAC,EAAAD,EAAAH,GAEAn3C,GAAAg8B,UAAA,SAAA1oC,GACA,OAAAA,GAAAzS,KAAAqC,GAAA,MAEA8c,GAAA4nC,UAAA,SAAA4P,GACA,OAAAA,GAAA,IAAA32D,KAAAqC,KAUA8c,GAAA+jC,eAAA,SAAAziD,GACA,GAAA0e,GAAAxK,SAAAlU,GAAA,CAKA,IAFA,IAAAizB,EAAA,EACAryB,EAAA,EACArB,KAAAgN,MAAAvM,EAAAizB,OAAAjzB,GACAizB,GAAA,GACAryB,IAEA,OAAAA,IAIA8d,GAAAkJ,kBAAA,SAAAuuC,EAAAC,GACA,IAAAC,EAAAD,EAAAp2D,EAAAm2D,EAAAn2D,EACAs2D,EAAAF,EAAAn2D,EAAAk2D,EAAAl2D,EACAs2D,EAAAh3D,KAAAsC,KAAAw0D,IAAAC,KAEAzuC,EAAAtoB,KAAAoC,MAAA20D,EAAAD,GAMA,OAJAxuC,GAAA,GAAAtoB,KAAAqC,KACAimB,GAAA,EAAAtoB,KAAAqC,IAGA,CACAimB,QACAC,SAAAyuC,IAGA73C,GAAAoqB,sBAAA,SAAAxO,EAAAC,GACA,OAAAh7B,KAAAsC,KAAAtC,KAAAQ,IAAAw6B,EAAAv6B,EAAAs6B,EAAAt6B,EAAA,GAAAT,KAAAQ,IAAAw6B,EAAAt6B,EAAAq6B,EAAAr6B,EAAA,KASAye,GAAA83C,WAAA,SAAAC,GACA,OAAAA,EAAA,WAWA/3C,GAAAy/B,YAAA,SAAAvkC,EAAAsiC,EAAAniC,GACA,IAAA+2B,EAAAl3B,EAAA88C,wBACAC,EAAA58C,EAAA,EACA,OAAAxa,KAAAgN,OAAA2vC,EAAAya,GAAA7lB,KAAA6lB,GAGAj4C,GAAAwY,YAAA,SAAA0/B,EAAAC,EAAAC,EAAAh2D,GAMA,IAAAmb,EAAA26C,EAAArsC,KAAAssC,EAAAD,EACAjtC,EAAAktC,EACAnmC,EAAAomC,EAAAvsC,KAAAssC,EAAAC,EAEAC,EAAAx3D,KAAAsC,KAAAtC,KAAAQ,IAAA4pB,EAAA3pB,EAAAic,EAAAjc,EAAA,GAAAT,KAAAQ,IAAA4pB,EAAA1pB,EAAAgc,EAAAhc,EAAA,IACA+2D,EAAAz3D,KAAAsC,KAAAtC,KAAAQ,IAAA2wB,EAAA1wB,EAAA2pB,EAAA3pB,EAAA,GAAAT,KAAAQ,IAAA2wB,EAAAzwB,EAAA0pB,EAAA1pB,EAAA,IAEAg3D,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAGAC,EAAAnoD,MAAAmoD,GAAA,EAAAA,EACAC,EAAApoD,MAAAooD,GAAA,EAAAA,EAEA,IAAAC,EAAAr2D,EAAAm2D,EACAG,EAAAt2D,EAAAo2D,EAEA,OACAj7C,SAAA,CACAjc,EAAA2pB,EAAA3pB,EAAAm3D,GAAAzmC,EAAA1wB,EAAAic,EAAAjc,GACAC,EAAA0pB,EAAA1pB,EAAAk3D,GAAAzmC,EAAAzwB,EAAAgc,EAAAhc,IAEAywB,KAAA,CACA1wB,EAAA2pB,EAAA3pB,EAAAo3D,GAAA1mC,EAAA1wB,EAAAic,EAAAjc,GACAC,EAAA0pB,EAAA1pB,EAAAm3D,GAAA1mC,EAAAzwB,EAAAgc,EAAAhc,MAIAye,GAAA24C,QAAAljD,OAAAkjD,SAAA,MACA34C,GAAAuY,oBAAA,SAAAnN,GAMA,IAUAtpB,EAAA82D,EAAAC,EAAAC,EA4BAC,EAAAC,EAAAC,EAAAC,EA0BAp9B,EAhEAq9B,GAAA/tC,GAAA,IAAAxU,IAAA,SAAAoG,GACA,OACA6D,MAAA7D,EAAAyD,OACA24C,OAAA,EACAC,GAAA,KAKAC,EAAAH,EAAAvrD,OAEA,IAAA9L,EAAA,EAAaA,EAAAw3D,IAAex3D,EAE5B,KADA+2D,EAAAM,EAAAr3D,IACA+e,MAAAgL,KAAA,CAMA,GAFA+sC,EAAA92D,EAAA,EAAAq3D,EAAAr3D,EAAA,SACAg3D,EAAAh3D,EAAAw3D,EAAA,EAAAH,EAAAr3D,EAAA,WACAg3D,EAAAj4C,MAAAgL,KAAA,CACA,IAAA0tC,EAAAT,EAAAj4C,MAAAvf,EAAAu3D,EAAAh4C,MAAAvf,EAGAu3D,EAAAO,OAAA,IAAAG,GAAAT,EAAAj4C,MAAAtf,EAAAs3D,EAAAh4C,MAAAtf,GAAAg4D,EAAA,GAGAX,KAAA/3C,MAAAgL,KACAgtC,EAAAQ,GAAAR,EAAAO,QACIN,KAAAj4C,MAAAgL,KACJgtC,EAAAQ,GAAAT,EAAAQ,OACItrD,KAAAu0C,KAAAuW,EAAAQ,UAAAtrD,KAAAu0C,KAAAwW,EAAAO,QACJP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAMA,IAAAt3D,EAAA,EAAaA,EAAAw3D,EAAA,IAAmBx3D,EAChC+2D,EAAAM,EAAAr3D,GACAg3D,EAAAK,EAAAr3D,EAAA,GACA+2D,EAAAh4C,MAAAgL,MAAAitC,EAAAj4C,MAAAgL,OAIA7L,GAAAikC,aAAA4U,EAAAO,OAAA,EAAAtrD,KAAA6qD,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,QACAF,EAAAr4D,KAAAQ,IAAA03D,EAAA,GAAAl4D,KAAAQ,IAAA23D,EAAA,KACA,IAIAC,EAAA,EAAAp4D,KAAAsC,KAAA+1D,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAKA,IAAAt3D,EAAA,EAAaA,EAAAw3D,IAAex3D,GAC5B+2D,EAAAM,EAAAr3D,IACA+e,MAAAgL,OAIA+sC,EAAA92D,EAAA,EAAAq3D,EAAAr3D,EAAA,QACAg3D,EAAAh3D,EAAAw3D,EAAA,EAAAH,EAAAr3D,EAAA,QACA82D,MAAA/3C,MAAAgL,OACAiQ,GAAA+8B,EAAAh4C,MAAAvf,EAAAs3D,EAAA/3C,MAAAvf,GAAA,EACAu3D,EAAAh4C,MAAA/C,sBAAA+6C,EAAAh4C,MAAAvf,EAAAw6B,EACA+8B,EAAAh4C,MAAA7C,sBAAA66C,EAAAh4C,MAAAtf,EAAAu6B,EAAA+8B,EAAAQ,IAEAP,MAAAj4C,MAAAgL,OACAiQ,GAAAg9B,EAAAj4C,MAAAvf,EAAAu3D,EAAAh4C,MAAAvf,GAAA,EACAu3D,EAAAh4C,MAAA9C,kBAAA86C,EAAAh4C,MAAAvf,EAAAw6B,EACA+8B,EAAAh4C,MAAA5C,kBAAA46C,EAAAh4C,MAAAtf,EAAAu6B,EAAA+8B,EAAAQ,MAIAr5C,GAAAyY,SAAA,SAAAi+B,EAAA/hD,EAAAg9C,GACA,OAAAA,EACAh9C,GAAA+hD,EAAA9oD,OAAA,EAAA8oD,EAAA,GAAAA,EAAA/hD,EAAA,GAEAA,GAAA+hD,EAAA9oD,OAAA,EAAA8oD,IAAA9oD,OAAA,GAAA8oD,EAAA/hD,EAAA,IAEAqL,GAAA4L,aAAA,SAAA8qC,EAAA/hD,EAAAg9C,GACA,OAAAA,EACAh9C,GAAA,EAAA+hD,IAAA9oD,OAAA,GAAA8oD,EAAA/hD,EAAA,GAEAA,GAAA,EAAA+hD,EAAA,GAAAA,EAAA/hD,EAAA,IAGAqL,GAAA8jC,QAAA,SAAA/xB,EAAAlkB,GACA,IAAAspD,EAAAt2D,KAAAmB,MAAAge,GAAAs3B,MAAAvlB,IACAynC,EAAAznC,EAAAlxB,KAAAQ,IAAA,GAAA81D,GAuBA,OApBAtpD,EACA2rD,EAAA,IACA,EACIA,EAAA,EACJ,EACIA,EAAA,EACJ,EAEA,GAEGA,GAAA,EACH,EACGA,GAAA,EACH,EACGA,GAAA,EACH,EAEA,IAGA34D,KAAAQ,IAAA,GAAA81D,IAGAn3C,GAAAqD,iBACA,oBAAAxO,OACA,SAAAgB,GACAA,KAGAhB,OAAAoO,uBACApO,OAAA4kD,6BACA5kD,OAAA6kD,0BACA7kD,OAAA8kD,wBACA9kD,OAAA+kD,yBACA,SAAA/jD,GACA,OAAAhB,OAAAglD,WAAAhkD,EAAA,SAIAmK,GAAA6a,oBAAA,SAAAi/B,EAAA5+C,GACA,IAAAyN,EAAA0D,EACAkI,EAAAulC,EAAAC,eAAAD,EACA55C,EAAA45C,EAAA7lD,QAAA6lD,EAAAE,WACAC,EAAA/5C,EAAAg6C,wBAEAC,EAAA5lC,EAAA4lC,QACAA,KAAAvsD,OAAA,GACA+a,EAAAwxC,EAAA,GAAAC,QACA/tC,EAAA8tC,EAAA,GAAAE,UAGA1xC,EAAA4L,EAAA6lC,QACA/tC,EAAAkI,EAAA8lC,SAMA,IAAA7gB,EAAAtpC,WAAA8P,GAAAghB,SAAA9gB,EAAA,iBACAu5B,EAAAvpC,WAAA8P,GAAAghB,SAAA9gB,EAAA,gBACAw5B,EAAAxpC,WAAA8P,GAAAghB,SAAA9gB,EAAA,kBACAy5B,EAAAzpC,WAAA8P,GAAAghB,SAAA9gB,EAAA,mBACA7E,EAAA4+C,EAAAt+C,MAAAs+C,EAAAx+C,KAAA+9B,EAAAE,EACAp+B,EAAA2+C,EAAAr+C,OAAAq+C,EAAAv+C,IAAA+9B,EAAAE,EAOA,OAHAhxB,EAAA9nB,KAAAgN,OAAA8a,EAAAsxC,EAAAx+C,KAAA+9B,GAAA,EAAAt5B,EAAA7E,MAAAH,EAAA88C,yBACA3rC,EAAAxrB,KAAAgN,OAAAwe,EAAA4tC,EAAAv+C,IAAA+9B,GAAA,EAAAv5B,EAAA5E,OAAAJ,EAAA88C,yBAEA,CACA12D,EAAAqnB,EACApnB,EAAA8qB,IAuDArM,GAAAs6C,mBAAA,SAAAvE,GACA,OAAAD,EAAAC,EAAA,4BAGA/1C,GAAAu6C,oBAAA,SAAAxE,GACA,OAAAD,EAAAC,EAAA,8BAKA/1C,GAAAw6C,kBAAA,SAAA13B,EAAAtW,EAAAiuC,GAGA,OAFAjuC,EAAAxM,GAAAghB,SAAA8B,EAAAtW,IAEAtU,QAAA,QAAAuiD,EAAAxqD,SAAAuc,EAAA,QAAAvc,SAAAuc,EAAA,KAKAxM,GAAAm2C,eAAA,SAAAJ,GACA,IAAA2E,EAAA3E,EAAA/yB,WAIA,OAHA03B,GAAA,wBAAAA,EAAAnqD,aACAmqD,IAAAC,MAEAD,GAEA16C,GAAA6yB,gBAAA,SAAAkjB,GACA,IAAAjzB,EAAA9iB,GAAAm2C,eAAAJ,GACA,IAAAjzB,EACA,OAAAizB,EAAA9yB,YAGA,IAAAA,EAAAH,EAAAG,YACAuW,EAAAx5B,GAAAw6C,kBAAA13B,EAAA,eAAAG,GACAyW,EAAA15B,GAAAw6C,kBAAA13B,EAAA,gBAAAG,GAEAjiC,EAAAiiC,EAAAuW,EAAAE,EACAkhB,EAAA56C,GAAAs6C,mBAAAvE,GACA,OAAA3lD,MAAAwqD,GAAA55D,EAAAH,KAAAD,IAAAI,EAAA45D,IAEA56C,GAAA+yB,iBAAA,SAAAgjB,GACA,IAAAjzB,EAAA9iB,GAAAm2C,eAAAJ,GACA,IAAAjzB,EACA,OAAAizB,EAAA8E,aAGA,IAAAA,EAAA/3B,EAAA+3B,aACAphB,EAAAz5B,GAAAw6C,kBAAA13B,EAAA,cAAA+3B,GACAlhB,EAAA35B,GAAAw6C,kBAAA13B,EAAA,iBAAA+3B,GAEA58D,EAAA48D,EAAAphB,EAAAE,EACAmhB,EAAA96C,GAAAu6C,oBAAAxE,GACA,OAAA3lD,MAAA0qD,GAAA78D,EAAA4C,KAAAD,IAAA3C,EAAA68D,IAEA96C,GAAAghB,SAAA,SAAAa,EAAAd,GACA,OAAAc,EAAAk5B,aACAl5B,EAAAk5B,aAAAh6B,GACAe,SAAAo0B,YAAAG,iBAAAx0B,EAAA,MAAAm5B,iBAAAj6B,IAEA/gB,GAAAmyB,YAAA,SAAAj3B,EAAA+/C,GACA,IAAAC,EAAAhgD,EAAA88C,wBAAAiD,GAAA,oBAAApmD,eAAAu9B,kBAAA,EACA,OAAA8oB,EAAA,CAIA,IAAAh7C,EAAAhF,EAAAgF,OACA5E,EAAAJ,EAAAI,OACAD,EAAAH,EAAAG,MAEA6E,EAAA5E,SAAA4/C,EACAh7C,EAAA7E,QAAA6/C,EACAhgD,EAAAC,IAAAhL,MAAA+qD,KAKAh7C,EAAAhE,MAAAZ,QAAA4E,EAAAhE,MAAAb,QACA6E,EAAAhE,MAAAZ,SAAA,KACA4E,EAAAhE,MAAAb,QAAA,QAIA2E,GAAA0uB,WAAA,SAAAysB,EAAAx7C,EAAAF,GACA,OAAAE,EAAA,IAAAw7C,EAAA,MAAA17C,GAEAO,GAAAm4B,YAAA,SAAAh9B,EAAAoE,EAAA67C,EAAAr0B,GAEA,IAAAhiB,GADAgiB,KAAA,IACAhiB,KAAAgiB,EAAAhiB,MAAA,GACAs2C,EAAAt0B,EAAAu0B,eAAAv0B,EAAAu0B,gBAAA,GAEAv0B,EAAAxnB,WACAwF,EAAAgiB,EAAAhiB,KAAA,GACAs2C,EAAAt0B,EAAAu0B,eAAA,GACAv0B,EAAAxnB,QAGApE,EAAAoE,OACA,IAAAg8C,EAAA,EACAv7C,GAAA/J,KAAAmlD,EAAA,SAAAI,GAEAA,UAAA,IAAAx7C,GAAA5K,QAAAomD,GACAD,EAAAv7C,GAAAyuB,YAAAtzB,EAAA4J,EAAAs2C,EAAAE,EAAAC,GACIx7C,GAAA5K,QAAAomD,IAGJx7C,GAAA/J,KAAAulD,EAAA,SAAAC,GAEAA,SAAAz7C,GAAA5K,QAAAqmD,KACAF,EAAAv7C,GAAAyuB,YAAAtzB,EAAA4J,EAAAs2C,EAAAE,EAAAE,QAMA,IAAAC,EAAAL,EAAAztD,OAAA,EACA,GAAA8tD,EAAAN,EAAAxtD,OAAA,CACA,QAAA9L,EAAA,EAAkBA,EAAA45D,EAAW55D,WAC7BijB,EAAAs2C,EAAAv5D,IAEAu5D,EAAAj4C,OAAA,EAAAs4C,GAEA,OAAAH,GAEAv7C,GAAAyuB,YAAA,SAAAtzB,EAAA4J,EAAAs2C,EAAAE,EAAAzsD,GACA,IAAAklD,EAAAjvC,EAAAjW,GAQA,OAPAklD,IACAA,EAAAjvC,EAAAjW,GAAAqM,EAAAszB,YAAA3/B,GAAAuM,MACAggD,EAAAr4C,KAAAlU,IAEAklD,EAAAuH,IACAA,EAAAvH,GAEAuH,GAEAv7C,GAAA28B,mBAAA,SAAAye,GACA,IAAAO,EAAA,EAQA,OAPA37C,GAAA/J,KAAAmlD,EAAA,SAAAI,GACAx7C,GAAA5K,QAAAomD,IACAA,EAAA5tD,OAAA+tD,IACAA,EAAAH,EAAA5tD,UAIA+tD,GAGA37C,GAAAo4B,MAAArjC,EAKA,SAAAjE,GAMA,OAJAA,aAAA8qD,iBACA9qD,EAAAgO,GAAAO,OAAAd,cAGAxJ,EAAAjE,IAVA,SAAAA,GAEA,OADAqD,QAAAC,MAAA,uBACAtD,GAWAkP,GAAAqH,cAAA,SAAAw0C,GAEA,OAAAA,aAAAC,eAAAD,aAAAD,eACAC,EACA77C,GAAAo4B,MAAAyjB,GAAA/oD,SAAA,IAAAD,OAAA,IAAAvD,aAo/IAysD,GAEA/lB,GAAAgmB,UAAAhlB,GACAhB,GAAAimB,UAAAl6C,GACAi0B,GAAAkmB,iBAAA35C,GACAyzB,GAAA1b,eACA0b,GAAAjyB,kBAAAwE,GACAytB,GAAA53B,SAAAU,GACAk3B,GAAA71B,QAAAqB,GACAw0B,GAAAjvB,YACAivB,GAAAmmB,YAAAjgC,GACA8Z,GAAAomB,QAAAn/B,GACA+Y,GAAA3R,YACA2R,GAAA/P,QAAAC,GACA8P,GAAAqmB,MAAA9iB,GACAvD,GAAAsmB,aAAAp1B,GACA8O,GAAAumB,MAAArlB,GACAlB,GAAAwmB,QAAArrB,GAIA6E,GAAAhhC,QAAAiB,KAAA0O,GAAA,SAAAxU,EAAA2D,GACAkiC,GAAAsmB,aAAAl1B,kBAAAtzB,EAAA3D,IAAA8xC,aAQAhc,GACAA,GAAA/oC,eAAA+D,KACA+0C,GAAA/P,QAAAI,SAAAJ,GAAAhlC,KAIA+0C,GAAA3R,SAAAhkB,aAEA,IAAAo8C,GAAAzmB,GAyGA,MAxGA,oBAAAnhC,SACAA,OAAAi9B,MAAAkE,IAYAA,GAAAlE,MAAAkE,GASAA,GAAA0c,OAAAzsB,GAAAhS,OAAA4gC,SASA7e,GAAAif,MAAAhvB,GAAAlT,MAAA8hC,SASA7e,GAAA0mB,cAAA1mB,GAAA/P,QAUA+P,GAAA2mB,WAAA3mB,GAAA71B,QAAA5I,OAAA,IASAy+B,GAAA4mB,cAAA5mB,GAAAhhC,QAAAkL,OASA81B,GAAA6mB,cAAA7mB,GAAAomB,QASApmB,GAAA8mB,gBAAA5a,GAQAlM,GAAAhhC,QAAAiB,KACA,CACA,MACA,SACA,WACA,OACA,YACA,QACA,WAEA,SAAA8mD,GACA/mB,GAAA+mB,GAAA,SAAA5hD,EAAA6hD,GACA,WAAAhnB,GAAA76B,EAAA66B,GAAAhhC,QAAAkC,MAAA8lD,GAAA,GAA0E,CAC1ElpD,KAAAipD,EAAAxoD,OAAA,GAAA0oD,cAAAF,EAAA3vD,MAAA,SAMAqvD,GA90c4DS,CAAA,WAAwC,IAAM,OAAQC,EAAQ,QAAY,MAAA5oC,KAA1E,wBCP5D,SAAA6oC,EAAAC,GACA,IAAA9oC,EAAA,IAAA2f,MAAA,uBAAAmpB,EAAA,KAEA,MADA9oC,EAAA+oC,KAAA,mBACA/oC,EAEA6oC,EAAA/mD,KAAA,WAAuC,UACvC+mD,EAAAv9C,QAAAu9C,EACArgE,EAAAC,QAAAogE,EACAA,EAAAtoD,GAAA,2BCRA/X,EAAAC,QAAA,SAAAD,GAoBA,OAnBAA,EAAAwgE,kBACAxgE,EAAAygE,UAAA,aACAzgE,EAAA0gE,MAAA,GAEA1gE,EAAA2gE,WAAA3gE,EAAA2gE,SAAA,IACAroD,OAAA2M,eAAAjlB,EAAA,UACAypB,YAAA,EACAvE,IAAA,WACA,OAAAllB,EAAAoB,KAGAkX,OAAA2M,eAAAjlB,EAAA,MACAypB,YAAA,EACAvE,IAAA,WACA,OAAAllB,EAAA+E,KAGA/E,EAAAwgE,gBAAA,GAEAxgE,gPChBM4gE,qLAGE,IAwGIC,EAvGJ,GADIA,EAAe97B,SAASgD,eAAe,YAC1B,CACb,IAAID,EAAS,CACT/wB,KAAM,MACNiR,KAAM,CACF6K,OAAQ/a,OAAOgpD,SACf74C,SAAU,CAAC,CACP2K,MAAO,MACPrI,gBAAiB,UACjBC,YAAa,UACbu2C,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,UACvBC,iBAAkB,EAClBn5C,KAAMlQ,OAAOspD,YAGrBpnD,QAAS,CACL66B,YAAY,EACZ/e,SAAU,CACNjE,KAAM,SAEVD,MAAO,CACHC,KAAM,SAEVqF,OAAQ,CACJ4E,SAAS,KAKjB1d,EAAMyiD,EAAa74B,WAAW,MAClC,IAAI+M,IAAM32B,EAAK0pB,GAGnB,GADI+4B,EAAe97B,SAASgD,eAAe,gBAC1B,CACTD,EAAS,CACT/wB,KAAM,OACNiR,KAAM,CACF6K,OAAQ,CAAC,WAAY,WAAY,aAAc,WAAY,WAAY,WAAY,WAAY,YAAa,WAAY,WAAY,WAAY,YAChJ5K,SAAU,CAAC,CACP2K,MAAO,SACPrI,gBAAiB,UACjBC,YAAa,UACbu2C,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,UACvBC,iBAAkB,EAClBn5C,KAAM,CACF,YACA,SACA,YACA,WACA,YACA,OACA,EACA,EACA,EACA,EACA,EACA,IAEL,CACC4K,MAAO,UACPrI,gBAAiB,UACjBC,YAAa,UACbu2C,iBAAkB,UAClBC,qBAAsB,UACtBC,0BAA2B,UAC3BC,sBAAuB,UACvBC,iBAAkB,EAClBn5C,KAAM,CACF,YACA,SACA,YACA,YACA,YACA,MACA,EACA,EACA,EACA,EACA,EACA,MAIZhO,QAAS,CACL66B,YAAY,EACZ/e,SAAU,CACNjE,KAAM,SAEVD,MAAO,CACHC,KAAM,WAKdzT,EAAMyiD,EAAa74B,WAAW,MACnC,IAAI+M,IAAM32B,EAAK0pB,GAIlB,GADI+4B,EAAe97B,SAASgD,eAAe,mBAC1B,CACTD,EAAS,CACT/wB,KAAM,OACNiR,KAAM,CACF6K,OAAS/a,OAAOupD,gBAChBp5C,SAAU,CAAC,CACP2K,MAAO,UACP5K,KAAMlQ,OAAOwpD,YACb/2C,gBAAiB,oBACjBC,YAAa,oBACb3K,MAAM,EACN0hD,YAAa,EACbC,iBAAkB,IACnB,CACC5uC,MAAO,SACP5K,KAAMlQ,OAAO2pD,WACbl3C,gBAAiB,oBACjBC,YAAa,oBACb3K,MAAM,EACN0hD,YAAa,EACbC,iBAAkB,MAK1BxnD,QAAS,CACL66B,YAAY,EACZ3d,OAAQ,CACJrB,SAAU,OAEdjE,MAAO,CACHC,KAAM,SAEVjK,OAAQ,CACJC,MAAO,CAAC,CACJiU,SAAS,EACTggB,WAAY,CACRhgB,SAAS,EACTigB,YAAa,WAGrBh0B,MAAO,CAAC,CACJ+T,SAAS,EACTggB,WAAY,CACRhgB,SAAS,EACTigB,YAAa,gBAIzB/lB,MAAO,CACH8F,SAAS,EACT9E,KAAM,iCAId5Y,EAAMyiD,EAAa74B,WAAW,MAClC,IAAI+M,IAAM32B,EAAK0pB,iDAa3BhwB,OAAO8oD,UAAYA,2BCrLnB,SAAA5gE,GAGgEA,EAAAC,QAG/D,WAAqB,aAEtB,IAAAyhE,EA6GAC,EA3GA,SAAAC,IACA,OAAAF,EAAAzoD,MAAA,KAAA1I,WASA,SAAA8H,EAAA82C,GACA,OAAAA,aAAAh/C,OAAA,mBAAAmI,OAAAlI,UAAAoD,SAAAlD,KAAA6+C,GAGA,SAAA32C,EAAA22C,GAGA,aAAAA,GAAA,oBAAA72C,OAAAlI,UAAAoD,SAAAlD,KAAA6+C,GAiBA,SAAA0S,EAAA1S,GACA,gBAAAA,EAGA,SAAA3qC,EAAA2qC,GACA,uBAAAA,GAAA,oBAAA72C,OAAAlI,UAAAoD,SAAAlD,KAAA6+C,GAGA,SAAA2S,EAAA3S,GACA,OAAAA,aAAArpC,MAAA,kBAAAxN,OAAAlI,UAAAoD,SAAAlD,KAAA6+C,GAGA,SAAAt1C,EAAAkoD,EAAAhpD,GACA,IAAAhU,EAAA6kB,EAAA,GACA,IAAA7kB,EAAA,EAAmBA,EAAAg9D,EAAAlxD,SAAgB9L,EACnC6kB,EAAA3D,KAAAlN,EAAAgpD,EAAAh9D,OAEA,OAAA6kB,EAGA,SAAAo4C,EAAAh8D,EAAApC,GACA,OAAA0U,OAAAlI,UAAAjQ,eAAAmQ,KAAAtK,EAAApC,GAGA,SAAA4W,EAAAxU,EAAApC,GACA,QAAAmB,KAAAnB,EACAo+D,EAAAp+D,EAAAmB,KACAiB,EAAAjB,GAAAnB,EAAAmB,IAYA,OARAi9D,EAAAp+D,EAAA,cACAoC,EAAAwN,SAAA5P,EAAA4P,UAGAwuD,EAAAp+D,EAAA,aACAoC,EAAAitD,QAAArvD,EAAAqvD,SAGAjtD,EAGA,SAAAi8D,EAAA9S,EAAAzV,EAAAwoB,EAAAC,GACA,OAAAC,GAAAjT,EAAAzV,EAAAwoB,EAAAC,GAAA,GAAAE,MAuBA,SAAAC,EAAAz8D,GAIA,OAHA,MAAAA,EAAA08D,MACA18D,EAAA08D,IApBA,CACAC,OAAA,EACAC,aAAA,GACAC,YAAA,GACAC,UAAA,EACAC,cAAA,EACAC,WAAA,EACAC,aAAA,KACAC,eAAA,EACAC,iBAAA,EACAC,KAAA,EACAC,gBAAA,GACAC,SAAA,KACAC,SAAA,EACAC,iBAAA,IAQAx9D,EAAA08D,IAqBA,SAAAtuD,EAAApO,GACA,SAAAA,EAAAy9D,SAAA,CACA,IAAAC,EAAAjB,EAAAz8D,GACA29D,EAAA7B,EAAArxD,KAAAizD,EAAAL,gBAAA,SAAAn+D,GACA,aAAAA,IAEA0+D,GAAApwD,MAAAxN,EAAA69D,GAAAC,YACAJ,EAAAZ,SAAA,IACAY,EAAAf,QACAe,EAAAT,eACAS,EAAAK,iBACAL,EAAAF,kBACAE,EAAAV,YACAU,EAAAR,gBACAQ,EAAAP,mBACAO,EAAAJ,UAAAI,EAAAJ,UAAAK,GASA,GAPA39D,EAAAg+D,UACAJ,KACA,IAAAF,EAAAX,eACA,IAAAW,EAAAd,aAAA5xD,aACAD,IAAA2yD,EAAAO,SAGA,MAAAxrD,OAAAyrD,UAAAzrD,OAAAyrD,SAAAl+D,GAIA,OAAA49D,EAHA59D,EAAAy9D,SAAAG,EAMA,OAAA59D,EAAAy9D,SAGA,SAAAU,EAAAT,GACA,IAAA19D,EAAAo8D,EAAAxrC,KAQA,OAPA,MAAA8sC,EACA/oD,EAAA8nD,EAAAz8D,GAAA09D,GAGAjB,EAAAz8D,GAAAm9D,iBAAA,EAGAn9D,EA3DA87D,EADAxxD,MAAAC,UAAAuxD,KACAxxD,MAAAC,UAAAuxD,KAEA,SAAAsC,GAIA,IAHA,IAAA5+D,EAAAiT,OAAAvH,MACAsI,EAAAhU,EAAAwL,SAAA,EAEA9L,EAAA,EAA2BA,EAAAsU,EAAStU,IACpC,GAAAA,KAAAM,GAAA4+D,EAAA3zD,KAAAS,KAAA1L,EAAAN,KAAAM,GACA,SAIA,UAoDA,IAAA6+D,EAAAtC,EAAAsC,iBAAA,GAEA,SAAAC,EAAAxzD,EAAAD,GACA,IAAA3L,EAAAoS,EAAArS,EAiCA,GA/BA+8D,EAAAnxD,EAAA0zD,oBACAzzD,EAAAyzD,iBAAA1zD,EAAA0zD,kBAEAvC,EAAAnxD,EAAA2zD,MACA1zD,EAAA0zD,GAAA3zD,EAAA2zD,IAEAxC,EAAAnxD,EAAA4zD,MACA3zD,EAAA2zD,GAAA5zD,EAAA4zD,IAEAzC,EAAAnxD,EAAA6zD,MACA5zD,EAAA4zD,GAAA7zD,EAAA6zD,IAEA1C,EAAAnxD,EAAAmzD,WACAlzD,EAAAkzD,QAAAnzD,EAAAmzD,SAEAhC,EAAAnxD,EAAA8zD,QACA7zD,EAAA6zD,KAAA9zD,EAAA8zD,MAEA3C,EAAAnxD,EAAA+zD,UACA9zD,EAAA8zD,OAAA/zD,EAAA+zD,QAEA5C,EAAAnxD,EAAAg0D,WACA/zD,EAAA+zD,QAAAh0D,EAAAg0D,SAEA7C,EAAAnxD,EAAA6xD,OACA5xD,EAAA4xD,IAAAD,EAAA5xD,IAEAmxD,EAAAnxD,EAAAi0D,WACAh0D,EAAAg0D,QAAAj0D,EAAAi0D,SAGAT,EAAArzD,OAAA,EACA,IAAA9L,EAAA,EAAuBA,EAAAm/D,EAAArzD,OAA6B9L,IACpDoS,EAAA+sD,EAAAn/D,GAEA88D,EADA/8D,EAAA4L,EAAAyG,MAEAxG,EAAAwG,GAAArS,GAKA,OAAA6L,EAGA,IAAAi0D,GAAA,EAGA,SAAAC,EAAA/8B,GACAq8B,EAAApzD,KAAA+2B,GACA/2B,KAAA2yD,GAAA,IAAA59C,KAAA,MAAAgiB,EAAA47B,GAAA57B,EAAA47B,GAAAC,UAAAltC,KACA1lB,KAAAkD,YACAlD,KAAA2yD,GAAA,IAAA59C,KAAA2Q,OAIA,IAAAmuC,IACAA,GAAA,EACAhD,EAAAkD,aAAA/zD,MACA6zD,GAAA,GAIA,SAAAG,EAAAnxD,GACA,OAAAA,aAAAixD,GAAA,MAAAjxD,GAAA,MAAAA,EAAAwwD,iBAGA,SAAAY,EAAAC,GACA,OAAAA,EAAA,EAEAnhE,KAAAgiD,KAAAmf,IAAA,EAEAnhE,KAAAmB,MAAAggE,GAIA,SAAAC,EAAAC,GACA,IAAAC,GAAAD,EACApxD,EAAA,EAMA,OAJA,IAAAqxD,GAAA3sD,SAAA2sD,KACArxD,EAAAixD,EAAAI,IAGArxD,EAIA,SAAAsxD,EAAAC,EAAAC,EAAAC,GACA,IAGAzgE,EAHAsU,EAAAvV,KAAAD,IAAAyhE,EAAAz0D,OAAA00D,EAAA10D,QACA40D,EAAA3hE,KAAAorB,IAAAo2C,EAAAz0D,OAAA00D,EAAA10D,QACA60D,EAAA,EAEA,IAAA3gE,EAAA,EAAmBA,EAAAsU,EAAStU,KAC5BygE,GAAAF,EAAAvgE,KAAAwgE,EAAAxgE,KACAygE,GAAAN,EAAAI,EAAAvgE,MAAAmgE,EAAAK,EAAAxgE,MACA2gE,IAGA,OAAAA,EAAAD,EAGA,SAAAhV,EAAAkV,IACA,IAAA/D,EAAAgE,6BACA,oBAAAxuD,iBAAAq5C,MACAr5C,QAAAq5C,KAAA,wBAAAkV,GAIA,SAAAlF,EAAAkF,EAAA5sD,GACA,IAAA8sD,GAAA,EAEA,OAAArrD,EAAA,WAIA,GAHA,MAAAonD,EAAAkE,oBACAlE,EAAAkE,mBAAA,KAAAH,GAEAE,EAAA,CAGA,IAFA,IACA31D,EADArP,EAAA,GAEAkE,EAAA,EAA+BA,EAAAwL,UAAAM,OAAsB9L,IAAA,CAErD,GADAmL,EAAA,GACA,iBAAAK,UAAAxL,GAAA,CAEA,QAAA+K,KADAI,GAAA,MAAAnL,EAAA,KACAwL,UAAA,GACAL,GAAAJ,EAAA,KAAAS,UAAA,GAAAT,GAAA,KAEAI,IAAAG,MAAA,WAEAH,EAAAK,UAAAxL,GAEAlE,EAAAolB,KAAA/V,GAEAugD,EAAAkV,EAAA,gBAAAx1D,MAAAC,UAAAC,MAAAC,KAAAzP,GAAAo2B,KAAA,cAAAkgB,OAAA/kB,OACAyzC,GAAA,EAEA,OAAA9sD,EAAAE,MAAAlI,KAAAR,YACSwI,GAGT,IAsEAO,EAtEAysD,EAAA,GAEA,SAAAC,EAAAtyD,EAAAiyD,GACA,MAAA/D,EAAAkE,oBACAlE,EAAAkE,mBAAApyD,EAAAiyD,GAEAI,EAAAryD,KACA+8C,EAAAkV,GACAI,EAAAryD,IAAA,GAOA,SAAAuyD,EAAA9W,GACA,OAAAA,aAAA+W,UAAA,sBAAA5tD,OAAAlI,UAAAoD,SAAAlD,KAAA6+C,GAsBA,SAAAgX,EAAAC,EAAAC,GACA,IAA2BlvD,EAA3ByS,EAAApP,EAAA,GAA2B4rD,GAC3B,IAAAjvD,KAAAkvD,EACArE,EAAAqE,EAAAlvD,KACAqB,EAAA4tD,EAAAjvD,KAAAqB,EAAA6tD,EAAAlvD,KACAyS,EAAAzS,GAAA,GACAqD,EAAAoP,EAAAzS,GAAAivD,EAAAjvD,IACAqD,EAAAoP,EAAAzS,GAAAkvD,EAAAlvD,KACiB,MAAAkvD,EAAAlvD,GACjByS,EAAAzS,GAAAkvD,EAAAlvD,UAEAyS,EAAAzS,IAIA,IAAAA,KAAAivD,EACApE,EAAAoE,EAAAjvD,KACA6qD,EAAAqE,EAAAlvD,IACAqB,EAAA4tD,EAAAjvD,MAEAyS,EAAAzS,GAAAqD,EAAA,GAAqCoP,EAAAzS,KAGrC,OAAAyS,EAGA,SAAA08C,EAAAx+B,GACA,MAAAA,GACA/2B,KAAAoU,IAAA2iB,GAtDA85B,EAAAgE,6BAAA,EACAhE,EAAAkE,mBAAA,KA4DAxsD,EADAhB,OAAAgB,KACAhB,OAAAgB,KAEA,SAAA1F,GACA,IAAA7O,EAAA6kB,EAAA,GACA,IAAA7kB,KAAA6O,EACAouD,EAAApuD,EAAA7O,IACA6kB,EAAA3D,KAAAlhB,GAGA,OAAA6kB,GAoFA,IAAA28C,EAAA,GAEA,SAAAC,EAAA9f,EAAA+f,GACA,IAAAC,EAAAhgB,EAAAwZ,cACAqG,EAAAG,GAAAH,EAAAG,EAAA,KAAAH,EAAAE,GAAA/f,EAGA,SAAAigB,EAAAC,GACA,uBAAAA,EAAAL,EAAAK,IAAAL,EAAAK,EAAA1G,oBAAAtvD,EAGA,SAAAi2D,EAAAC,GACA,IACAC,EACA5vD,EAFA6vD,EAAA,GAIA,IAAA7vD,KAAA2vD,EACA9E,EAAA8E,EAAA3vD,KACA4vD,EAAAJ,EAAAxvD,MAEA6vD,EAAAD,GAAAD,EAAA3vD,IAKA,OAAA6vD,EAGA,IAAAC,EAAA,GAEA,SAAAC,EAAAxgB,EAAAygB,GACAF,EAAAvgB,GAAAygB,EAcA,SAAAC,EAAAnC,EAAAoC,EAAAC,GACA,IAAAC,EAAA,GAAAzjE,KAAAorB,IAAA+1C,GACAuC,EAAAH,EAAAE,EAAA12D,OACAy0C,EAAA2f,GAAA,EACA,OAAA3f,EAAAgiB,EAAA,YACAxjE,KAAAQ,IAAA,GAAAR,KAAAC,IAAA,EAAAyjE,IAAAh0D,WAAA+E,OAAA,GAAAgvD,EAGA,IAAAE,EAAA,uLAEAC,EAAA,6CAEAC,EAAA,GAEAC,EAAA,GAMA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAlvD,GACA,IAAA7I,EAAA6I,EACA,iBAAAA,IACA7I,EAAA,WACA,OAAAc,KAAA+H,OAGAgvD,IACAF,EAAAE,GAAA73D,GAEA83D,IACAH,EAAAG,EAAA,eACA,OAAAX,EAAAn3D,EAAAgJ,MAAAlI,KAAAR,WAAAw3D,EAAA,GAAAA,EAAA,MAGAC,IACAJ,EAAAI,GAAA,WACA,OAAAj3D,KAAAk3D,aAAAD,QAAA/3D,EAAAgJ,MAAAlI,KAAAR,WAAAu3D,KAiCA,SAAAI,EAAAriE,EAAA6zC,GACA,OAAA7zC,EAAAoO,WAIAylC,EAAAyuB,EAAAzuB,EAAA7zC,EAAAoiE,cACAN,EAAAjuB,GAAAiuB,EAAAjuB,IA3BA,SAAAA,GACA,IAAA30C,EAAA8L,EARAs+C,EAQA/zC,EAAAs+B,EAAA1mC,MAAAy0D,GAEA,IAAA1iE,EAAA,EAAA8L,EAAAuK,EAAAvK,OAA0C9L,EAAA8L,EAAY9L,IACtD6iE,EAAAxsD,EAAArW,IACAqW,EAAArW,GAAA6iE,EAAAxsD,EAAArW,IAEAqW,EAAArW,IAdAoqD,EAcA/zC,EAAArW,IAbAiO,MAAA,YACAm8C,EAAAiZ,QAAA,eAEAjZ,EAAAiZ,QAAA,UAcA,gBAAAC,GACA,IAAAtjE,EAAAujE,EAAA,GACA,IAAAvjE,EAAA,EAAuBA,EAAA8L,EAAY9L,IACnCujE,GAAArC,EAAA7qD,EAAArW,IAAAqW,EAAArW,GAAAuL,KAAA+3D,EAAA3uB,GAAAt+B,EAAArW,GAEA,OAAAujE,GAWAC,CAAA7uB,GAEAiuB,EAAAjuB,GAAA7zC,IANAA,EAAAoiE,aAAAO,cASA,SAAAL,EAAAzuB,EAAAwoB,GACA,IAAAn9D,EAAA,EAEA,SAAA0jE,EAAAtZ,GACA,OAAA+S,EAAAwG,eAAAvZ,MAIA,IADAuY,EAAAiB,UAAA,EACA5jE,GAAA,GAAA2iE,EAAAkB,KAAAlvB,IACAA,IAAA0uB,QAAAV,EAAAe,GACAf,EAAAiB,UAAA,EACA5jE,GAAA,EAGA,OAAA20C,EAGA,IAAAmvB,EAAA,KACAC,EAAA,OACAC,EAAA,QACAC,EAAA,QACAC,EAAA,aACAC,EAAA,QACAC,EAAA,YACAC,GAAA,gBACAC,GAAA,UACAC,GAAA,UACAC,GAAA,eAEAC,GAAA,MACAC,GAAA,WAEAC,GAAA,qBACAC,GAAA,0BAMAC,GAAA,wJAEAC,GAAA,GAEA,SAAAC,GAAAhC,EAAAiC,EAAAC,GACAH,GAAA/B,GAAA7B,EAAA8D,KAAA,SAAAE,EAAAhC,GACA,OAAAgC,GAAAD,IAAAD,GAIA,SAAAG,GAAApC,EAAAhgC,GACA,OAAAk6B,EAAA6H,GAAA/B,GAIA+B,GAAA/B,GAAAhgC,EAAA+7B,QAAA/7B,EAAA68B,SAHA,IAAAwF,OAQAC,GARAtC,EAQAM,QAAA,SAAAA,QAAA,+CAAAiC,EAAAvV,EAAAwV,EAAAC,EAAAC,GACA,OAAA1V,GAAAwV,GAAAC,GAAAC,MAIA,SAAAJ,GAAAjpE,GACA,OAAAA,EAAAinE,QAAA,yBAA8C,QAG9C,IAAAqC,GAAA,GAEA,SAAAC,GAAA5C,EAAAhvD,GACA,IAAA/T,EAAAkL,EAAA6I,EASA,IARA,iBAAAgvD,IACAA,EAAA,CAAAA,IAEAtjD,EAAA1L,KACA7I,EAAA,SAAAk/C,EAAA/zC,GACAA,EAAAtC,GAAAosD,EAAA/V,KAGApqD,EAAA,EAAmBA,EAAA+iE,EAAAj3D,OAAkB9L,IACrC0lE,GAAA3C,EAAA/iE,IAAAkL,EAIA,SAAA06D,GAAA7C,EAAAhvD,GACA4xD,GAAA5C,EAAA,SAAA3Y,EAAA/zC,EAAA0sB,EAAAggC,GACAhgC,EAAA8iC,GAAA9iC,EAAA8iC,IAAA,GACA9xD,EAAAq2C,EAAArnB,EAAA8iC,GAAA9iC,EAAAggC,KAIA,SAAA+C,GAAA/C,EAAA3Y,EAAArnB,GACA,MAAAqnB,GAAA6S,EAAAyI,GAAA3C,IACA2C,GAAA3C,GAAA3Y,EAAArnB,EAAAgjC,GAAAhjC,EAAAggC,GAIA,IAAAiD,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EA8CA,SAAAC,GAAAtd,GACA,OAAAud,GAAAvd,GAAA,QAGA,SAAAud,GAAAvd,GACA,OAAAA,EAAA,MAAAA,EAAA,QAAAA,EAAA,OA/CA2Z,EAAA,mBACA,IAAArjE,EAAAuM,KAAAm9C,OACA,OAAA1pD,GAAA,QAAAA,EAAA,IAAAA,IAGAqjE,EAAA,wBACA,OAAA92D,KAAAm9C,OAAA,MAGA2Z,EAAA,uBACAA,EAAA,wBACAA,EAAA,4BAIArB,EAAA,YAIAU,EAAA,UAIA4C,GAAA,IAAAL,IACAK,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,OAAAR,GAAAN,GACAc,GAAA,QAAAP,GAAAN,GACAa,GAAA,SAAAP,GAAAN,GAEAyB,GAAA,mBAAAK,IACAL,GAAA,gBAAAvb,EAAA/zC,GACAA,EAAA2vD,IAAA,IAAA5b,EAAAt+C,OAAA+wD,EAAA8J,kBAAAvc,GAAA+V,EAAA/V,KAEAub,GAAA,cAAAvb,EAAA/zC,GACAA,EAAA2vD,IAAAnJ,EAAA8J,kBAAAvc,KAEAub,GAAA,aAAAvb,EAAA/zC,GACAA,EAAA2vD,IAAA73D,SAAAi8C,EAAA,MAeAyS,EAAA8J,kBAAA,SAAAvc,GACA,OAAA+V,EAAA/V,IAAA+V,EAAA/V,GAAA,cAKA,IAiEAh0C,GAjEAwwD,GAAAC,GAAA,eAMA,SAAAA,GAAAllB,EAAAmlB,GACA,gBAAA93D,GACA,aAAAA,GACA+3D,GAAA/6D,KAAA21C,EAAA3yC,GACA6tD,EAAAkD,aAAA/zD,KAAA86D,GACA96D,MAEAmU,GAAAnU,KAAA21C,IAKA,SAAAxhC,GAAAmjD,EAAA3hB,GACA,OAAA2hB,EAAAp0D,UACAo0D,EAAA3E,GAAA,OAAA2E,EAAA5D,OAAA,UAAA/d,KAAAjwB,IAGA,SAAAq1C,GAAAzD,EAAA3hB,EAAA3yC,GACAs0D,EAAAp0D,YAAAZ,MAAAU,KACA,aAAA2yC,GAAA+kB,GAAApD,EAAAna,SAAA,IAAAma,EAAAra,SAAA,KAAAqa,EAAA7X,OACA6X,EAAA3E,GAAA,OAAA2E,EAAA5D,OAAA,UAAA/d,GAAA3yC,EAAAs0D,EAAAra,QAAA+d,GAAAh4D,EAAAs0D,EAAAra,UAGAqa,EAAA3E,GAAA,OAAA2E,EAAA5D,OAAA,UAAA/d,GAAA3yC,IAqDA,SAAAg4D,GAAA7d,EAAAF,GACA,GAAA36C,MAAA66C,IAAA76C,MAAA26C,GACA,OAAAv3B,IAEA,IAzBAlyB,EAyBAynE,GAAAhe,GAzBAzpD,EAyBA,IAxBAA,KA0BA,OADA2pD,IAAAF,EAAAge,GAAA,GACA,IAAAA,EAAAP,GAAAvd,GAAA,SAAA8d,EAAA,IApBA7wD,GADAhL,MAAAC,UAAA+K,QACAhL,MAAAC,UAAA+K,QAEA,SAAA8wD,GAEA,IAAAlnE,EACA,IAAAA,EAAA,EAAuBA,EAAAgM,KAAAF,SAAiB9L,EACxC,GAAAgM,KAAAhM,KAAAknE,EACA,OAAAlnE,EAGA,UAeA8iE,EAAA,6BACA,OAAA92D,KAAAi9C,QAAA,IAGA6Z,EAAA,mBAAAnuB,GACA,OAAA3oC,KAAAk3D,aAAAiE,YAAAn7D,KAAA2oC,KAGAmuB,EAAA,oBAAAnuB,GACA,OAAA3oC,KAAAk3D,aAAAkE,OAAAp7D,KAAA2oC,KAKA8sB,EAAA,aAIAU,EAAA,WAIA4C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,eAAAG,EAAA/H,GACA,OAAAA,EAAAkK,iBAAAnC,KAEAH,GAAA,gBAAAG,EAAA/H,GACA,OAAAA,EAAAmK,YAAApC,KAGAS,GAAA,oBAAAvb,EAAA/zC,GACAA,EAAA4vD,IAAA9F,EAAA/V,GAAA,IAGAub,GAAA,wBAAAvb,EAAA/zC,EAAA0sB,EAAAggC,GACA,IAAA9Z,EAAAlmB,EAAA68B,QAAA2H,YAAAnd,EAAA2Y,EAAAhgC,EAAA+7B,SAEA,MAAA7V,EACA5yC,EAAA4vD,IAAAhd,EAEAsU,EAAAx6B,GAAAg7B,aAAA3T,IAMA,IAAAod,GAAA,gCACAC,GAAA,wFAAA7+B,MAAA,KAUA8+B,GAAA,kDAAA9+B,MAAA,KA2FA,SAAA++B,GAAArE,EAAAt0D,GACA,IAAA44D,EAEA,IAAAtE,EAAAp0D,UAEA,OAAAo0D,EAGA,oBAAAt0D,EACA,WAAA60D,KAAA70D,GACAA,EAAAmxD,EAAAnxD,QAIA,IAAAyQ,EAFAzQ,EAAAs0D,EAAAJ,aAAAqE,YAAAv4D,IAGA,OAAAs0D,EAOA,OAFAsE,EAAA7oE,KAAAD,IAAAwkE,EAAA7X,OAAAub,GAAA1D,EAAAna,OAAAn6C,IACAs0D,EAAA3E,GAAA,OAAA2E,EAAA5D,OAAA,mBAAA1wD,EAAA44D,GACAtE,EAGA,SAAAuE,GAAA74D,GACA,aAAAA,GACA24D,GAAA37D,KAAAgD,GACA6tD,EAAAkD,aAAA/zD,MAAA,GACAA,MAEAmU,GAAAnU,KAAA,SAQA,IAAA87D,GAAAjD,GAoBAkD,GAAAlD,GAoBA,SAAAmD,KACA,SAAAC,EAAAhnE,EAAApC,GACA,OAAAA,EAAAiN,OAAA7K,EAAA6K,OAGA,IACA9L,EAAAsjE,EADA4E,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAEA,IAAApoE,EAAA,EAAmBA,EAAA,GAAQA,IAE3BsjE,EAAApG,EAAA,KAAAl9D,IACAkoE,EAAAhnD,KAAAlV,KAAAm7D,YAAA7D,EAAA,KACA6E,EAAAjnD,KAAAlV,KAAAo7D,OAAA9D,EAAA,KACA8E,EAAAlnD,KAAAlV,KAAAo7D,OAAA9D,EAAA,KACA8E,EAAAlnD,KAAAlV,KAAAm7D,YAAA7D,EAAA,KAOA,IAHA4E,EAAAptC,KAAAmtC,GACAE,EAAArtC,KAAAmtC,GACAG,EAAAttC,KAAAmtC,GACAjoE,EAAA,EAAmBA,EAAA,GAAQA,IAC3BkoE,EAAAloE,GAAAqlE,GAAA6C,EAAAloE,IACAmoE,EAAAnoE,GAAAqlE,GAAA8C,EAAAnoE,IAEA,IAAAA,EAAA,EAAmBA,EAAA,GAAQA,IAC3BooE,EAAApoE,GAAAqlE,GAAA+C,EAAApoE,IAGAgM,KAAAq8D,aAAA,IAAAjD,OAAA,KAAAgD,EAAAl2C,KAAA,cACAlmB,KAAAs8D,kBAAAt8D,KAAAq8D,aACAr8D,KAAAu8D,mBAAA,IAAAnD,OAAA,KAAA+C,EAAAj2C,KAAA,cACAlmB,KAAAw8D,wBAAA,IAAApD,OAAA,KAAA8C,EAAAh2C,KAAA,cAqBA,SAAAu2C,GAAAhpE,GACA,IAAAgsD,EAEA,GAAAhsD,EAAA,KAAAA,GAAA,GACA,IAAA3D,EAAAsP,MAAAC,UAAAC,MAAAC,KAAAC,WAEA1P,EAAA,GAAA2D,EAAA,IACAgsD,EAAA,IAAA1qC,UAAA2nD,IAAAx0D,MAAA,KAAApY,IACA4X,SAAA+3C,EAAAkd,mBACAld,EAAAmd,eAAAnpE,QAGAgsD,EAAA,IAAA1qC,UAAA2nD,IAAAx0D,MAAA,KAAA1I,YAGA,OAAAigD,EAIA,SAAAod,GAAA1f,EAAA2f,EAAAC,GACA,IACAC,EAAA,EAAAF,EAAAC,EAEAE,GAAA,EAAAR,GAAAtf,EAAA,EAAA6f,GAAAE,YAAAJ,GAAA,EAEA,OAAAG,EAAAD,EAAA,EAIA,SAAAG,GAAAhgB,EAAAH,EAAAiC,EAAA6d,EAAAC,GACA,IAGAK,EAAAC,EAHAC,GAAA,EAAAre,EAAA6d,GAAA,EACAS,EAAAV,GAAA1f,EAAA2f,EAAAC,GACAS,EAAA,KAAAxgB,EAAA,GAAAsgB,EAAAC,EAcA,OAXAC,GAAA,EAEAH,EAAA5C,GADA2C,EAAAjgB,EAAA,GACAqgB,EACSA,EAAA/C,GAAAtd,IACTigB,EAAAjgB,EAAA,EACAkgB,EAAAG,EAAA/C,GAAAtd,KAEAigB,EAAAjgB,EACAkgB,EAAAG,GAGA,CACArgB,KAAAigB,EACAI,UAAAH,GAIA,SAAAI,GAAAnG,EAAAwF,EAAAC,GACA,IAEAW,EAAAN,EAFAG,EAAAV,GAAAvF,EAAAna,OAAA2f,EAAAC,GACA/f,EAAAjqD,KAAAmB,OAAAojE,EAAAkG,YAAAD,EAAA,QAcA,OAXAvgB,EAAA,GACAogB,EAAA9F,EAAAna,OAAA,EACAugB,EAAA1gB,EAAA2gB,GAAAP,EAAAN,EAAAC,IACS/f,EAAA2gB,GAAArG,EAAAna,OAAA2f,EAAAC,IACTW,EAAA1gB,EAAA2gB,GAAArG,EAAAna,OAAA2f,EAAAC,GACAK,EAAA9F,EAAAna,OAAA,IAEAigB,EAAA9F,EAAAna,OACAugB,EAAA1gB,GAGA,CACAA,KAAA0gB,EACAvgB,KAAAigB,GAIA,SAAAO,GAAAxgB,EAAA2f,EAAAC,GACA,IAAAQ,EAAAV,GAAA1f,EAAA2f,EAAAC,GACAa,EAAAf,GAAA1f,EAAA,EAAA2f,EAAAC,GACA,OAAAtC,GAAAtd,GAAAogB,EAAAK,GAAA,EAoJA,SAAAC,GAAAC,EAAAtpE,GACA,OAAAspE,EAAAx+D,MAAA9K,EAAA,GAAAgP,OAAAs6D,EAAAx+D,MAAA,EAAA9K,IAhJAsiE,EAAA,0BACAA,EAAA,6BAIArB,EAAA,YACAA,EAAA,eAIAU,EAAA,UACAA,EAAA,aAIA4C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GAEA6B,GAAA,6BAAAxb,EAAApB,EAAAjmB,EAAAggC,GACA/Z,EAAA+Z,EAAAvvD,OAAA,MAAA2sD,EAAA/V,KAsCA0Y,EAAA,kBAEAA,EAAA,kBAAAnuB,GACA,OAAA3oC,KAAAk3D,aAAA6G,YAAA/9D,KAAA2oC,KAGAmuB,EAAA,mBAAAnuB,GACA,OAAA3oC,KAAAk3D,aAAA8G,cAAAh+D,KAAA2oC,KAGAmuB,EAAA,oBAAAnuB,GACA,OAAA3oC,KAAAk3D,aAAA+G,SAAAj+D,KAAA2oC,KAGAmuB,EAAA,mBACAA,EAAA,sBAIArB,EAAA,WACAA,EAAA,eACAA,EAAA,kBAGAU,EAAA,UACAA,EAAA,cACAA,EAAA,iBAIA4C,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,cAAAG,EAAA/H,GACA,OAAAA,EAAA+M,iBAAAhF,KAEAH,GAAA,eAAAG,EAAA/H,GACA,OAAAA,EAAAgN,mBAAAjF,KAEAH,GAAA,gBAAAG,EAAA/H,GACA,OAAAA,EAAAiN,cAAAlF,KAGAU,GAAA,6BAAAxb,EAAApB,EAAAjmB,EAAAggC,GACA,IAAA9X,EAAAloB,EAAA68B,QAAAyK,cAAAjgB,EAAA2Y,EAAAhgC,EAAA+7B,SAEA,MAAA7T,EACAjC,EAAA3gB,EAAA4iB,EAEAsS,EAAAx6B,GAAA87B,eAAAzU,IAIAwb,GAAA,uBAAAxb,EAAApB,EAAAjmB,EAAAggC,GACA/Z,EAAA+Z,GAAA5C,EAAA/V,KAkCA,IAAAkgB,GAAA,2DAAA1hC,MAAA,KAQA2hC,GAAA,8BAAA3hC,MAAA,KAMA4hC,GAAA,uBAAA5hC,MAAA,KAsJA6hC,GAAA5F,GAoBA6F,GAAA7F,GAoBA8F,GAAA9F,GAqBA,SAAA+F,KACA,SAAA3C,EAAAhnE,EAAApC,GACA,OAAAA,EAAAiN,OAAA7K,EAAA6K,OAGA,IACA9L,EAAAsjE,EAAAuH,EAAAC,EAAAC,EADAC,EAAA,GAAA9C,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAEA,IAAApoE,EAAA,EAAmBA,EAAA,EAAOA,IAE1BsjE,EAAApG,EAAA,SAAAnU,IAAA/oD,GACA6qE,EAAA7+D,KAAA+9D,YAAAzG,EAAA,IACAwH,EAAA9+D,KAAAg+D,cAAA1G,EAAA,IACAyH,EAAA/+D,KAAAi+D,SAAA3G,EAAA,IACA0H,EAAA9pD,KAAA2pD,GACA3C,EAAAhnD,KAAA4pD,GACA3C,EAAAjnD,KAAA6pD,GACA3C,EAAAlnD,KAAA2pD,GACAzC,EAAAlnD,KAAA4pD,GACA1C,EAAAlnD,KAAA6pD,GAQA,IAJAC,EAAAlwC,KAAAmtC,GACAC,EAAAptC,KAAAmtC,GACAE,EAAArtC,KAAAmtC,GACAG,EAAAttC,KAAAmtC,GACAjoE,EAAA,EAAmBA,EAAA,EAAOA,IAC1BkoE,EAAAloE,GAAAqlE,GAAA6C,EAAAloE,IACAmoE,EAAAnoE,GAAAqlE,GAAA8C,EAAAnoE,IACAooE,EAAApoE,GAAAqlE,GAAA+C,EAAApoE,IAGAgM,KAAAi/D,eAAA,IAAA7F,OAAA,KAAAgD,EAAAl2C,KAAA,cACAlmB,KAAAk/D,oBAAAl/D,KAAAi/D,eACAj/D,KAAAm/D,kBAAAn/D,KAAAi/D,eAEAj/D,KAAAo/D,qBAAA,IAAAhG,OAAA,KAAA+C,EAAAj2C,KAAA,cACAlmB,KAAAq/D,0BAAA,IAAAjG,OAAA,KAAA8C,EAAAh2C,KAAA,cACAlmB,KAAAs/D,wBAAA,IAAAlG,OAAA,KAAA4F,EAAA94C,KAAA,cAKA,SAAAq5C,KACA,OAAAv/D,KAAAw/D,QAAA,OA6BA,SAAApN,GAAA2E,EAAA0I,GACA3I,EAAAC,EAAA,eACA,OAAA/2D,KAAAk3D,aAAA9E,SAAApyD,KAAAw/D,QAAAx/D,KAAA0/D,UAAAD,KAgBA,SAAAE,GAAAzG,EAAA/H,GACA,OAAAA,EAAAyO,eAzCA9I,EAAA,uBACAA,EAAA,eAAAyI,IACAzI,EAAA,eANA,WACA,OAAA92D,KAAAw/D,SAAA,KAOA1I,EAAA,qBACA,SAAAyI,GAAAr3D,MAAAlI,MAAAq2D,EAAAr2D,KAAA0/D,UAAA,KAGA5I,EAAA,uBACA,SAAAyI,GAAAr3D,MAAAlI,MAAAq2D,EAAAr2D,KAAA0/D,UAAA,GACArJ,EAAAr2D,KAAA6/D,UAAA,KAGA/I,EAAA,qBACA,SAAA92D,KAAAw/D,QAAAnJ,EAAAr2D,KAAA0/D,UAAA,KAGA5I,EAAA,uBACA,SAAA92D,KAAAw/D,QAAAnJ,EAAAr2D,KAAA0/D,UAAA,GACArJ,EAAAr2D,KAAA6/D,UAAA,KASAzN,GAAA,QACAA,GAAA,QAIAqD,EAAA,YAGAU,EAAA,WAQA4C,GAAA,IAAA4G,IACA5G,GAAA,IAAA4G,IACA5G,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GAEAgB,GAAA,MAAAX,GACAW,GAAA,QAAAV,IACAU,GAAA,MAAAX,GACAW,GAAA,QAAAV,IAEAsB,GAAA,WAAAQ,IACAR,GAAA,oBAAAvb,EAAA/zC,EAAA0sB,GACA,IAAA+oC,EAAA3L,EAAA/V,GACA/zC,EAAA8vD,IAAA,KAAA2F,EAAA,EAAAA,IAEAnG,GAAA,mBAAAvb,EAAA/zC,EAAA0sB,GACAA,EAAAgpC,MAAAhpC,EAAA68B,QAAAoM,KAAA5hB,GACArnB,EAAAkpC,UAAA7hB,IAEAub,GAAA,oBAAAvb,EAAA/zC,EAAA0sB,GACA1sB,EAAA8vD,IAAAhG,EAAA/V,GACAmT,EAAAx6B,GAAAg8B,SAAA,IAEA4G,GAAA,eAAAvb,EAAA/zC,EAAA0sB,GACA,IAAAe,EAAAsmB,EAAAt+C,OAAA,EACAuK,EAAA8vD,IAAAhG,EAAA/V,EAAA52C,OAAA,EAAAswB,IACAztB,EAAA+vD,IAAAjG,EAAA/V,EAAA52C,OAAAswB,IACAy5B,EAAAx6B,GAAAg8B,SAAA,IAEA4G,GAAA,iBAAAvb,EAAA/zC,EAAA0sB,GACA,IAAAmpC,EAAA9hB,EAAAt+C,OAAA,EACAqgE,EAAA/hB,EAAAt+C,OAAA,EACAuK,EAAA8vD,IAAAhG,EAAA/V,EAAA52C,OAAA,EAAA04D,IACA71D,EAAA+vD,IAAAjG,EAAA/V,EAAA52C,OAAA04D,EAAA,IACA71D,EAAAgwD,IAAAlG,EAAA/V,EAAA52C,OAAA24D,IACA5O,EAAAx6B,GAAAg8B,SAAA,IAEA4G,GAAA,eAAAvb,EAAA/zC,EAAA0sB,GACA,IAAAe,EAAAsmB,EAAAt+C,OAAA,EACAuK,EAAA8vD,IAAAhG,EAAA/V,EAAA52C,OAAA,EAAAswB,IACAztB,EAAA+vD,IAAAjG,EAAA/V,EAAA52C,OAAAswB,MAEA6hC,GAAA,iBAAAvb,EAAA/zC,EAAA0sB,GACA,IAAAmpC,EAAA9hB,EAAAt+C,OAAA,EACAqgE,EAAA/hB,EAAAt+C,OAAA,EACAuK,EAAA8vD,IAAAhG,EAAA/V,EAAA52C,OAAA,EAAA04D,IACA71D,EAAA+vD,IAAAjG,EAAA/V,EAAA52C,OAAA04D,EAAA,IACA71D,EAAAgwD,IAAAlG,EAAA/V,EAAA52C,OAAA24D,MA2BA,IAyBAC,GAzBAC,GAAAxF,GAAA,YAEAyF,GAAA,CACAC,SAj2CA,CACAC,QAAA,gBACAC,QAAA,mBACAC,SAAA,eACAC,QAAA,oBACAC,SAAA,sBACAC,SAAA,KA41CAlJ,eAp1CA,CACAmJ,IAAA,YACAC,GAAA,SACAC,EAAA,aACAC,GAAA,eACAC,IAAA,sBACAC,KAAA,6BA+0CA1J,YA7zCA,eA8zCAR,QAxzCA,KAyzCAmK,uBAxzCA,UAyzCAC,aAnzCA,CACAC,OAAA,QACAC,KAAA,SACAnxE,EAAA,gBACAoxE,GAAA,aACA1sE,EAAA,WACA2sE,GAAA,aACAtxE,EAAA,UACAuxE,GAAA,WACArlC,EAAA,QACAslC,GAAA,UACAC,EAAA,UACAC,GAAA,YACApuE,EAAA,SACAquE,GAAA,YAuyCA1G,OAAAK,GACAN,YAAAO,GAEA1e,KA9gBA,CACA8f,IAAA,EACAC,IAAA,GA8gBAkB,SAAAK,GACAP,YAAAS,GACAR,cAAAO,GAEAwD,cAnCA,iBAuCAC,GAAA,GACAC,GAAA,GAGA,SAAAC,GAAAnjE,GACA,OAAAA,IAAAowD,cAAAkI,QAAA,SAAAt4D,EA8BA,SAAAojE,GAAAx/D,GACA,IAAAy/D,EAAA,KAEA,IAAAJ,GAAAr/D,SAAA,IAAA1T,GACAA,KAAAC,QACA,IACAkzE,EAAAhC,GAAAiC,MAEgBhT,EAAA,OAAAA,CAAe,KAAW1sD,GAC1C2/D,GAAAF,GACa,MAAA37C,IAEb,OAAAu7C,GAAAr/D,GAMA,SAAA2/D,GAAAvjE,EAAAqB,GACA,IAAA6W,EAqBA,OApBAlY,KAEAkY,EADA65C,EAAA1wD,GACAmiE,GAAAxjE,GAGAyjE,GAAAzjE,EAAAqB,IAKAggE,GAAAnpD,EAGA,oBAAA5Q,iBAAAq5C,MAEAr5C,QAAAq5C,KAAA,UAAA3gD,EAAA,2CAKAqhE,GAAAiC,MAGA,SAAAG,GAAA7/D,EAAAo0B,GACA,UAAAA,EAAA,CACA,IAAAo6B,EAAAkE,EAAAiL,GAEA,GADAvpC,EAAA0rC,KAAA9/D,EACA,MAAAq/D,GAAAr/D,GACAsyD,EAAA,uBACA,2OAIAI,EAAA2M,GAAAr/D,GAAA+/D,aACa,SAAA3rC,EAAA4rC,aACb,SAAAX,GAAAjrC,EAAA4rC,cACAtN,EAAA2M,GAAAjrC,EAAA4rC,cAAAD,YACiB,CAEjB,UADAvR,EAAAgR,GAAAprC,EAAA4rC,eAWA,OAPAV,GAAAlrC,EAAA4rC,gBACAV,GAAAlrC,EAAA4rC,cAAA,IAEAV,GAAAlrC,EAAA4rC,cAAAztD,KAAA,CACAvS,OACAo0B,WAEA,KATAs+B,EAAAlE,EAAAuR,QA2BA,OAdAV,GAAAr/D,GAAA,IAAA4yD,EAAAH,EAAAC,EAAAt+B,IAEAkrC,GAAAt/D,IACAs/D,GAAAt/D,GAAAlC,QAAA,SAAAjN,GACAgvE,GAAAhvE,EAAAmP,KAAAnP,EAAAujC,UAOAurC,GAAA3/D,GAGAq/D,GAAAr/D,GAIA,cADAq/D,GAAAr/D,GACA,KAiCA,SAAA4/D,GAAAxjE,GACA,IAAAoyD,EAMA,GAJApyD,KAAA60D,SAAA70D,EAAA60D,QAAAyO,QACAtjE,IAAA60D,QAAAyO,QAGAtjE,EACA,OAAAqhE,GAGA,IAAA94D,EAAAvI,GAAA,CAGA,GADAoyD,EAAAgR,GAAApjE,GAEA,OAAAoyD,EAEApyD,EAAA,CAAAA,GAGA,OAxKA,SAAA6jE,GAGA,IAFA,IAAA17C,EAAAhD,EAAAitC,EAAAv0B,EAAA5oC,EAAA,EAEAA,EAAA4uE,EAAA9iE,QAAA,CAKA,IAJA88B,EAAAslC,GAAAU,EAAA5uE,IAAA4oC,MAAA,KACA1V,EAAA0V,EAAA98B,OAEAokB,GADAA,EAAAg+C,GAAAU,EAAA5uE,EAAA,KACAkwB,EAAA0Y,MAAA,UACA1V,EAAA,IAEA,GADAiqC,EAAAgR,GAAAvlC,EAAAt9B,MAAA,EAAA4nB,GAAAhB,KAAA,MAEA,OAAAirC,EAEA,GAAAjtC,KAAApkB,QAAAonB,GAAAotC,EAAA13B,EAAA1Y,GAAA,IAAAgD,EAAA,EAEA,MAEAA,IAEAlzB,IAEA,OAAAosE,GAmJAyC,CAAA9jE,GAOA,SAAA+jE,GAAAhuE,GACA,IAAA88D,EACA38D,EAAAH,EAAAilE,GAyBA,OAvBA9kE,IAAA,IAAAs8D,EAAAz8D,GAAA88D,WACAA,EACA38D,EAAAglE,IAAA,GAAAhlE,EAAAglE,IAAA,GAAAA,GACAhlE,EAAAilE,IAAA,GAAAjlE,EAAAilE,IAAAc,GAAA/lE,EAAA+kE,IAAA/kE,EAAAglE,KAAAC,GACAjlE,EAAAklE,IAAA,GAAAllE,EAAAklE,IAAA,SAAAllE,EAAAklE,MAAA,IAAAllE,EAAAmlE,KAAA,IAAAnlE,EAAAolE,KAAA,IAAAplE,EAAAqlE,KAAAH,GACAllE,EAAAmlE,IAAA,GAAAnlE,EAAAmlE,IAAA,GAAAA,GACAnlE,EAAAolE,IAAA,GAAAplE,EAAAolE,IAAA,GAAAA,GACAplE,EAAAqlE,IAAA,GAAArlE,EAAAqlE,IAAA,IAAAA,IACA,EAEA/I,EAAAz8D,GAAAiuE,qBAAAnR,EAAAoI,IAAApI,EAAAsI,MACAtI,EAAAsI,IAEA3I,EAAAz8D,GAAAkuE,iBAAA,IAAApR,IACAA,EAAA2I,IAEAhJ,EAAAz8D,GAAAmuE,mBAAA,IAAArR,IACAA,EAAA4I,IAGAjJ,EAAAz8D,GAAA88D,YAGA98D,EAIA,SAAAwb,GAAArb,EAAApC,EAAAgC,GACA,aAAAI,EACAA,EAEA,MAAApC,EACAA,EAEAgC,EAgBA,SAAAquE,GAAAnsC,GACA,IAAA/iC,EAAAyrD,EAAA0jB,EAAAC,EAAAC,EAAAjlB,EAAA,GAEA,IAAArnB,EAAA47B,GAAA,CA6BA,IAzBAwQ,EApBA,SAAApsC,GAEA,IAAAusC,EAAA,IAAAvuD,KAAA87C,EAAA77C,OACA,OAAA+hB,EAAAwsC,QACA,CAAAD,EAAA3G,iBAAA2G,EAAAE,cAAAF,EAAAG,cAEA,CAAAH,EAAAI,cAAAJ,EAAAK,WAAAL,EAAAM,WAcAC,CAAA9sC,GAGAA,EAAA8iC,IAAA,MAAA9iC,EAAAgjC,GAAAG,KAAA,MAAAnjC,EAAAgjC,GAAAE,KA2DA,SAAAljC,GACA,IAAA7jC,EAAA4wE,EAAA9mB,EAAAiC,EAAA6d,EAAAC,EAAAgH,EAAAC,EAGA,UADA9wE,EAAA6jC,EAAA8iC,IACAoK,IAAA,MAAA/wE,EAAAgxE,GAAA,MAAAhxE,EAAAixE,EACArH,EAAA,EACAC,EAAA,EAMA+G,EAAAxzD,GAAApd,EAAA+wE,GAAAltC,EAAAgjC,GAAAC,IAAAyD,GAAA2G,KAAA,KAAAjnB,MACAH,EAAA1sC,GAAApd,EAAAgxE,EAAA,KACAjlB,EAAA3uC,GAAApd,EAAAixE,EAAA,IACA,GAAAllB,EAAA,KACA+kB,GAAA,OAES,CACTlH,EAAA/lC,EAAA68B,QAAAyQ,MAAAvH,IACAC,EAAAhmC,EAAA68B,QAAAyQ,MAAAtH,IAEA,IAAAuH,EAAA7G,GAAA2G,KAAAtH,EAAAC,GAEA+G,EAAAxzD,GAAApd,EAAAqxE,GAAAxtC,EAAAgjC,GAAAC,IAAAsK,EAAAnnB,MAGAH,EAAA1sC,GAAApd,IAAAoxE,EAAAtnB,MAEA,MAAA9pD,EAAAmpC,IAEA4iB,EAAA/rD,EAAAmpC,GACA,GAAA4iB,EAAA,KACA+kB,GAAA,GAEa,MAAA9wE,EAAAuzB,GAEbw4B,EAAA/rD,EAAAuzB,EAAAq2C,GACA5pE,EAAAuzB,EAAA,GAAAvzB,EAAAuzB,EAAA,KACAu9C,GAAA,IAIA/kB,EAAA6d,EAGA9f,EAAA,GAAAA,EAAA2gB,GAAAmG,EAAAhH,EAAAC,GACAxL,EAAAx6B,GAAAisC,gBAAA,EACS,MAAAgB,EACTzS,EAAAx6B,GAAAksC,kBAAA,GAEAc,EAAA5G,GAAA2G,EAAA9mB,EAAAiC,EAAA6d,EAAAC,GACAhmC,EAAAgjC,GAAAC,IAAA+J,EAAA5mB,KACApmB,EAAAytC,WAAAT,EAAAvG,WA/GAiH,CAAA1tC,GAIA,MAAAA,EAAAytC,aACAnB,EAAA/yD,GAAAymB,EAAAgjC,GAAAC,IAAAmJ,EAAAnJ,MAEAjjC,EAAAytC,WAAA/J,GAAA4I,IAAA,IAAAtsC,EAAAytC,cACAjT,EAAAx6B,GAAAgsC,oBAAA,GAGAtjB,EAAAgd,GAAA4G,EAAA,EAAAtsC,EAAAytC,YACAztC,EAAAgjC,GAAAE,IAAAxa,EAAA+jB,cACAzsC,EAAAgjC,GAAAG,IAAAza,EAAAgkB,cAQAzvE,EAAA,EAAmBA,EAAA,SAAA+iC,EAAAgjC,GAAA/lE,KAA+BA,EAClD+iC,EAAAgjC,GAAA/lE,GAAAoqD,EAAApqD,GAAAmvE,EAAAnvE,GAIA,KAAcA,EAAA,EAAOA,IACrB+iC,EAAAgjC,GAAA/lE,GAAAoqD,EAAApqD,GAAA,MAAA+iC,EAAAgjC,GAAA/lE,GAAA,IAAAA,EAAA,IAAA+iC,EAAAgjC,GAAA/lE,GAIA,KAAA+iC,EAAAgjC,GAAAI,KACA,IAAApjC,EAAAgjC,GAAAK,KACA,IAAArjC,EAAAgjC,GAAAM,KACA,IAAAtjC,EAAAgjC,GAAAO,MACAvjC,EAAA2tC,UAAA,EACA3tC,EAAAgjC,GAAAI,IAAA,GAGApjC,EAAA47B,IAAA57B,EAAAwsC,QAAA9G,GA97BA,SAAAhpE,EAAAqB,EAAAunC,EAAAlsC,EAAAyxE,EAAAxxE,EAAAu0E,GAGA,IAAAllB,EAYA,OAVAhsD,EAAA,KAAAA,GAAA,GAEAgsD,EAAA,IAAA1qC,KAAAthB,EAAA,IAAAqB,EAAAunC,EAAAlsC,EAAAyxE,EAAAxxE,EAAAu0E,GACAj9D,SAAA+3C,EAAAikB,gBACAjkB,EAAAmlB,YAAAnxE,IAGAgsD,EAAA,IAAA1qC,KAAAthB,EAAAqB,EAAAunC,EAAAlsC,EAAAyxE,EAAAxxE,EAAAu0E,GAGAllB,IA+6BAv3C,MAAA,KAAAk2C,GACAglB,EAAArsC,EAAAwsC,QAAAxsC,EAAA47B,GAAAuK,YAAAnmC,EAAA47B,GAAAkS,SAIA,MAAA9tC,EAAA08B,MACA18B,EAAA47B,GAAAmS,cAAA/tC,EAAA47B,GAAAoS,gBAAAhuC,EAAA08B,MAGA18B,EAAA2tC,WACA3tC,EAAAgjC,GAAAI,IAAA,IAIApjC,EAAA8iC,SAAA,IAAA9iC,EAAA8iC,GAAAx9B,GAAAtF,EAAA8iC,GAAAx9B,IAAA+mC,IACA7R,EAAAx6B,GAAAu7B,iBAAA,IA+DA,IAAA0S,GAAA,mJACAC,GAAA,8IAEAC,GAAA,wBAEAC,GAAA,CACA,uCACA,iCACA,kCACA,6BAA6B,GAC7B,2BACA,yBAA0B,GAC1B,4BACA,qBAEA,6BACA,4BAAkC,GAClC,qBAIAC,GAAA,CACA,wCACA,uCACA,8BACA,sBACA,oCACA,mCACA,0BACA,oBACA,eAGAC,GAAA,sBAGA,SAAAC,GAAAvuC,GACA,IAAA/iC,EAAA3D,EAGAk1E,EAAAC,EAAAC,EAAAC,EAFA1kE,EAAA+1B,EAAAu8B,GACArxD,EAAA+iE,GAAAtlE,KAAAsB,IAAAikE,GAAAvlE,KAAAsB,GAGA,GAAAiB,EAAA,CAGA,IAFAsvD,EAAAx6B,GAAAm7B,KAAA,EAEAl+D,EAAA,EAAA3D,EAAA80E,GAAArlE,OAA4C9L,EAAA3D,EAAO2D,IACnD,GAAAmxE,GAAAnxE,GAAA,GAAA0L,KAAAuC,EAAA,KACAujE,EAAAL,GAAAnxE,GAAA,GACAuxE,GAAA,IAAAJ,GAAAnxE,GAAA,GACA,MAGA,SAAAwxE,EAEA,YADAzuC,EAAAw7B,UAAA,GAGA,GAAAtwD,EAAA,IACA,IAAAjO,EAAA,EAAA3D,EAAA+0E,GAAAtlE,OAAgD9L,EAAA3D,EAAO2D,IACvD,GAAAoxE,GAAApxE,GAAA,GAAA0L,KAAAuC,EAAA,KAEAwjE,GAAAxjE,EAAA,SAAAmjE,GAAApxE,GAAA,GACA,MAGA,SAAAyxE,EAEA,YADA1uC,EAAAw7B,UAAA,GAIA,IAAAgT,GAAA,MAAAE,EAEA,YADA1uC,EAAAw7B,UAAA,GAGA,GAAAtwD,EAAA,IACA,IAAAijE,GAAAxlE,KAAAuC,EAAA,IAIA,YADA80B,EAAAw7B,UAAA,GAFAmT,EAAA,IAMA3uC,EAAAw8B,GAAAiS,GAAAC,GAAA,KAAAC,GAAA,IACAC,GAAA5uC,QAEAA,EAAAw7B,UAAA,EAKA,IAAAF,GAAA,0LAkBA,SAAAuT,GAAAC,GACA,IAAA1oB,EAAAh7C,SAAA0jE,EAAA,IACA,OAAA1oB,GAAA,GACA,IAAAA,EACSA,GAAA,IACT,KAAAA,EAEAA,EAsBA,IAAA2oB,GAAA,CACAC,GAAA,EACAC,IAAA,EACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,KAiBA,SAAAC,GAAA1vC,GACA,IAzEA8uC,EAAAa,EAAAC,EAAAC,EAAAC,EAAAC,EACA7gE,EAwEAhE,EAAAowD,GAAA3yD,KAAAq3B,EAAAu8B,GA7CA+D,QAAA,yBAAAA,QAAA,gBAAAA,QAAA,aAAAA,QAAA,cA8CA,GAAAp1D,EAAA,CACA,IAAA8kE,GA3EAlB,EA2EA5jE,EAAA,GA3EAykE,EA2EAzkE,EAAA,GA3EA0kE,EA2EA1kE,EAAA,GA3EA2kE,EA2EA3kE,EAAA,GA3EA4kE,EA2EA5kE,EAAA,GA3EA6kE,EA2EA7kE,EAAA,GA1EAgE,EAAA,CACA2/D,GAAAC,GACAnK,GAAAtxD,QAAAs8D,GACAvkE,SAAAwkE,EAAA,IACAxkE,SAAAykE,EAAA,IACAzkE,SAAA0kE,EAAA,KAGAC,GACA7gE,EAAAiP,KAAA/S,SAAA2kE,EAAA,KAGA7gE,GA+DA,IA7CA,SAAA+gE,EAAAC,EAAAlwC,GACA,GAAAiwC,EAAA,CAEA,IAAAE,EAAA3I,GAAAn0D,QAAA48D,GACAG,EAAA,IAAApyD,KAAAkyD,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAApC,SACA,GAAAqC,IAAAC,EAGA,OAFA5V,EAAAx6B,GAAAu7B,iBAAA,EACAv7B,EAAAw7B,UAAA,GACA,EAGA,SAkCA6U,CAAAnlE,EAAA,GAAA8kE,EAAAhwC,GACA,OAGAA,EAAAgjC,GAAAgN,EACAhwC,EAAA08B,KAvBA,SAAA4T,EAAAC,EAAAC,GACA,GAAAF,EACA,OAAAvB,GAAAuB,GACS,GAAAC,EAET,SAEA,IAAAE,EAAArlE,SAAAolE,EAAA,IACAzyE,EAAA0yE,EAAA,IAAAr3E,GAAAq3E,EAAA1yE,GAAA,IACA,UAAA3E,EAAA2E,EAcA2yE,CAAAxlE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA80B,EAAA47B,GAAA8J,GAAAv0D,MAAA,KAAA6uB,EAAAgjC,IACAhjC,EAAA47B,GAAAmS,cAAA/tC,EAAA47B,GAAAoS,gBAAAhuC,EAAA08B,MAEAlC,EAAAx6B,GAAAs7B,SAAA,OAEAt7B,EAAAw7B,UAAA,EAgDA,SAAAoT,GAAA5uC,GAEA,GAAAA,EAAAw8B,KAAA1C,EAAA6W,SAIA,GAAA3wC,EAAAw8B,KAAA1C,EAAA8W,SAAA,CAIA5wC,EAAAgjC,GAAA,GACAxI,EAAAx6B,GAAA06B,OAAA,EAGA,IACAz9D,EAAAizE,EAAAvN,EAAA3C,EAAA6Q,EADA5mE,EAAA,GAAA+1B,EAAAu8B,GAEAuU,EAAA7mE,EAAAlB,OACAgoE,EAAA,EAIA,IAFApO,EAAAtC,EAAArgC,EAAAw8B,GAAAx8B,EAAA68B,SAAA3xD,MAAAy0D,IAAA,GAEA1iE,EAAA,EAAmBA,EAAA0lE,EAAA55D,OAAmB9L,IACtC+iE,EAAA2C,EAAA1lE,IACAizE,GAAAjmE,EAAAiB,MAAAk3D,GAAApC,EAAAhgC,KAAA,WAIA6wC,EAAA5mE,EAAAwG,OAAA,EAAAxG,EAAAoJ,QAAA68D,KACAnnE,OAAA,GACAyxD,EAAAx6B,GAAA46B,YAAAz8C,KAAA0yD,GAEA5mE,IAAA1B,MAAA0B,EAAAoJ,QAAA68D,KAAAnnE,QACAgoE,GAAAb,EAAAnnE,QAGA+2D,EAAAE,IACAkQ,EACA1V,EAAAx6B,GAAA06B,OAAA,EAGAF,EAAAx6B,GAAA26B,aAAAx8C,KAAA6hD,GAEA+C,GAAA/C,EAAAkQ,EAAAlwC,IAEAA,EAAA+7B,UAAAmU,GACA1V,EAAAx6B,GAAA26B,aAAAx8C,KAAA6hD,GAKAxF,EAAAx6B,GAAA86B,cAAAgW,EAAAC,EACA9mE,EAAAlB,OAAA,GACAyxD,EAAAx6B,GAAA46B,YAAAz8C,KAAAlU,GAIA+1B,EAAAgjC,GAAAI,KAAA,KACA,IAAA5I,EAAAx6B,GAAAg8B,SACAh8B,EAAAgjC,GAAAI,IAAA,IACA5I,EAAAx6B,GAAAg8B,aAAAlzD,GAGA0xD,EAAAx6B,GAAAo7B,gBAAAp7B,EAAAgjC,GAAAz6D,MAAA,GACAiyD,EAAAx6B,GAAAq7B,SAAAr7B,EAAAkpC,UAEAlpC,EAAAgjC,GAAAI,IAOA,SAAAhJ,EAAArU,EAAAsV,GACA,IAAA2V,EAEA,aAAA3V,EAEAtV,EAEA,MAAAqU,EAAA6W,aACA7W,EAAA6W,aAAAlrB,EAAAsV,GACS,MAAAjB,EAAA6O,OAET+H,EAAA5W,EAAA6O,KAAA5N,KACAtV,EAAA,KACAA,GAAA,IAEAirB,GAAA,KAAAjrB,IACAA,EAAA,GAEAA,GAGAA,EA5BAmrB,CAAAlxC,EAAA68B,QAAA78B,EAAAgjC,GAAAI,IAAApjC,EAAAkpC,WAEAiD,GAAAnsC,GACA+rC,GAAA/rC,QA7DA0vC,GAAA1vC,QAJAuuC,GAAAvuC,GAmKA,SAAAmxC,GAAAnxC,GACA,IAAAqnB,EAAArnB,EAAAu8B,GACA3qB,EAAA5R,EAAAw8B,GAIA,OAFAx8B,EAAA68B,QAAA78B,EAAA68B,SAAA2O,GAAAxrC,EAAAy8B,IAEA,OAAApV,QAAAv+C,IAAA8oC,GAAA,KAAAyV,EACA6U,EAAA,CAAkCnB,WAAA,KAGlC,iBAAA1T,IACArnB,EAAAu8B,GAAAlV,EAAArnB,EAAA68B,QAAAuU,SAAA/pB,IAGA4V,EAAA5V,GACA,IAAA0V,EAAAgP,GAAA1kB,KACS2S,EAAA3S,GACTrnB,EAAA47B,GAAAvU,EACS92C,EAAAqhC,GAtFT,SAAA5R,GACA,IAAAqxC,EACAC,EAEAC,EACAt0E,EACAu0E,EAEA,OAAAxxC,EAAAw8B,GAAAzzD,OAGA,OAFAyxD,EAAAx6B,GAAAi7B,eAAA,OACAj7B,EAAA47B,GAAA,IAAA59C,KAAA2Q,MAIA,IAAA1xB,EAAA,EAAmBA,EAAA+iC,EAAAw8B,GAAAzzD,OAAsB9L,IACzCu0E,EAAA,EACAH,EAAAhV,EAAA,GAAsCr8B,GACtC,MAAAA,EAAAwsC,UACA6E,EAAA7E,QAAAxsC,EAAAwsC,SAEA6E,EAAA7U,GAAAx8B,EAAAw8B,GAAAv/D,GACA2xE,GAAAyC,GAEAllE,EAAAklE,KAKAG,GAAAhX,EAAA6W,GAAAvW,cAGA0W,GAAA,GAAAhX,EAAA6W,GAAA1W,aAAA5xD,OAEAyxD,EAAA6W,GAAAI,MAAAD,GAEA,MAAAD,GAAAC,EAAAD,KACAA,EAAAC,EACAF,EAAAD,IAIA3+D,EAAAstB,EAAAsxC,GAAAD,GA8CAK,CAAA1xC,GACS4R,EACTg9B,GAAA5uC,GAYA,SAAAA,GACA,IAAAqnB,EAAArnB,EAAAu8B,GACAxC,EAAA1S,GACArnB,EAAA47B,GAAA,IAAA59C,KAAA87C,EAAA77C,OACS+7C,EAAA3S,GACTrnB,EAAA47B,GAAA,IAAA59C,KAAAqpC,EAAA8D,WACS,iBAAA9D,EAxPT,SAAArnB,GACA,IAAAuiC,EAAA+L,GAAA3lE,KAAAq3B,EAAAu8B,IAEA,OAAAgG,GAKAgM,GAAAvuC,IACA,IAAAA,EAAAw7B,kBACAx7B,EAAAw7B,SAKAkU,GAAA1vC,IACA,IAAAA,EAAAw7B,kBACAx7B,EAAAw7B,SAMA1B,EAAA6X,wBAAA3xC,MAnBAA,EAAA47B,GAAA,IAAA59C,MAAAukD,EAAA,IAqPAqP,CAAA5xC,GACSzvB,EAAA82C,IACTrnB,EAAAgjC,GAAAjxD,EAAAs1C,EAAA9+C,MAAA,YAAAuD,GACA,OAAAV,SAAAU,EAAA,MAEAqgE,GAAAnsC,IACStvB,EAAA22C,GAtET,SAAArnB,GACA,IAAAA,EAAA47B,GAAA,CAIA,IAAA3+D,EAAA8hE,EAAA/+B,EAAAu8B,IACAv8B,EAAAgjC,GAAAjxD,EAAA,CAAA9U,EAAAmpD,KAAAnpD,EAAAipD,MAAAjpD,EAAA+oD,KAAA/oD,EAAAyrD,KAAAzrD,EAAA8oD,KAAA9oD,EAAA6oD,OAAA7oD,EAAA4oD,OAAA5oD,EAAAyoD,aAAA,SAAA55C,GACA,OAAAA,GAAAV,SAAAU,EAAA,MAGAqgE,GAAAnsC,IA6DA6xC,CAAA7xC,GACStjB,EAAA2qC,GAETrnB,EAAA47B,GAAA,IAAA59C,KAAAqpC,GAEAyS,EAAA6X,wBAAA3xC,GA7BA8xC,CAAA9xC,GAGA7zB,EAAA6zB,KACAA,EAAA47B,GAAA,MAGA57B,IA0BA,SAAAs6B,GAAAjT,EAAAzV,EAAAwoB,EAAAC,EAAA0X,GACA,IAnEAjwD,EAmEAhkB,EAAA,GAoBA,OAlBA,IAAAs8D,IAAA,IAAAA,IACAC,EAAAD,EACAA,OAAAtxD,IAGA4H,EAAA22C,IA5iFA,SAAAv7C,GACA,GAAA0E,OAAAwhE,oBACA,WAAAxhE,OAAAwhE,oBAAAlmE,GAAA/C,OAEA,IAAA3M,EACA,IAAAA,KAAA0P,EACA,GAAAA,EAAAzT,eAAA+D,GACA,SAGA,SAkiFA61E,CAAA5qB,IACA92C,EAAA82C,IAAA,IAAAA,EAAAt+C,UACAs+C,OAAAv+C,GAIAhL,EAAAw+D,kBAAA,EACAx+D,EAAA0uE,QAAA1uE,EAAA6+D,OAAAoV,EACAj0E,EAAA2+D,GAAArC,EACAt8D,EAAAy+D,GAAAlV,EACAvpD,EAAA0+D,GAAA5qB,EACA9zC,EAAAi+D,QAAA1B,GArFAv4C,EAAA,IAAAi7C,EAAAgP,GAAAoF,GAuFArzE,MAtFA6vE,WAEA7rD,EAAA6c,IAAA,OACA7c,EAAA6rD,cAAA7kE,GAGAgZ,EAmFA,SAAAurD,GAAAhmB,EAAAzV,EAAAwoB,EAAAC,GACA,OAAAC,GAAAjT,EAAAzV,EAAAwoB,EAAAC,GAAA,GAxQAP,EAAA6X,wBAAAhZ,EACA,iVAIA,SAAA34B,GACAA,EAAA47B,GAAA,IAAA59C,KAAAgiB,EAAAu8B,IAAAv8B,EAAAwsC,QAAA,cAKA1S,EAAA6W,SAAA,aAGA7W,EAAA8W,SAAA,aA6PA,IAAAsB,GAAAvZ,EACA,qGACA,WACA,IAAAwZ,EAAA9E,GAAAl8D,MAAA,KAAA1I,WACA,OAAAQ,KAAAkD,WAAAgmE,EAAAhmE,UACAgmE,EAAAlpE,UAAAkpE,EAEAjW,MAKAkW,GAAAzZ,EACA,qGACA,WACA,IAAAwZ,EAAA9E,GAAAl8D,MAAA,KAAA1I,WACA,OAAAQ,KAAAkD,WAAAgmE,EAAAhmE,UACAgmE,EAAAlpE,UAAAkpE,EAEAjW,MAUA,SAAAmW,GAAAphE,EAAAqhE,GACA,IAAAxwD,EAAA7kB,EAIA,GAHA,IAAAq1E,EAAAvpE,QAAAwH,EAAA+hE,EAAA,MACAA,IAAA,KAEAA,EAAAvpE,OACA,OAAAskE,KAGA,IADAvrD,EAAAwwD,EAAA,GACAr1E,EAAA,EAAmBA,EAAAq1E,EAAAvpE,SAAoB9L,EACvCq1E,EAAAr1E,GAAAkP,YAAAmmE,EAAAr1E,GAAAgU,GAAA6Q,KACAA,EAAAwwD,EAAAr1E,IAGA,OAAA6kB,EAgBA,IAIAywD,GAAA,+EAgCA,SAAAC,GAAAj1D,GACA,IAAA2hD,EAAAH,EAAAxhD,GACAk1D,EAAAvT,EAAA9Y,MAAA,EACAssB,EAAAxT,EAAA/Y,SAAA,EACAke,EAAAnF,EAAAhZ,OAAA,EACAysB,EAAAzT,EAAAjZ,MAAAiZ,EAAA0T,SAAA,EACAC,EAAA3T,EAAAlZ,KAAA,EACAyiB,EAAAvJ,EAAAnZ,MAAA,EACA4iB,EAAAzJ,EAAApZ,QAAA,EACAgjB,EAAA5J,EAAArZ,QAAA,EACAyC,EAAA4W,EAAAxZ,aAAA,EAEAz8C,KAAAuyD,SA1CA,SAAAz9D,GACA,QAAAiK,KAAAjK,EACA,QAAAsV,GAAA7K,KAAA+pE,GAAAvqE,IAAA,MAAAjK,EAAAiK,IAAAuD,MAAAxN,EAAAiK,IACA,SAKA,IADA,IAAA8qE,GAAA,EACA71E,EAAA,EAAuBA,EAAAs1E,GAAAxpE,SAAqB9L,EAC5C,GAAAc,EAAAw0E,GAAAt1E,IAAA,CACA,GAAA61E,EACA,SAEAznE,WAAAtN,EAAAw0E,GAAAt1E,OAAAmgE,EAAAr/D,EAAAw0E,GAAAt1E,OACA61E,GAAA,GAKA,SAuBAC,CAAA7T,GAGAj2D,KAAA+pE,eAAA1qB,EACA,IAAAwgB,EACA,IAAAH,EACA,IAAAF,EAAA,MAGAx/D,KAAAgqE,OAAAJ,EACA,EAAAF,EAIA1pE,KAAAiqE,SAAA7O,EACA,EAAAqO,EACA,GAAAD,EAEAxpE,KAAA6X,MAAA,GAEA7X,KAAA4zD,QAAA2O,KAEAviE,KAAAkqE,UAGA,SAAAC,GAAAtnE,GACA,OAAAA,aAAA0mE,GAGA,SAAAa,GAAAlW,GACA,OAAAA,EAAA,GACA,EAAAnhE,KAAAgN,OAAA,EAAAm0D,GAEAnhE,KAAAgN,MAAAm0D,GAMA,SAAAjzC,GAAA81C,EAAAsT,GACAvT,EAAAC,EAAA,eACA,IAAA91C,EAAAjhB,KAAAsqE,YACA/1B,EAAA,IAKA,OAJAtzB,EAAA,IACAA,KACAszB,EAAA,KAEAA,EAAA8hB,KAAAp1C,EAAA,OAAAopD,EAAAhU,IAAA,UAIAp1C,GAAA,SACAA,GAAA,SAIA83C,GAAA,IAAAH,IACAG,GAAA,KAAAH,IACAe,GAAA,oBAAAvb,EAAA/zC,EAAA0sB,GACAA,EAAAwsC,SAAA,EACAxsC,EAAA08B,KAAA8W,GAAA3R,GAAAxa,KAQA,IAAAosB,GAAA,kBAEA,SAAAD,GAAAE,EAAAzpE,GACA,IAAAmQ,GAAAnQ,GAAA,IAAAiB,MAAAwoE,GAEA,UAAAt5D,EACA,YAGA,IAAAiT,EAAAjT,IAAArR,OAAA,OACA4qE,GAAAtmD,EAAA,IAAAniB,MAAAuoE,KAAA,UACA9K,EAAA,GAAAgL,EAAA,GAAAvW,EAAAuW,EAAA,IAEA,WAAAhL,EACA,EACA,MAAAgL,EAAA,GAAAhL,KAIA,SAAAiL,GAAAvsB,EAAArrC,GACA,IAAA8F,EAAA+vB,EACA,OAAA71B,EAAA2gD,QACA76C,EAAA9F,EAAAhN,QACA6iC,GAAAorB,EAAA5V,IAAA2S,EAAA3S,KAAA8D,UAAAkiB,GAAAhmB,GAAA8D,WAAArpC,EAAAqpC,UAEArpC,EAAA85C,GAAAiY,QAAA/xD,EAAA85C,GAAAzQ,UAAAtZ,GACAioB,EAAAkD,aAAAl7C,GAAA,GACAA,GAEAurD,GAAAhmB,GAAAysB,QAIA,SAAAC,GAAAh2E,GAGA,WAAA/B,KAAAgN,MAAAjL,EAAA69D,GAAAoY,oBAAA,IAqJA,SAAAC,KACA,QAAAhrE,KAAAkD,WAAAlD,KAAA0zD,QAAA,IAAA1zD,KAAA2zD,QA/IA9C,EAAAkD,aAAA,aAmJA,IAAAkX,GAAA,2DAKAC,GAAA,sKAEA,SAAAC,GAAA/sB,EAAAr/C,GACA,IAGAw1C,EACA62B,EACAC,EAiFAzyD,EAAAswD,EACArwD,EAvFAvE,EAAA8pC,EAEAn8C,EAAA,KAuDA,OAlDAkoE,GAAA/rB,GACA9pC,EAAA,CACAqwD,GAAAvmB,EAAA2rB,cACA1tC,EAAA+hB,EAAA4rB,MACApI,EAAAxjB,EAAA6rB,SAESx2D,EAAA2qC,IACT9pC,EAAA,GACAvV,EACAuV,EAAAvV,GAAAq/C,EAEA9pC,EAAA+qC,aAAAjB,IAESn8C,EAAAgpE,GAAAvrE,KAAA0+C,KACT7J,EAAA,MAAAtyC,EAAA,QACAqS,EAAA,CACA7gB,EAAA,EACA4oC,EAAA83B,EAAAlyD,EAAAi4D,KAAA3lB,EACApkD,EAAAgkE,EAAAlyD,EAAAk4D,KAAA5lB,EACAz/C,EAAAq/D,EAAAlyD,EAAAm4D,KAAA7lB,EACAnkD,EAAA+jE,EAAAlyD,EAAAo4D,KAAA9lB,EACAowB,GAAAxQ,EAAAiW,GAAA,IAAAnoE,EAAAq4D,MAAA/lB,KAEStyC,EAAAipE,GAAAxrE,KAAA0+C,KACT7J,EAAA,MAAAtyC,EAAA,QACAqS,EAAA,CACA7gB,EAAA63E,GAAArpE,EAAA,GAAAsyC,GACAqtB,EAAA0J,GAAArpE,EAAA,GAAAsyC,GACArhD,EAAAo4E,GAAArpE,EAAA,GAAAsyC,GACAlY,EAAAivC,GAAArpE,EAAA,GAAAsyC,GACApkD,EAAAm7E,GAAArpE,EAAA,GAAAsyC,GACAz/C,EAAAw2E,GAAArpE,EAAA,GAAAsyC,GACAnkD,EAAAk7E,GAAArpE,EAAA,GAAAsyC,KAES,MAAAjgC,EACTA,EAAA,GACS,iBAAAA,IAAA,SAAAA,GAAA,OAAAA,KA2CTsE,EA1CAwrD,GAAA9vD,EAAA3U,MA0CAupE,EA1CA9E,GAAA9vD,EAAA1U,IAAAyrE,EA4CAzyD,EAAA1V,WAAAgmE,EAAAhmE,WAIAgmE,EAAAyB,GAAAzB,EAAAtwD,GACAA,EAAA2yD,SAAArC,GACArwD,EAAA2yD,GAAA5yD,EAAAswD,KAEArwD,EAAA2yD,GAAAtC,EAAAtwD,IACAymC,cAAAxmC,EAAAwmC,aACAxmC,EAAAuiD,QAAAviD,EAAAuiD,QAGAviD,GAZA,CAAoBwmC,aAAA,EAAA+b,OAAA,IA3CpB9mD,EAAA,IACAqwD,GAAA0G,EAAAhsB,aACA/qC,EAAAstD,EAAAyJ,EAAAjQ,QAGAgQ,EAAA,IAAA7B,GAAAj1D,GAEA61D,GAAA/rB,IAAA6S,EAAA7S,EAAA,aACAgtB,EAAAxX,QAAAxV,EAAAwV,SAGAwX,EAMA,SAAAE,GAAAG,EAAAl3B,GAIA,IAAA17B,EAAA4yD,GAAArpE,WAAAqpE,EAAApU,QAAA,UAEA,OAAA/0D,MAAAuW,GAAA,EAAAA,GAAA07B,EAGA,SAAAi3B,GAAA5yD,EAAAswD,GACA,IAAArwD,EAAA,GAUA,OARAA,EAAAuiD,OAAA8N,EAAAjsB,QAAArkC,EAAAqkC,QACA,IAAAisB,EAAA/rB,OAAAvkC,EAAAukC,QACAvkC,EAAA7S,QAAA2vB,IAAA7c,EAAAuiD,OAAA,KAAAsQ,QAAAxC,MACArwD,EAAAuiD,OAGAviD,EAAAwmC,cAAA6pB,GAAAtwD,EAAA7S,QAAA2vB,IAAA7c,EAAAuiD,OAAA,KAEAviD,EAsBA,SAAA8yD,GAAAC,EAAAjpE,GACA,gBAAA5O,EAAA83E,GACA,IAAA5pC,EAWA,OATA,OAAA4pC,GAAAvpE,OAAAupE,KACA5W,EAAAtyD,EAAA,YAAAA,EAAA,uDAAAA,EAAA,kGAEAs/B,EAAAluC,EAA0BA,EAAA83E,EAAcA,EAAA5pC,GAKxC6pC,GAAA9rE,KADAmrE,GADAp3E,EAAA,iBAAAA,OACA83E,GACAD,GACA5rE,MAIA,SAAA8rE,GAAAxU,EAAAhjD,EAAAy3D,EAAAhY,GACA,IAAA1U,EAAA/qC,EAAAy1D,cACAH,EAAAQ,GAAA91D,EAAA01D,OACA5O,EAAAgP,GAAA91D,EAAA21D,SAEA3S,EAAAp0D,YAKA6wD,EAAA,MAAAA,KAEAqH,GACAO,GAAArE,EAAAnjD,GAAAmjD,EAAA,SAAA8D,EAAA2Q,GAEAnC,GACA7O,GAAAzD,EAAA,OAAAnjD,GAAAmjD,EAAA,QAAAsS,EAAAmC,GAEA1sB,GACAiY,EAAA3E,GAAAiY,QAAAtT,EAAA3E,GAAAzQ,UAAA7C,EAAA0sB,GAEAhY,GACAlD,EAAAkD,aAAAuD,EAAAsS,GAAAxO,IApFA+P,GAAAnjE,GAAAuhE,GAAAlqE,UACA8rE,GAAAa,QAvVA,WACA,OAAAb,GAAAzlD,MA6aA,IAAAgQ,GAAAi2C,GAAA,SACAM,GAAAN,IAAA,cA0HA,SAAAO,GAAAj3E,EAAApC,GAEA,IAGAs5E,EAAAC,EAHAC,EAAA,IAAAx5E,EAAAsqD,OAAAloD,EAAAkoD,SAAAtqD,EAAAoqD,QAAAhoD,EAAAgoD,SAEAqvB,EAAAr3E,EAAA8Q,QAAA2vB,IAAA22C,EAAA,UAcA,OAXAx5E,EAAAy5E,EAAA,GACAH,EAAAl3E,EAAA8Q,QAAA2vB,IAAA22C,EAAA,YAEAD,GAAAv5E,EAAAy5E,MAAAH,KAEAA,EAAAl3E,EAAA8Q,QAAA2vB,IAAA22C,EAAA,YAEAD,GAAAv5E,EAAAy5E,IAAAH,EAAAG,MAIAD,EAAAD,IAAA,EA6FA,SAAAjb,GAAApyD,GACA,IAAAwtE,EAEA,YAAA1sE,IAAAd,EACAiB,KAAA4zD,QAAAyO,OAGA,OADAkK,EAAAhK,GAAAxjE,MAEAiB,KAAA4zD,QAAA2Y,GAEAvsE,MApGA6wD,EAAA2b,cAAA,uBACA3b,EAAA4b,iBAAA,yBAuGA,IAAAC,GAAAhd,EACA,kJACA,SAAA3wD,GACA,YAAAc,IAAAd,EACAiB,KAAAk3D,aAEAl3D,KAAAmxD,OAAApyD,KAKA,SAAAm4D,KACA,OAAAl3D,KAAA4zD,QAGA,IAAA+Y,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,QAAAD,GAGA,SAAAE,GAAAC,EAAAC,GACA,OAAAD,EAAAC,OAGA,SAAAC,GAAAz5E,EAAAqB,EAAAunC,GAEA,OAAA5oC,EAAA,KAAAA,GAAA,EAEA,IAAAshB,KAAAthB,EAAA,IAAAqB,EAAAunC,GAAAywC,GAEA,IAAA/3D,KAAAthB,EAAAqB,EAAAunC,GAAA6lB,UAIA,SAAAirB,GAAA15E,EAAAqB,EAAAunC,GAEA,OAAA5oC,EAAA,KAAAA,GAAA,EAEAshB,KAAA2nD,IAAAjpE,EAAA,IAAAqB,EAAAunC,GAAAywC,GAEA/3D,KAAA2nD,IAAAjpE,EAAAqB,EAAAunC,GAuKA,SAAA+wC,GAAArW,EAAAsW,GACAvW,EAAA,GAAAC,IAAAj3D,QAAA,EAAAutE,GA+DA,SAAAC,GAAAlvB,EAAApB,EAAAiC,EAAA6d,EAAAC,GACA,IAAAwQ,EACA,aAAAnvB,EACAqf,GAAAz9D,KAAA88D,EAAAC,GAAA5f,MAEAowB,EAAA5P,GAAAvf,EAAA0e,EAAAC,GACA/f,EAAAuwB,IACAvwB,EAAAuwB,GAMA,SAAAzJ,EAAA9mB,EAAAiC,EAAA6d,EAAAC,GACA,IAAAyQ,EAAArQ,GAAA2G,EAAA9mB,EAAAiC,EAAA6d,EAAAC,GACAtd,EAAAgd,GAAA+Q,EAAArwB,KAAA,EAAAqwB,EAAAhQ,WAKA,OAHAx9D,KAAAm9C,KAAAsC,EAAAkd,kBACA38D,KAAAi9C,MAAAwC,EAAA+jB,eACAxjE,KAAAy/C,OAAAgkB,cACAzjE,MAXAT,KAAAS,KAAAo+C,EAAApB,EAAAiC,EAAA6d,EAAAC,IAjFAjG,EAAA,wBACA,OAAA92D,KAAA8jE,WAAA,MAGAhN,EAAA,wBACA,OAAA92D,KAAAytE,cAAA,MAOAL,GAAA,mBACAA,GAAA,oBACAA,GAAA,sBACAA,GAAA,uBAIA3X,EAAA,iBACAA,EAAA,oBAIAU,EAAA,cACAA,EAAA,iBAKA4C,GAAA,IAAAL,IACAK,GAAA,IAAAL,IACAK,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,OAAAR,GAAAN,GACAc,GAAA,OAAAR,GAAAN,GACAc,GAAA,QAAAP,GAAAN,GACAa,GAAA,QAAAP,GAAAN,GAEA0B,GAAA,yCAAAxb,EAAApB,EAAAjmB,EAAAggC,GACA/Z,EAAA+Z,EAAAvvD,OAAA,MAAA2sD,EAAA/V,KAGAwb,GAAA,qBAAAxb,EAAApB,EAAAjmB,EAAAggC,GACA/Z,EAAA+Z,GAAAlG,EAAA8J,kBAAAvc,KAqDA0Y,EAAA,sBAIArB,EAAA,eAIAU,EAAA,aAIA4C,GAAA,IAAAjB,GACA6B,GAAA,aAAAvb,EAAA/zC,GACAA,EAAA4vD,IAAA,GAAA9F,EAAA/V,GAAA,KAWA0Y,EAAA,0BAIArB,EAAA,YAGAU,EAAA,UAIA4C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,cAAAG,EAAA/H,GAEA,OAAA+H,EACA/H,EAAAuc,yBAAAvc,EAAAwc,cACAxc,EAAAyc,iCAGAjU,GAAA,WAAAO,IACAP,GAAA,cAAAvb,EAAA/zC,GACAA,EAAA6vD,IAAA/F,EAAA/V,EAAAn8C,MAAAk2D,GAAA,MAKA,IAAA0V,GAAAhT,GAAA,WAIA/D,EAAA,qCAIArB,EAAA,mBAGAU,EAAA,eAIA4C,GAAA,MAAAT,IACAS,GAAA,OAAAf,GACA2B,GAAA,wBAAAvb,EAAA/zC,EAAA0sB,GACAA,EAAAytC,WAAArQ,EAAA/V,KAcA0Y,EAAA,yBAIArB,EAAA,cAIAU,EAAA,aAIA4C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA4B,GAAA,WAAAS,IAIA,IAAA0T,GAAAjT,GAAA,cAIA/D,EAAA,yBAIArB,EAAA,cAIAU,EAAA,aAIA4C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA4B,GAAA,WAAAU,IAIA,IA+CAtD,GA/CAgX,GAAAlT,GAAA,cAgDA,IA5CA/D,EAAA,mBACA,SAAA92D,KAAAy8C,cAAA,OAGAqa,EAAA,wBACA,SAAA92D,KAAAy8C,cAAA,MAGAqa,EAAA,6BACAA,EAAA,0BACA,UAAA92D,KAAAy8C,gBAEAqa,EAAA,2BACA,WAAA92D,KAAAy8C,gBAEAqa,EAAA,4BACA,WAAA92D,KAAAy8C,gBAEAqa,EAAA,6BACA,WAAA92D,KAAAy8C,gBAEAqa,EAAA,8BACA,WAAA92D,KAAAy8C,gBAEAqa,EAAA,+BACA,WAAA92D,KAAAy8C,gBAMAgZ,EAAA,oBAIAU,EAAA,kBAIA4C,GAAA,IAAAT,GAAAR,GACAiB,GAAA,KAAAT,GAAAP,GACAgB,GAAA,MAAAT,GAAAN,GAGAjB,GAAA,OAAwBA,GAAAj3D,QAAA,EAAmBi3D,IAAA,IAC3CgC,GAAAhC,GAAA0B,IAGA,SAAAuV,GAAA5vB,EAAA/zC,GACAA,EAAAiwD,IAAAnG,EAAA,UAAA/V,IAGA,IAAA2Y,GAAA,IAAqBA,GAAAj3D,QAAA,EAAmBi3D,IAAA,IACxC4C,GAAA5C,GAAAiX,IAIA,IAAAC,GAAApT,GAAA,mBAIA/D,EAAA,oBACAA,EAAA,qBAYA,IAAAoX,GAAApa,EAAAz0D,UAsFA,SAAA8uE,GAAAntE,GACA,OAAAA,EArFAktE,GAAAx4C,OACAw4C,GAAA3N,SAjuBA,SAAAhiB,EAAA9V,GAGA,IAAAzzB,EAAAupC,GAAA6lB,KACAgK,EAAAzD,GAAA31D,EAAAhV,MAAA6oC,QAAA,OACAF,EAAAkoB,EAAAwd,eAAAruE,KAAAouE,IAAA,WAEA7W,EAAA9uB,IAAAysB,EAAAzsB,EAAAE,IAAAF,EAAAE,GAAAppC,KAAAS,KAAAgV,GAAAyzB,EAAAE,IAEA,OAAA3oC,KAAA2oC,OAAA4uB,GAAAv3D,KAAAk3D,aAAAqJ,SAAA53B,EAAA3oC,KAAAokE,GAAApvD,MAytBAk5D,GAAAnoE,MAttBA,WACA,WAAA+tD,EAAA9zD,OAstBAkuE,GAAAtlC,KAvpBA,SAAAwV,EAAAyX,EAAAyY,GACA,IAAAC,EACAC,EACAjX,EAEA,IAAAv3D,KAAAkD,UACA,OAAAwiB,IAKA,KAFA6oD,EAAA5D,GAAAvsB,EAAAp+C,OAEAkD,UACA,OAAAwiB,IAOA,OAJA8oD,EAAA,KAAAD,EAAAjE,YAAAtqE,KAAAsqE,aAEAzU,EAAAD,EAAAC,IAGA,WAAA0B,EAAA2U,GAAAlsE,KAAAuuE,GAAA,GAA6D,MAC7D,YAAAhX,EAAA2U,GAAAlsE,KAAAuuE,GAAyD,MACzD,cAAAhX,EAAA2U,GAAAlsE,KAAAuuE,GAAA,EAA+D,MAC/D,aAAAhX,GAAAv3D,KAAAuuE,GAAA,IAAwD,MACxD,aAAAhX,GAAAv3D,KAAAuuE,GAAA,IAAwD,MACxD,WAAAhX,GAAAv3D,KAAAuuE,GAAA,KAAuD,MACvD,UAAAhX,GAAAv3D,KAAAuuE,EAAAC,GAAA,MAAmE,MACnE,WAAAjX,GAAAv3D,KAAAuuE,EAAAC,GAAA,OAAqE,MACrE,QAAAjX,EAAAv3D,KAAAuuE,EAGA,OAAAD,EAAA/W,EAAAtD,EAAAsD,IAynBA2W,GAAAplC,MA5ZA,SAAA+sB,GACA,IAAAtX,EAEA,QAAA1+C,KADAg2D,EAAAD,EAAAC,KACA,gBAAAA,IAAA71D,KAAAkD,UACA,OAAAlD,KAGA,IAAAyuE,EAAAzuE,KAAA0zD,OAAAyZ,GAAAD,GAEA,OAAArX,GACA,WACAtX,EAAAkwB,EAAAzuE,KAAAm9C,OAAA,SACA,MACA,cACAoB,EAAAkwB,EAAAzuE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAi9C,QAAA,SACA,MACA,YACAsB,EAAAkwB,EAAAzuE,KAAAm9C,OAAAn9C,KAAAi9C,QAAA,OACA,MACA,WACAsB,EAAAkwB,EAAAzuE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,OAAAz/C,KAAAi/C,UAAA,KACA,MACA,cACAV,EAAAkwB,EAAAzuE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,QAAAz/C,KAAAk/C,aAAA,QACA,MACA,UACA,WACAX,EAAAkwB,EAAAzuE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,OAAA,KACA,MACA,WACAlB,EAAAv+C,KAAA2yD,GAAAzQ,UACA3D,GAAAsuB,GAAAE,GAAAxuB,GAAAv+C,KAAA0zD,OAAA,EAAA1zD,KAAAsqE,YAAAsC,IAAAC,IAAA,EACA,MACA,aACAtuB,EAAAv+C,KAAA2yD,GAAAzQ,UACA3D,GAAAquB,GAAAG,GAAAxuB,EAAAquB,IAAA,EACA,MACA,aACAruB,EAAAv+C,KAAA2yD,GAAAzQ,UACA3D,GAAAouB,GAAAI,GAAAxuB,EAAAouB,IAAA,EAMA,OAFA3sE,KAAA2yD,GAAAiY,QAAArsB,GACAsS,EAAAkD,aAAA/zD,MAAA,GACAA,MAgXAkuE,GAAAvlC,OA/iBA,SAAA+lC,GACAA,IACAA,EAAA1uE,KAAAgrE,QAAAna,EAAA4b,iBAAA5b,EAAA2b,eAEA,IAAAjV,EAAAJ,EAAAn3D,KAAA0uE,GACA,OAAA1uE,KAAAk3D,aAAAyX,WAAApX,IA2iBA2W,GAAAvuE,KAxiBA,SAAA4+C,EAAAqwB,GACA,OAAA5uE,KAAAkD,YACA8wD,EAAAzV,MAAAr7C,WACAkhE,GAAA7lB,GAAAr7C,WACAioE,GAAA,CAAmCvrE,GAAAI,KAAAL,KAAA4+C,IAAqB4S,OAAAnxD,KAAAmxD,UAAA0d,UAAAD,GAExD5uE,KAAAk3D,aAAAO,eAmiBAyW,GAAAY,QA/hBA,SAAAF,GACA,OAAA5uE,KAAAL,KAAAykE,KAAAwK,IA+hBAV,GAAAtuE,GA5hBA,SAAA2+C,EAAAqwB,GACA,OAAA5uE,KAAAkD,YACA8wD,EAAAzV,MAAAr7C,WACAkhE,GAAA7lB,GAAAr7C,WACAioE,GAAA,CAAmCxrE,KAAAK,KAAAJ,GAAA2+C,IAAqB4S,OAAAnxD,KAAAmxD,UAAA0d,UAAAD,GAExD5uE,KAAAk3D,aAAAO,eAuhBAyW,GAAAa,MAnhBA,SAAAH,GACA,OAAA5uE,KAAAJ,GAAAwkE,KAAAwK,IAmhBAV,GAAA/5D,IAxiGA,SAAA0hD,GAEA,OAAAX,EAAAl1D,KADA61D,EAAAD,EAAAC,KAEA71D,KAAA61D,KAEA71D,MAoiGAkuE,GAAAc,UAxUA,WACA,OAAAzd,EAAAvxD,MAAA4xD,UAwUAsc,GAAAxC,QA5tBA,SAAAttB,EAAAyX,GACA,IAAAoZ,EAAAjb,EAAA5V,KAAAgmB,GAAAhmB,GACA,SAAAp+C,KAAAkD,YAAA+rE,EAAA/rE,aAIA,iBADA2yD,EAAAD,EAAAC,IAAA,eAEA71D,KAAAkiD,UAAA+sB,EAAA/sB,UAEA+sB,EAAA/sB,UAAAliD,KAAA+F,QAAA8iC,QAAAgtB,GAAA3T,YAotBAgsB,GAAA3C,SAhtBA,SAAAntB,EAAAyX,GACA,IAAAoZ,EAAAjb,EAAA5V,KAAAgmB,GAAAhmB,GACA,SAAAp+C,KAAAkD,YAAA+rE,EAAA/rE,aAIA,iBADA2yD,EAAAD,EAAAC,IAAA,eAEA71D,KAAAkiD,UAAA+sB,EAAA/sB,UAEAliD,KAAA+F,QAAA+iC,MAAA+sB,GAAA3T,UAAA+sB,EAAA/sB,YAwsBAgsB,GAAAgB,UApsBA,SAAAvvE,EAAAC,EAAAi2D,EAAAsZ,GACA,IAAAC,EAAApb,EAAAr0D,KAAAykE,GAAAzkE,GACA0vE,EAAArb,EAAAp0D,KAAAwkE,GAAAxkE,GACA,SAAAI,KAAAkD,WAAAksE,EAAAlsE,WAAAmsE,EAAAnsE,cAIA,OADAisE,KAAA,MACA,GAAAnvE,KAAA0rE,QAAA0D,EAAAvZ,IAAA71D,KAAAurE,SAAA6D,EAAAvZ,MACA,MAAAsZ,EAAA,GAAAnvE,KAAAurE,SAAA8D,EAAAxZ,IAAA71D,KAAA0rE,QAAA2D,EAAAxZ,MA6rBAqY,GAAAoB,OA1rBA,SAAAlxB,EAAAyX,GACA,IACA0Z,EADAN,EAAAjb,EAAA5V,KAAAgmB,GAAAhmB,GAEA,SAAAp+C,KAAAkD,YAAA+rE,EAAA/rE,aAIA,iBADA2yD,EAAAD,EAAAC,IAAA,eAEA71D,KAAAkiD,YAAA+sB,EAAA/sB,WAEAqtB,EAAAN,EAAA/sB,UACAliD,KAAA+F,QAAA8iC,QAAAgtB,GAAA3T,WAAAqtB,MAAAvvE,KAAA+F,QAAA+iC,MAAA+sB,GAAA3T,aAgrBAgsB,GAAAsB,cA5qBA,SAAApxB,EAAAyX,GACA,OAAA71D,KAAAsvE,OAAAlxB,EAAAyX,IAAA71D,KAAA0rE,QAAAttB,EAAAyX,IA4qBAqY,GAAAuB,eAzqBA,SAAArxB,EAAAyX,GACA,OAAA71D,KAAAsvE,OAAAlxB,EAAAyX,IAAA71D,KAAAurE,SAAAntB,EAAAyX,IAyqBAqY,GAAAhrE,QAvVA,WACA,OAAAA,EAAAlD,OAuVAkuE,GAAAxB,QACAwB,GAAA/c,UACA+c,GAAAhX,cACAgX,GAAAl7E,IAAAm2E,GACA+E,GAAAp7E,IAAAm2E,GACAiF,GAAAwB,aAzVA,WACA,OAAAjmE,EAAA,GAAwB8nD,EAAAvxD,QAyVxBkuE,GAAA95D,IA9iGA,SAAAyhD,EAAA7yD,GACA,oBAAA6yD,EAGA,IADA,IAAA8Z,EApTA,SAAAC,GACA,IAAA/Z,EAAA,GACA,QAAAga,KAAAD,EACA/Z,EAAA3gD,KAAA,CAAwBygC,KAAAk6B,EAAAzZ,SAAAF,EAAA2Z,KAKxB,OAHAha,EAAA/mC,KAAA,SAAA75B,EAAApC,GACA,OAAAoC,EAAAmhE,SAAAvjE,EAAAujE,WAEAP,EA4SAia,CADAja,EAAAC,EAAAD,IAEA7hE,EAAA,EAA2BA,EAAA27E,EAAA7vE,OAAwB9L,IACnDgM,KAAA2vE,EAAA37E,GAAA2hD,MAAAkgB,EAAA8Z,EAAA37E,GAAA2hD,YAIA,GAAAuf,EAAAl1D,KADA61D,EAAAD,EAAAC,KAEA,OAAA71D,KAAA61D,GAAA7yD,GAGA,OAAAhD,MAkiGAkuE,GAAArlC,QAleA,SAAAgtB,GACA,IAAAtX,EAEA,QAAA1+C,KADAg2D,EAAAD,EAAAC,KACA,gBAAAA,IAAA71D,KAAAkD,UACA,OAAAlD,KAGA,IAAAyuE,EAAAzuE,KAAA0zD,OAAAyZ,GAAAD,GAEA,OAAArX,GACA,WACAtX,EAAAkwB,EAAAzuE,KAAAm9C,OAAA,KACA,MACA,cACAoB,EAAAkwB,EAAAzuE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAi9C,QAAA,KACA,MACA,YACAsB,EAAAkwB,EAAAzuE,KAAAm9C,OAAAn9C,KAAAi9C,QAAA,GACA,MACA,WACAsB,EAAAkwB,EAAAzuE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,OAAAz/C,KAAAi/C,WACA,MACA,cACAV,EAAAkwB,EAAAzuE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,QAAAz/C,KAAAk/C,aAAA,IACA,MACA,UACA,WACAX,EAAAkwB,EAAAzuE,KAAAm9C,OAAAn9C,KAAAi9C,QAAAj9C,KAAAy/C,QACA,MACA,WACAlB,EAAAv+C,KAAA2yD,GAAAzQ,UACA3D,GAAAwuB,GAAAxuB,GAAAv+C,KAAA0zD,OAAA,EAAA1zD,KAAAsqE,YAAAsC,IAAAC,IACA,MACA,aACAtuB,EAAAv+C,KAAA2yD,GAAAzQ,UACA3D,GAAAwuB,GAAAxuB,EAAAquB,IACA,MACA,aACAruB,EAAAv+C,KAAA2yD,GAAAzQ,UACA3D,GAAAwuB,GAAAxuB,EAAAouB,IAMA,OAFA3sE,KAAA2yD,GAAAiY,QAAArsB,GACAsS,EAAAkD,aAAA/zD,MAAA,GACAA,MAsbAkuE,GAAAjC,YACAiC,GAAA6B,QAxXA,WACA,IAAAj7E,EAAAkL,KACA,OAAAlL,EAAAqoD,OAAAroD,EAAAmoD,QAAAnoD,EAAA2qD,OAAA3qD,EAAAgoD,OAAAhoD,EAAA+nD,SAAA/nD,EAAA8nD,SAAA9nD,EAAA2nD,gBAuXAyxB,GAAA8B,SApXA,WACA,IAAAl7E,EAAAkL,KACA,OACAwpE,MAAA10E,EAAAqoD,OACAie,OAAAtmE,EAAAmoD,QACAwC,KAAA3qD,EAAA2qD,OACA+f,MAAA1qE,EAAA0qE,QACAE,QAAA5qE,EAAA4qE,UACAG,QAAA/qE,EAAA+qE,UACAxgB,aAAAvqD,EAAAuqD,iBA4WA6uB,GAAA+B,OA9XA,WACA,WAAAl7D,KAAA/U,KAAAkiD,YA8XAgsB,GAAAgC,YArnBA,SAAAC,GACA,IAAAnwE,KAAAkD,UACA,YAEA,IAAAouD,GAAA,IAAA6e,EACAr7E,EAAAw8D,EAAAtxD,KAAA+F,QAAAurD,MAAAtxD,KACA,OAAAlL,EAAAqoD,OAAA,GAAAroD,EAAAqoD,OAAA,KACAga,EAAAriE,EAAAw8D,EAAA,iEAEA4D,EAAAngD,KAAA1V,UAAA6wE,aAEA5e,EACAtxD,KAAAiwE,SAAAC,cAEA,IAAAn7D,KAAA/U,KAAAkiD,UAAA,GAAAliD,KAAAsqE,YAAA,KAAA4F,cAAA7Y,QAAA,IAAAF,EAAAriE,EAAA,MAGAqiE,EAAAriE,EAAAw8D,EAAA,8DAqmBA4c,GAAAkC,QA5lBA,WACA,IAAApwE,KAAAkD,UACA,2BAAAlD,KAAAszD,GAAA,OAEA,IAAAp0D,EAAA,SACAmxE,EAAA,GACArwE,KAAAswE,YACApxE,EAAA,IAAAc,KAAAsqE,YAAA,gCACA+F,EAAA,KAEA,IAAAE,EAAA,IAAArxE,EAAA,MACAi+C,EAAA,GAAAn9C,KAAAm9C,QAAAn9C,KAAAm9C,QAAA,qBAEAqzB,EAAAH,EAAA,OAEA,OAAArwE,KAAA2oC,OAAA4nC,EAAApzB,EAHA,wBAGAqzB,IA8kBAtC,GAAApoE,OA3WA,WAEA,OAAA9F,KAAAkD,UAAAlD,KAAAkwE,cAAA,MA0WAhC,GAAAzrE,SA5nBA,WACA,OAAAzC,KAAA+F,QAAAorD,OAAA,MAAAxoB,OAAA,qCA4nBAulC,GAAAuC,KAvYA,WACA,OAAA19E,KAAAmB,MAAA8L,KAAAkiD,UAAA,MAuYAgsB,GAAAhsB,QA5YA,WACA,OAAAliD,KAAA2yD,GAAAzQ,UAAA,KAAAliD,KAAA2zD,SAAA,IA4YAua,GAAAwC,aA9VA,WACA,OACAtyB,MAAAp+C,KAAAszD,GACA3qB,OAAA3oC,KAAAuzD,GACApC,OAAAnxD,KAAA4zD,QACAkV,MAAA9oE,KAAA0zD,OACAtC,OAAApxD,KAAA8yD,UAyVAob,GAAA/wB,KAAAyd,GACAsT,GAAAxT,WAvmGA,WACA,OAAAA,GAAA16D,KAAAm9C,SAumGA+wB,GAAApK,SApSA,SAAA1lB,GACA,OAAAkvB,GAAA/tE,KAAAS,KACAo+C,EACAp+C,KAAAg9C,OACAh9C,KAAAi/C,UACAj/C,KAAAk3D,aAAAmN,MAAAvH,IACA98D,KAAAk3D,aAAAmN,MAAAtH,MA+RAmR,GAAAT,YA5RA,SAAArvB,GACA,OAAAkvB,GAAA/tE,KAAAS,KACAo+C,EAAAp+C,KAAA2pE,UAAA3pE,KAAAk/C,aAAA,MA2RAgvB,GAAAhxB,QAAAgxB,GAAAzE,SAnOA,SAAArrB,GACA,aAAAA,EAAArrD,KAAAgiD,MAAA/0C,KAAAi9C,QAAA,MAAAj9C,KAAAi9C,MAAA,GAAAmB,EAAA,GAAAp+C,KAAAi9C,QAAA,IAmOAixB,GAAAjxB,MAAA4e,GACAqS,GAAAlT,YAz1FA,WACA,OAAAA,GAAAh7D,KAAAm9C,OAAAn9C,KAAAi9C,UAy1FAixB,GAAAlxB,KAAAkxB,GAAAxE,MAznFA,SAAAtrB,GACA,IAAApB,EAAAh9C,KAAAk3D,aAAAla,KAAAh9C,MACA,aAAAo+C,EAAApB,EAAAh9C,KAAA01B,IAAA,GAAA0oB,EAAApB,GAAA,MAwnFAkxB,GAAAvE,QAAAuE,GAAAyC,SArnFA,SAAAvyB,GACA,IAAApB,EAAAygB,GAAAz9D,KAAA,KAAAg9C,KACA,aAAAoB,EAAApB,EAAAh9C,KAAA01B,IAAA,GAAA0oB,EAAApB,GAAA,MAonFAkxB,GAAAvQ,YAzRA,WACA,IAAAiT,EAAA5wE,KAAAk3D,aAAAmN,MACA,OAAA1G,GAAA39D,KAAAm9C,OAAAyzB,EAAA9T,IAAA8T,EAAA7T,MAwRAmR,GAAA2C,eA9RA,WACA,OAAAlT,GAAA39D,KAAAm9C,OAAA,MA8RA+wB,GAAAzuB,KAAAouB,GACAK,GAAAnxB,IAAAmxB,GAAAtE,KA55EA,SAAAxrB,GACA,IAAAp+C,KAAAkD,UACA,aAAAk7C,EAAAp+C,KAAA0lB,IAEA,IAAAq3B,EAAA/8C,KAAA0zD,OAAA1zD,KAAA2yD,GAAAuK,YAAAl9D,KAAA2yD,GAAAkS,SACA,aAAAzmB,GACAA,EAjKA,SAAAA,EAAA+S,GACA,uBAAA/S,EACAA,EAGA97C,MAAA87C,GAKA,iBADAA,EAAA+S,EAAAkN,cAAAjgB,IAEAA,EAGA,KARAj8C,SAAAi8C,EAAA,IA2JA0yB,CAAA1yB,EAAAp+C,KAAAk3D,cACAl3D,KAAA01B,IAAA0oB,EAAArB,EAAA,MAEAA,GAo5EAmxB,GAAAjvB,QAh5EA,SAAAb,GACA,IAAAp+C,KAAAkD,UACA,aAAAk7C,EAAAp+C,KAAA0lB,IAEA,IAAAu5B,GAAAj/C,KAAA+8C,MAAA,EAAA/8C,KAAAk3D,aAAAmN,MAAAvH,KAAA,EACA,aAAA1e,EAAAa,EAAAj/C,KAAA01B,IAAA0oB,EAAAa,EAAA,MA44EAivB,GAAAhvB,WAz4EA,SAAAd,GACA,IAAAp+C,KAAAkD,UACA,aAAAk7C,EAAAp+C,KAAA0lB,IAOA,SAAA04B,EAAA,CACA,IAAAa,EAzKA,SAAAb,EAAA+S,GACA,uBAAA/S,EACA+S,EAAAkN,cAAAjgB,GAAA,KAEA97C,MAAA87C,GAAA,KAAAA,EAqKA2yB,CAAA3yB,EAAAp+C,KAAAk3D,cACA,OAAAl3D,KAAA+8C,IAAA/8C,KAAA+8C,MAAA,EAAAkC,IAAA,GAEA,OAAAj/C,KAAA+8C,OAAA,GA63EAmxB,GAAA1Q,UApLA,SAAApf,GACA,IAAAof,EAAAzqE,KAAAgN,OAAAC,KAAA+F,QAAA8iC,QAAA,OAAA7oC,KAAA+F,QAAA8iC,QAAA,kBACA,aAAAuV,EAAAof,EAAAx9D,KAAA01B,IAAA0oB,EAAAof,EAAA,MAmLA0Q,GAAApxB,KAAAoxB,GAAA1O,MAAAa,GACA6N,GAAArxB,OAAAqxB,GAAAxO,QAAAoO,GACAI,GAAAtxB,OAAAsxB,GAAArO,QAAAkO,GACAG,GAAAzxB,YAAAyxB,GAAA7uB,aAAA4uB,GACAC,GAAA5D,UAxkCA,SAAAlsB,EAAA4yB,EAAAC,GACA,IACAC,EADAjwD,EAAAjhB,KAAA2zD,SAAA,EAEA,IAAA3zD,KAAAkD,UACA,aAAAk7C,EAAAp+C,KAAA0lB,IAEA,SAAA04B,EAAA,CACA,oBAAAA,GAEA,WADAA,EAAAmsB,GAAA3R,GAAAxa,IAEA,OAAAp+C,UAEajN,KAAAorB,IAAAigC,GAAA,KAAA6yB,IACb7yB,GAAA,IAmBA,OAjBAp+C,KAAA0zD,QAAAsd,IACAE,EAAApG,GAAA9qE,OAEAA,KAAA2zD,QAAAvV,EACAp+C,KAAA0zD,QAAA,EACA,MAAAwd,GACAlxE,KAAA01B,IAAAw7C,EAAA,KAEAjwD,IAAAm9B,KACA4yB,GAAAhxE,KAAAmxE,kBACArF,GAAA9rE,KAAAmrE,GAAA/sB,EAAAn9B,EAAA,WACiBjhB,KAAAmxE,oBACjBnxE,KAAAmxE,mBAAA,EACAtgB,EAAAkD,aAAA/zD,MAAA,GACAA,KAAAmxE,kBAAA,OAGAnxE,KAEA,OAAAA,KAAA0zD,OAAAzyC,EAAA6pD,GAAA9qE,OAuiCAkuE,GAAA5c,IArhCA,SAAA0f,GACA,OAAAhxE,KAAAsqE,UAAA,EAAA0G,IAqhCA9C,GAAArD,MAlhCA,SAAAmG,GASA,OARAhxE,KAAA0zD,SACA1zD,KAAAsqE,UAAA,EAAA0G,GACAhxE,KAAA0zD,QAAA,EAEAsd,GACAhxE,KAAAisE,SAAAnB,GAAA9qE,MAAA,MAGAA,MA0gCAkuE,GAAAkD,UAvgCA,WACA,SAAApxE,KAAAyzD,KACAzzD,KAAAsqE,UAAAtqE,KAAAyzD,MAAA,WACS,oBAAAzzD,KAAAszD,GAAA,CACT,IAAA+d,EAAA9G,GAAA5R,GAAA34D,KAAAszD,IACA,MAAA+d,EACArxE,KAAAsqE,UAAA+G,GAGArxE,KAAAsqE,UAAA,MAGA,OAAAtqE,MA4/BAkuE,GAAAoD,qBAz/BA,SAAAlzB,GACA,QAAAp+C,KAAAkD,YAGAk7C,IAAAgmB,GAAAhmB,GAAAksB,YAAA,GAEAtqE,KAAAsqE,YAAAlsB,GAAA,QAo/BA8vB,GAAAqD,MAj/BA,WACA,OACAvxE,KAAAsqE,YAAAtqE,KAAA+F,QAAAk3C,MAAA,GAAAqtB,aACAtqE,KAAAsqE,YAAAtqE,KAAA+F,QAAAk3C,MAAA,GAAAqtB,aA++BA4D,GAAAoC,QAt9BA,WACA,QAAAtwE,KAAAkD,YAAAlD,KAAA0zD,QAs9BAwa,GAAAsD,YAn9BA,WACA,QAAAxxE,KAAAkD,WAAAlD,KAAA0zD,QAm9BAwa,GAAAlD,SACAkD,GAAApF,MAAAkC,GACAkD,GAAAuD,SA9EA,WACA,OAAAzxE,KAAA0zD,OAAA,UA8EAwa,GAAAwD,SA3EA,WACA,OAAA1xE,KAAA0zD,OAAA,iCA2EAwa,GAAAyD,MAAAjiB,EAAA,kDAAAme,IACAK,GAAA9S,OAAA1L,EAAA,mDAAAmM,IACAqS,GAAA1E,MAAA9Z,EAAA,iDAAAkL,IACAsT,GAAAmC,KAAA3gB,EAAA,2GAjjCA,SAAAtR,EAAA4yB,GACA,aAAA5yB,GACA,iBAAAA,IACAA,MAGAp+C,KAAAsqE,UAAAlsB,EAAA4yB,GAEAhxE,OAEAA,KAAAsqE,cAwiCA4D,GAAA0D,aAAAliB,EAAA,0GAr/BA,WACA,IAAAoB,EAAA9wD,KAAA6xE,eACA,OAAA7xE,KAAA6xE,cAGA,IAAAh9E,EAAA,GAKA,GAHAu+D,EAAAv+D,EAAAmL,OACAnL,EAAAqzE,GAAArzE,IAEAklE,GAAA,CACA,IAAAmP,EAAAr0E,EAAA6+D,OAAAxC,EAAAr8D,EAAAklE,IAAAqK,GAAAvvE,EAAAklE,IACA/5D,KAAA6xE,cAAA7xE,KAAAkD,WACAoxD,EAAAz/D,EAAAklE,GAAAmP,EAAA6G,WAAA,OAEA/vE,KAAA6xE,eAAA,EAGA,OAAA7xE,KAAA6xE,gBAi/BA,IAAAC,GAAAvc,EAAAl2D,UAiCA,SAAA0yE,GAAAppC,EAAA9hC,EAAAmrE,EAAAC,GACA,IAAA9gB,EAAAoR,KACAjR,EAAAJ,IAAA98C,IAAA69D,EAAAprE,GACA,OAAAsqD,EAAA6gB,GAAA1gB,EAAA3oB,GAGA,SAAAupC,GAAAvpC,EAAA9hC,EAAAmrE,GAQA,GAPAv+D,EAAAk1B,KACA9hC,EAAA8hC,EACAA,OAAA9oC,GAGA8oC,KAAA,GAEA,MAAA9hC,EACA,OAAAkrE,GAAAppC,EAAA9hC,EAAAmrE,EAAA,SAGA,IAAAh+E,EACAwpD,EAAA,GACA,IAAAxpD,EAAA,EAAmBA,EAAA,GAAQA,IAC3BwpD,EAAAxpD,GAAA+9E,GAAAppC,EAAA30C,EAAAg+E,EAAA,SAEA,OAAAx0B,EAWA,SAAA20B,GAAAC,EAAAzpC,EAAA9hC,EAAAmrE,GACA,kBAAAI,GACA3+D,EAAAk1B,KACA9hC,EAAA8hC,EACAA,OAAA9oC,GAGA8oC,KAAA,KAGA9hC,EADA8hC,EAAAypC,EAEAA,GAAA,EAEA3+D,EAAAk1B,KACA9hC,EAAA8hC,EACAA,OAAA9oC,GAGA8oC,KAAA,IAGA,IAOA30C,EAPAm9D,EAAAoR,KACAjoD,EAAA83D,EAAAjhB,EAAAkT,MAAAvH,IAAA,EAEA,SAAAj2D,EACA,OAAAkrE,GAAAppC,GAAA9hC,EAAAyT,GAAA,EAAA03D,EAAA,OAIA,IAAAx0B,EAAA,GACA,IAAAxpD,EAAA,EAAmBA,EAAA,EAAOA,IAC1BwpD,EAAAxpD,GAAA+9E,GAAAppC,GAAA30C,EAAAsmB,GAAA,EAAA03D,EAAA,OAEA,OAAAx0B,EAlGAs0B,GAAAvR,SAzgHA,SAAAxhE,EAAAu4D,EAAAtiD,GACA,IAAAuiD,EAAAv3D,KAAAqyE,UAAAtzE,IAAAiB,KAAAqyE,UAAA,SACA,OAAAnd,EAAAqC,KAAAh4D,KAAA+3D,EAAAtiD,GAAAuiD,GAwgHAua,GAAAna,eA5/GA,SAAA54D,GACA,IAAA4pC,EAAA3oC,KAAAsyE,gBAAAvzE,GACAwzE,EAAAvyE,KAAAsyE,gBAAAvzE,EAAA2D,eAEA,OAAAimC,IAAA4pC,EACA5pC,GAGA3oC,KAAAsyE,gBAAAvzE,GAAAwzE,EAAAlb,QAAA,4BAAAtjE,GACA,OAAAA,EAAAuL,MAAA,KAGAU,KAAAsyE,gBAAAvzE,KAi/GA+yE,GAAAra,YA5+GA,WACA,OAAAz3D,KAAAwyE,cA4+GAV,GAAA7a,QAt+GA,SAAA/C,GACA,OAAAl0D,KAAAyyE,SAAApb,QAAA,KAAAnD,IAs+GA4d,GAAA3J,SAAAgG,GACA2D,GAAAnD,WAAAR,GACA2D,GAAAzQ,aAp9GA,SAAAnN,EAAA0a,EAAA5tE,EAAA0xE,GACA,IAAAnb,EAAAv3D,KAAA2yE,cAAA3xE,GACA,OAAAk0D,EAAAqC,GACAA,EAAArD,EAAA0a,EAAA5tE,EAAA0xE,GACAnb,EAAAF,QAAA,MAAAnD,IAi9GA4d,GAAAc,WA98GA,SAAAhqC,EAAA2uB,GACA,IAAA5uB,EAAA3oC,KAAA2yE,cAAA/pC,EAAA,mBACA,OAAAssB,EAAAvsB,KAAA4uB,GAAA5uB,EAAA0uB,QAAA,MAAAE,IA68GAua,GAAA19D,IA7lHA,SAAA2iB,GACA,IAAA3wB,EAAApS,EACA,IAAAA,KAAA+iC,EAEAm+B,EADA9uD,EAAA2wB,EAAA/iC,IAEAgM,KAAAhM,GAAAoS,EAEApG,KAAA,IAAAhM,GAAAoS,EAGApG,KAAA0iE,QAAA3rC,EAIA/2B,KAAA4tE,+BAAA,IAAAxU,QACAp5D,KAAA0tE,wBAAAxnE,QAAAlG,KAAA2tE,cAAAznE,QACA,cAA+BA,SA+kH/B4rE,GAAA1W,OAxhGA,SAAAtmE,EAAA6zC,GACA,OAAA7zC,EAIAwS,EAAAtH,KAAAiqE,SAAAjqE,KAAAiqE,QAAAn1E,EAAAmoD,SACAj9C,KAAAiqE,SAAAjqE,KAAAiqE,QAAA4I,UAAArX,IAAA3D,KAAAlvB,GAAA,uBAAA7zC,EAAAmoD,SAJA31C,EAAAtH,KAAAiqE,SAAAjqE,KAAAiqE,QACAjqE,KAAAiqE,QAAA,YAshGA6H,GAAA3W,YA/gGA,SAAArmE,EAAA6zC,GACA,OAAA7zC,EAIAwS,EAAAtH,KAAA8yE,cAAA9yE,KAAA8yE,aAAAh+E,EAAAmoD,SACAj9C,KAAA8yE,aAAAtX,GAAA3D,KAAAlvB,GAAA,uBAAA7zC,EAAAmoD,SAJA31C,EAAAtH,KAAA8yE,cAAA9yE,KAAA8yE,aACA9yE,KAAA8yE,aAAA,YA6gGAhB,GAAAvW,YA99FA,SAAAwX,EAAApqC,EAAAyoB,GACA,IAAAp9D,EAAAsjE,EAAA0B,EAEA,GAAAh5D,KAAAgzE,kBACA,OA7CA,SAAAD,EAAApqC,EAAAyoB,GACA,IAAAp9D,EAAAi/E,EAAA3b,EAAA4b,EAAAH,EAAAI,oBACA,IAAAnzE,KAAAozE,aAKA,IAHApzE,KAAAozE,aAAA,GACApzE,KAAAqzE,iBAAA,GACArzE,KAAAszE,kBAAA,GACAt/E,EAAA,EAAuBA,EAAA,KAAQA,EAC/BsjE,EAAApG,EAAA,KAAAl9D,IACAgM,KAAAszE,kBAAAt/E,GAAAgM,KAAAm7D,YAAA7D,EAAA,IAAA6b,oBACAnzE,KAAAqzE,iBAAAr/E,GAAAgM,KAAAo7D,OAAA9D,EAAA,IAAA6b,oBAIA,OAAA/hB,EACA,QAAAzoB,GAEA,KADAsqC,EAAA7oE,GAAA7K,KAAAS,KAAAszE,kBAAAJ,IACAD,EAAA,MAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAAqzE,iBAAAH,IACAD,EAAA,KAGA,QAAAtqC,GAEA,KADAsqC,EAAA7oE,GAAA7K,KAAAS,KAAAszE,kBAAAJ,IAEAD,GAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAAqzE,iBAAAH,IACAD,EAAA,MAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAAqzE,iBAAAH,IAEAD,GAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAAszE,kBAAAJ,IACAD,EAAA,MASA1zE,KAAAS,KAAA+yE,EAAApqC,EAAAyoB,GAYA,IATApxD,KAAAozE,eACApzE,KAAAozE,aAAA,GACApzE,KAAAqzE,iBAAA,GACArzE,KAAAszE,kBAAA,IAMAt/E,EAAA,EAAmBA,EAAA,GAAQA,IAAA,CAY3B,GAVAsjE,EAAApG,EAAA,KAAAl9D,IACAo9D,IAAApxD,KAAAqzE,iBAAAr/E,KACAgM,KAAAqzE,iBAAAr/E,GAAA,IAAAolE,OAAA,IAAAp5D,KAAAo7D,OAAA9D,EAAA,IAAAD,QAAA,iBACAr3D,KAAAszE,kBAAAt/E,GAAA,IAAAolE,OAAA,IAAAp5D,KAAAm7D,YAAA7D,EAAA,IAAAD,QAAA,kBAEAjG,GAAApxD,KAAAozE,aAAAp/E,KACAglE,EAAA,IAAAh5D,KAAAo7D,OAAA9D,EAAA,SAAAt3D,KAAAm7D,YAAA7D,EAAA,IACAt3D,KAAAozE,aAAAp/E,GAAA,IAAAolE,OAAAJ,EAAA3B,QAAA,cAGAjG,GAAA,SAAAzoB,GAAA3oC,KAAAqzE,iBAAAr/E,GAAA6jE,KAAAkb,GACA,OAAA/+E,EACa,GAAAo9D,GAAA,QAAAzoB,GAAA3oC,KAAAszE,kBAAAt/E,GAAA6jE,KAAAkb,GACb,OAAA/+E,EACa,IAAAo9D,GAAApxD,KAAAozE,aAAAp/E,GAAA6jE,KAAAkb,GACb,OAAA/+E,IA87FA89E,GAAAxW,YA33FA,SAAApC,GACA,OAAAl5D,KAAAgzE,mBACA/hB,EAAAjxD,KAAA,iBACAg8D,GAAAz8D,KAAAS,MAEAk5D,EACAl5D,KAAAu8D,mBAEAv8D,KAAAq8D,eAGApL,EAAAjxD,KAAA,kBACAA,KAAAq8D,aAAAN,IAEA/7D,KAAAu8D,oBAAArD,EACAl5D,KAAAu8D,mBAAAv8D,KAAAq8D,eA62FAyV,GAAAzW,iBAh5FA,SAAAnC,GACA,OAAAl5D,KAAAgzE,mBACA/hB,EAAAjxD,KAAA,iBACAg8D,GAAAz8D,KAAAS,MAEAk5D,EACAl5D,KAAAw8D,wBAEAx8D,KAAAs8D,oBAGArL,EAAAjxD,KAAA,uBACAA,KAAAs8D,kBAAAR,IAEA97D,KAAAw8D,yBAAAtD,EACAl5D,KAAAw8D,wBAAAx8D,KAAAs8D,oBAk4FAwV,GAAA90B,KAxsFA,SAAAsa,GACA,OAAAmG,GAAAnG,EAAAt3D,KAAAqkE,MAAAvH,IAAA98D,KAAAqkE,MAAAtH,KAAA/f,MAwsFA80B,GAAAyB,eA5rFA,WACA,OAAAvzE,KAAAqkE,MAAAtH,KA4rFA+U,GAAA0B,eAjsFA,WACA,OAAAxzE,KAAAqkE,MAAAvH,KAksFAgV,GAAA7T,SAplFA,SAAAnpE,EAAA6zC,GACA,IAAAs1B,EAAA32D,EAAAtH,KAAAyzE,WAAAzzE,KAAAyzE,UACAzzE,KAAAyzE,UAAA3+E,IAAA,IAAAA,GAAAkL,KAAAyzE,UAAAZ,SAAAhb,KAAAlvB,GAAA,uBACA,WAAA7zC,EAAA+oE,GAAAI,EAAAj+D,KAAAqkE,MAAAvH,KACA,EAAAmB,EAAAnpE,EAAAioD,OAAAkhB,GAilFA6T,GAAA/T,YAvkFA,SAAAjpE,GACA,WAAAA,EAAA+oE,GAAA79D,KAAA0zE,aAAA1zE,KAAAqkE,MAAAvH,KACA,EAAA98D,KAAA0zE,aAAA5+E,EAAAioD,OAAA/8C,KAAA0zE,cAskFA5B,GAAA9T,cA9kFA,SAAAlpE,GACA,WAAAA,EAAA+oE,GAAA79D,KAAA2zE,eAAA3zE,KAAAqkE,MAAAvH,KACA,EAAA98D,KAAA2zE,eAAA7+E,EAAAioD,OAAA/8C,KAAA2zE,gBA6kFA7B,GAAAzT,cApgFA,SAAAuV,EAAAjrC,EAAAyoB,GACA,IAAAp9D,EAAAsjE,EAAA0B,EAEA,GAAAh5D,KAAA6zE,oBACA,OApEA,SAAAD,EAAAjrC,EAAAyoB,GACA,IAAAp9D,EAAAi/E,EAAA3b,EAAA4b,EAAAU,EAAAT,oBACA,IAAAnzE,KAAA8zE,eAKA,IAJA9zE,KAAA8zE,eAAA,GACA9zE,KAAA+zE,oBAAA,GACA/zE,KAAAg0E,kBAAA,GAEAhgF,EAAA,EAAuBA,EAAA,IAAOA,EAC9BsjE,EAAApG,EAAA,SAAAnU,IAAA/oD,GACAgM,KAAAg0E,kBAAAhgF,GAAAgM,KAAA+9D,YAAAzG,EAAA,IAAA6b,oBACAnzE,KAAA+zE,oBAAA//E,GAAAgM,KAAAg+D,cAAA1G,EAAA,IAAA6b,oBACAnzE,KAAA8zE,eAAA9/E,GAAAgM,KAAAi+D,SAAA3G,EAAA,IAAA6b,oBAIA,OAAA/hB,EACA,SAAAzoB,GAEA,KADAsqC,EAAA7oE,GAAA7K,KAAAS,KAAA8zE,eAAAZ,IACAD,EAAA,KACa,QAAAtqC,GAEb,KADAsqC,EAAA7oE,GAAA7K,KAAAS,KAAA+zE,oBAAAb,IACAD,EAAA,MAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAAg0E,kBAAAd,IACAD,EAAA,KAGA,SAAAtqC,GAEA,KADAsqC,EAAA7oE,GAAA7K,KAAAS,KAAA8zE,eAAAZ,IAEAD,GAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAA+zE,oBAAAb,IAEAD,GAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAAg0E,kBAAAd,IACAD,EAAA,KACa,QAAAtqC,GAEb,KADAsqC,EAAA7oE,GAAA7K,KAAAS,KAAA+zE,oBAAAb,IAEAD,GAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAA8zE,eAAAZ,IAEAD,GAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAAg0E,kBAAAd,IACAD,EAAA,MAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAAg0E,kBAAAd,IAEAD,GAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAA8zE,eAAAZ,IAEAD,GAGA,KADAA,EAAA7oE,GAAA7K,KAAAS,KAAA+zE,oBAAAb,IACAD,EAAA,MASA1zE,KAAAS,KAAA4zE,EAAAjrC,EAAAyoB,GAUA,IAPApxD,KAAA8zE,iBACA9zE,KAAA8zE,eAAA,GACA9zE,KAAAg0E,kBAAA,GACAh0E,KAAA+zE,oBAAA,GACA/zE,KAAAi0E,mBAAA,IAGAjgF,EAAA,EAAmBA,EAAA,EAAOA,IAAA,CAc1B,GAXAsjE,EAAApG,EAAA,SAAAnU,IAAA/oD,GACAo9D,IAAApxD,KAAAi0E,mBAAAjgF,KACAgM,KAAAi0E,mBAAAjgF,GAAA,IAAAolE,OAAA,IAAAp5D,KAAAi+D,SAAA3G,EAAA,IAAAD,QAAA,qBACAr3D,KAAA+zE,oBAAA//E,GAAA,IAAAolE,OAAA,IAAAp5D,KAAAg+D,cAAA1G,EAAA,IAAAD,QAAA,qBACAr3D,KAAAg0E,kBAAAhgF,GAAA,IAAAolE,OAAA,IAAAp5D,KAAA+9D,YAAAzG,EAAA,IAAAD,QAAA,sBAEAr3D,KAAA8zE,eAAA9/E,KACAglE,EAAA,IAAAh5D,KAAAi+D,SAAA3G,EAAA,SAAAt3D,KAAAg+D,cAAA1G,EAAA,SAAAt3D,KAAA+9D,YAAAzG,EAAA,IACAt3D,KAAA8zE,eAAA9/E,GAAA,IAAAolE,OAAAJ,EAAA3B,QAAA,cAGAjG,GAAA,SAAAzoB,GAAA3oC,KAAAi0E,mBAAAjgF,GAAA6jE,KAAA+b,GACA,OAAA5/E,EACa,GAAAo9D,GAAA,QAAAzoB,GAAA3oC,KAAA+zE,oBAAA//E,GAAA6jE,KAAA+b,GACb,OAAA5/E,EACa,GAAAo9D,GAAA,OAAAzoB,GAAA3oC,KAAAg0E,kBAAAhgF,GAAA6jE,KAAA+b,GACb,OAAA5/E,EACa,IAAAo9D,GAAApxD,KAAA8zE,eAAA9/E,GAAA6jE,KAAA+b,GACb,OAAA5/E,IAm+EA89E,GAAA1T,cAr7EA,SAAAlF,GACA,OAAAl5D,KAAA6zE,qBACA5iB,EAAAjxD,KAAA,mBACA4+D,GAAAr/D,KAAAS,MAEAk5D,EACAl5D,KAAAo/D,qBAEAp/D,KAAAi/D,iBAGAhO,EAAAjxD,KAAA,oBACAA,KAAAi/D,eAAAR,IAEAz+D,KAAAo/D,sBAAAlG,EACAl5D,KAAAo/D,qBAAAp/D,KAAAi/D,iBAu6EA6S,GAAA3T,mBAl6EA,SAAAjF,GACA,OAAAl5D,KAAA6zE,qBACA5iB,EAAAjxD,KAAA,mBACA4+D,GAAAr/D,KAAAS,MAEAk5D,EACAl5D,KAAAq/D,0BAEAr/D,KAAAk/D,sBAGAjO,EAAAjxD,KAAA,yBACAA,KAAAk/D,oBAAAR,IAEA1+D,KAAAq/D,2BAAAnG,EACAl5D,KAAAq/D,0BAAAr/D,KAAAk/D,sBAo5EA4S,GAAA5T,iBA/4EA,SAAAhF,GACA,OAAAl5D,KAAA6zE,qBACA5iB,EAAAjxD,KAAA,mBACA4+D,GAAAr/D,KAAAS,MAEAk5D,EACAl5D,KAAAs/D,wBAEAt/D,KAAAm/D,oBAGAlO,EAAAjxD,KAAA,uBACAA,KAAAm/D,kBAAAR,IAEA3+D,KAAAs/D,yBAAApG,EACAl5D,KAAAs/D,wBAAAt/D,KAAAm/D,oBAk4EA2S,GAAA9R,KAtuEA,SAAA5hB,GAGA,aAAAA,EAAA,IAAA+Q,cAAA1oD,OAAA,IAouEAqrE,GAAA1f,SAhuEA,SAAAoN,EAAAE,EAAAwU,GACA,OAAA1U,EAAA,GACA0U,EAAA,UAEAA,EAAA,WAwzEA5R,GAAA,MACAlB,uBAAA,uBACAnK,QAAA,SAAA/C,GACA,IAAArhE,EAAAqhE,EAAA,GACAqD,EAAA,IAAApD,EAAAD,EAAA,aACA,IAAArhE,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,UACA,OAAAqhE,EAAAqD,KAMA1G,EAAA6b,KAAAhd,EAAA,wDAAA4S,IACAzR,EAAAsjB,SAAAzkB,EAAA,gEAAA6S,IAEA,IAAA6R,GAAArhF,KAAAorB,IAmBA,SAAAk2D,GAAA//D,EAAA8pC,EAAAp7C,EAAA4oE,GACA,IAAA1C,EAAAiC,GAAA/sB,EAAAp7C,GAMA,OAJAsR,EAAAy1D,eAAA6B,EAAA1C,EAAAa,cACAz1D,EAAA01D,OAAA4B,EAAA1C,EAAAc,MACA11D,EAAA21D,SAAA2B,EAAA1C,EAAAe,QAEA31D,EAAA41D,UAaA,SAAAoK,GAAApgB,GACA,OAAAA,EAAA,EACAnhE,KAAAmB,MAAAggE,GAEAnhE,KAAAgiD,KAAAmf,GAmDA,SAAAqgB,GAAA3K,GAGA,YAAAA,EAAA,OAGA,SAAA4K,GAAApZ,GAEA,cAAAA,EAAA,KAkDA,SAAAqZ,GAAAC,GACA,kBACA,OAAA10E,KAAAoiD,GAAAsyB,IAIA,IAAAC,GAAAF,GAAA,MACAG,GAAAH,GAAA,KACAI,GAAAJ,GAAA,KACAK,GAAAL,GAAA,KACAM,GAAAN,GAAA,KACAO,GAAAP,GAAA,KACAQ,GAAAR,GAAA,KACAS,GAAAT,GAAA,KACAU,GAAAV,GAAA,KAWA,SAAAW,GAAAzyE,GACA,kBACA,OAAA3C,KAAAkD,UAAAlD,KAAA6X,MAAAlV,GAAA+iB,KAIA,IAAA25B,GAAA+1B,GAAA,gBACAvV,GAAAuV,GAAA,WACA1V,GAAA0V,GAAA,WACA5V,GAAA4V,GAAA,SACAxL,GAAAwL,GAAA,QACAha,GAAAga,GAAA,UACA5L,GAAA4L,GAAA,SAMAr1E,GAAAhN,KAAAgN,MACAs1E,GAAA,CACA7T,GAAA,GACApxE,EAAA,GACA0E,EAAA,GACA3E,EAAA,GACAksC,EAAA,GACAulC,EAAA,IA6EA0T,GAAAviF,KAAAorB,IAEA,SAAAo2B,GAAA/gD,GACA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAGA,SAAA+hF,KAQA,IAAAv1E,KAAAkD,UACA,OAAAlD,KAAAk3D,aAAAO,cAGA,IAGAiI,EAAAF,EAHAK,EAAAyV,GAAAt1E,KAAA+pE,eAAA,IACAH,EAAA0L,GAAAt1E,KAAAgqE,OACA5O,EAAAka,GAAAt1E,KAAAiqE,SAIAvK,EAAAzL,EAAA4L,EAAA,IACAL,EAAAvL,EAAAyL,EAAA,IACAG,GAAA,GACAH,GAAA,GAQA,IAAA8V,EALAvhB,EAAAmH,EAAA,IAMAwG,EALAxG,GAAA,GAMAqa,EAAA7L,EACAz5E,EAAAqvE,EACA1qE,EAAA4qE,EACAtvE,EAAAyvE,IAAA/1B,QAAA,GAAAutB,QAAA,gBACAjvC,EAAApoB,KAAA40E,YAEA,IAAAxsD,EAGA,YAGA,IAAAstD,EAAAttD,EAAA,SACAutD,EAAAphC,GAAAv0C,KAAAiqE,WAAA11B,GAAAnsB,GAAA,OACAwtD,EAAArhC,GAAAv0C,KAAAgqE,SAAAz1B,GAAAnsB,GAAA,OACAytD,EAAAthC,GAAAv0C,KAAA+pE,iBAAAx1B,GAAAnsB,GAAA,OAEA,OAAAstD,EAAA,KACAF,EAAAG,EAAAH,EAAA,SACA5T,EAAA+T,EAAA/T,EAAA,SACA6T,EAAAG,EAAAH,EAAA,SACAtlF,GAAA2E,GAAA1E,EAAA,SACAD,EAAA0lF,EAAA1lF,EAAA,SACA2E,EAAA+gF,EAAA/gF,EAAA,SACA1E,EAAAylF,EAAAzlF,EAAA,QAGA,IAAA0lF,GAAAvM,GAAAlqE,UAwGA,OAtGAy2E,GAAA5yE,QA5tDA,WACA,OAAAlD,KAAAuyD,UA4tDAujB,GAAA33D,IAxVA,WACA,IAAAlH,EAAAjX,KAAA6X,MAaA,OAXA7X,KAAA+pE,cAAAqK,GAAAp0E,KAAA+pE,eACA/pE,KAAAgqE,MAAAoK,GAAAp0E,KAAAgqE,OACAhqE,KAAAiqE,QAAAmK,GAAAp0E,KAAAiqE,SAEAhzD,EAAAooC,aAAA+0B,GAAAn9D,EAAAooC,cACApoC,EAAA4oD,QAAAuU,GAAAn9D,EAAA4oD,SACA5oD,EAAAyoD,QAAA0U,GAAAn9D,EAAAyoD,SACAzoD,EAAAuoD,MAAA4U,GAAAn9D,EAAAuoD,OACAvoD,EAAAmkD,OAAAgZ,GAAAn9D,EAAAmkD,QACAnkD,EAAAuyD,MAAA4K,GAAAn9D,EAAAuyD,OAEAxpE,MA2UA81E,GAAApgD,IA7TA,SAAA0oB,EAAAp7C,GACA,OAAAqxE,GAAAr0E,KAAAo+C,EAAAp7C,EAAA,IA6TA8yE,GAAA7J,SAzTA,SAAA7tB,EAAAp7C,GACA,OAAAqxE,GAAAr0E,KAAAo+C,EAAAp7C,GAAA,IAyTA8yE,GAAA1zB,GApPA,SAAAyT,GACA,IAAA71D,KAAAkD,UACA,OAAAwiB,IAEA,IAAAkkD,EACAxO,EACA/b,EAAAr/C,KAAA+pE,cAIA,cAFAlU,EAAAD,EAAAC,KAEA,YAAAA,GAAA,SAAAA,EAGA,OAFA+T,EAAA5pE,KAAAgqE,MAAA3qB,EAAA,MACA+b,EAAAp7D,KAAAiqE,QAAAsK,GAAA3K,GACA/T,GACA,mBAAAuF,EACA,qBAAAA,EAAA,EACA,kBAAAA,EAAA,QAKA,OADAwO,EAAA5pE,KAAAgqE,MAAAj3E,KAAAgN,MAAAy0E,GAAAx0E,KAAAiqE,UACApU,GACA,kBAAA+T,EAAA,EAAAvqB,EAAA,OACA,iBAAAuqB,EAAAvqB,EAAA,MACA,qBAAAuqB,EAAAvqB,EAAA,KACA,yBAAAuqB,EAAAvqB,EAAA,IACA,0BAAAuqB,EAAAvqB,EAAA,IAEA,yBAAAtsD,KAAAmB,MAAA,MAAA01E,GAAAvqB,EACA,kBAAAjZ,MAAA,gBAAAyvB,KAwNAigB,GAAAnB,kBACAmB,GAAAlB,aACAkB,GAAAjB,aACAiB,GAAAhB,WACAgB,GAAAf,UACAe,GAAAd,WACAc,GAAAb,YACAa,GAAAZ,cACAY,GAAAX,WACAW,GAAA5zB,QA3NA,WACA,OAAAliD,KAAAkD,UAIAlD,KAAA+pE,cACA,MAAA/pE,KAAAgqE,MACAhqE,KAAAiqE,QAAA,UACA,QAAA9V,EAAAn0D,KAAAiqE,QAAA,IANAvkD,KA0NAowD,GAAA5L,QAzTA,WACA,IAIArK,EAAAH,EAAAF,EAAAgK,EAAAuM,EAJA12B,EAAAr/C,KAAA+pE,cACAH,EAAA5pE,KAAAgqE,MACA5O,EAAAp7D,KAAAiqE,QACAhzD,EAAAjX,KAAA6X,MAwCA,OAnCAwnC,GAAA,GAAAuqB,GAAA,GAAAxO,GAAA,GACA/b,GAAA,GAAAuqB,GAAA,GAAAxO,GAAA,IACA/b,GAAA,MAAAi1B,GAAAE,GAAApZ,GAAAwO,GACAA,EAAA,EACAxO,EAAA,GAKAnkD,EAAAooC,eAAA,IAEAwgB,EAAA5L,EAAA5U,EAAA,KACApoC,EAAA4oD,UAAA,GAEAH,EAAAzL,EAAA4L,EAAA,IACA5oD,EAAAyoD,UAAA,GAEAF,EAAAvL,EAAAyL,EAAA,IACAzoD,EAAAuoD,QAAA,GAEAoK,GAAA3V,EAAAuL,EAAA,IAGAuW,EAAA9hB,EAAAsgB,GAAA3K,IACAxO,GAAA2a,EACAnM,GAAA0K,GAAAE,GAAAuB,IAGAvM,EAAAvV,EAAAmH,EAAA,IACAA,GAAA,GAEAnkD,EAAA2yD,OACA3yD,EAAAmkD,SACAnkD,EAAAuyD,QAEAxpE,MA8QA81E,GAAA/vE,MAjMA,WACA,OAAAolE,GAAAnrE,OAiMA81E,GAAA3hE,IA9LA,SAAA0hD,GAEA,OADAA,EAAAD,EAAAC,GACA71D,KAAAkD,UAAAlD,KAAA61D,EAAA,OAAAnwC,KA6LAowD,GAAAz2B,gBACAy2B,GAAAjW,WACAiW,GAAApW,WACAoW,GAAAtW,SACAsW,GAAAlM,QACAkM,GAAApM,MAjLA,WACA,OAAAzV,EAAAj0D,KAAA4pE,OAAA,IAiLAkM,GAAA1a,UACA0a,GAAAtM,SACAsM,GAAAjH,SA3GA,SAAAmH,GACA,IAAAh2E,KAAAkD,UACA,OAAAlD,KAAAk3D,aAAAO,cAGA,IAAAtG,EAAAnxD,KAAAk3D,aACAK,EA5DA,SAAA0e,EAAArH,EAAAzd,GACA,IAAA78C,EAAA62D,GAAA8K,GAAA93D,MACA0hD,EAAA9/D,GAAAuU,EAAA8tC,GAAA,MACAsd,EAAA3/D,GAAAuU,EAAA8tC,GAAA,MACAod,EAAAz/D,GAAAuU,EAAA8tC,GAAA,MACAwnB,EAAA7pE,GAAAuU,EAAA8tC,GAAA,MACAgZ,EAAAr7D,GAAAuU,EAAA8tC,GAAA,MACAonB,EAAAzpE,GAAAuU,EAAA8tC,GAAA,MAEAntD,EAAA4qE,GAAAwV,GAAA7T,IAAA,KAAA3B,IACAA,EAAAwV,GAAAjlF,GAAA,MAAAyvE,IACAH,GAAA,UACAA,EAAA2V,GAAAvgF,GAAA,MAAA4qE,IACAF,GAAA,UACAA,EAAA6V,GAAAllF,GAAA,MAAAqvE,IACAoK,GAAA,UACAA,EAAAyL,GAAAh5C,GAAA,MAAAutC,IACAxO,GAAA,UACAA,EAAAia,GAAAzT,GAAA,MAAAxG,IACAoO,GAAA,gBAAAA,GAKA,OAHAv0E,EAAA,GAAA25E,EACA35E,EAAA,IAAAghF,EAAA,EACAhhF,EAAA,GAAAk8D,EA3BA,SAAAnwD,EAAAkzD,EAAA0a,EAAA8D,EAAAvhB,GACA,OAAAA,EAAAkQ,aAAAnN,GAAA,IAAA0a,EAAA5tE,EAAA0xE,IA2BAxqE,MAAA,KAAAjT,GAoCAihF,CAAAl2E,MAAAg2E,EAAA7kB,GAMA,OAJA6kB,IACAze,EAAApG,EAAAyhB,YAAA5yE,KAAAu3D,IAGApG,EAAAwd,WAAApX,IAgGAue,GAAA5F,YAAAqF,GACAO,GAAArzE,SAAA8yE,GACAO,GAAAhwE,OAAAyvE,GACAO,GAAA3kB,UACA2kB,GAAA5e,cAEA4e,GAAAK,YAAAzmB,EAAA,sFAAA6lB,IACAO,GAAApJ,QAMA5V,EAAA,gBACAA,EAAA,mBAIAiC,GAAA,IAAAL,IACAK,GAAA,IAlzHA,wBAmzHAY,GAAA,aAAAvb,EAAA/zC,EAAA0sB,GACAA,EAAA47B,GAAA,IAAA59C,KAAA,IAAA3S,WAAAg8C,EAAA,OAEAub,GAAA,aAAAvb,EAAA/zC,EAAA0sB,GACAA,EAAA47B,GAAA,IAAA59C,KAAAo/C,EAAA/V,MAMAyS,EAAAulB,QAAA,SAz7IAzlB,EA27IAyT,GAEAvT,EAAA7oD,GAAAkmE,GACArd,EAAA/9D,IAl0DA,WAGA,OAAAs2E,GAAA,WAFA,GAAA9pE,MAAAC,KAAAC,UAAA,KAk0DAqxD,EAAA79D,IA7zDA,WAGA,OAAAo2E,GAAA,UAFA,GAAA9pE,MAAAC,KAAAC,UAAA,KA6zDAqxD,EAAA77C,IAxzDA,WACA,OAAAD,KAAAC,IAAAD,KAAAC,OAAA,IAAAD,MAwzDA87C,EAAAS,IAAAJ,EACAL,EAAA4f,KAnjBA,SAAAryB,GACA,OAAAgmB,GAAA,IAAAhmB,IAmjBAyS,EAAAuK,OAjcA,SAAAzyB,EAAA9hC,GACA,OAAAqrE,GAAAvpC,EAAA9hC,EAAA,WAicAgqD,EAAAE,SACAF,EAAAM,OAAAmR,GACAzR,EAAAmb,QAAA/Y,EACApC,EAAAv8C,SAAA62D,GACAta,EAAAmD,WACAnD,EAAAoN,SA/bA,SAAAmU,EAAAzpC,EAAA9hC,GACA,OAAAsrE,GAAAC,EAAAzpC,EAAA9hC,EAAA,aA+bAgqD,EAAAugB,UAvjBA,WACA,OAAAhN,GAAAl8D,MAAA,KAAA1I,WAAA4xE,aAujBAvgB,EAAAqG,WAAAqL,GACA1R,EAAAsZ,cACAtZ,EAAAsK,YAvcA,SAAAxyB,EAAA9hC,GACA,OAAAqrE,GAAAvpC,EAAA9hC,EAAA,gBAucAgqD,EAAAkN,YA5bA,SAAAqU,EAAAzpC,EAAA9hC,GACA,OAAAsrE,GAAAC,EAAAzpC,EAAA9hC,EAAA,gBA4bAgqD,EAAA2R,gBACA3R,EAAAwlB,aA9kFA,SAAA1zE,EAAAo0B,GACA,SAAAA,EAAA,CACA,IAAAo6B,EAAAmlB,EAAAjhB,EAAAiL,GAGA,OADAgW,EAAAnU,GAAAx/D,MAEA0yD,EAAAihB,EAAA5T,SAEA3rC,EAAAq+B,EAAAC,EAAAt+B,IACAo6B,EAAA,IAAAoE,EAAAx+B,IACA4rC,aAAAX,GAAAr/D,GACAq/D,GAAAr/D,GAAAwuD,EAGAmR,GAAA3/D,QAGA,MAAAq/D,GAAAr/D,KACA,MAAAq/D,GAAAr/D,GAAAggE,aACAX,GAAAr/D,GAAAq/D,GAAAr/D,GAAAggE,aACiB,MAAAX,GAAAr/D,WACjBq/D,GAAAr/D,IAIA,OAAAq/D,GAAAr/D,IAsjFAkuD,EAAAmR,QA3hFA,WACA,OAAAz5D,EAAAy5D,KA2hFAnR,EAAAmN,cApcA,SAAAoU,EAAAzpC,EAAA9hC,GACA,OAAAsrE,GAAAC,EAAAzpC,EAAA9hC,EAAA,kBAocAgqD,EAAA+E,iBACA/E,EAAA0lB,qBA/LA,SAAAC,GACA,YAAA32E,IAAA22E,EACAz2E,GAEA,uBACAA,GAAAy2E,GACA,IA0LA3lB,EAAA4lB,sBApLA,SAAAC,EAAAC,GACA,YAAA92E,IAAAw1E,GAAAqB,UAGA72E,IAAA82E,EACAtB,GAAAqB,IAEArB,GAAAqB,GAAAC,EACA,MAAAD,IACArB,GAAA7T,GAAAmV,EAAA,IAEA,KA0KA9lB,EAAAwd,eA73CA,SAAAuI,EAAA5hE,GACA,IAAA4zB,EAAAguC,EAAAhuC,KAAA5zB,EAAA,WACA,OAAA4zB,GAAA,aACAA,GAAA,aACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,yBAu3CAioB,EAAAxxD,UAAA6uE,GAGArd,EAAAgmB,UAAA,CACAC,eAAA,mBACAC,uBAAA,sBACAC,kBAAA,0BACA9c,KAAA,aACA+c,KAAA,QACAC,aAAA,WACAC,QAAA,eACA5c,KAAA,aACAN,MAAA,WAGApJ,EAp/IgEzB","file":"/js/dashboard.js","sourcesContent":["/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"R89r\";","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import Chart from 'chart.js';\n\n// require('fullcalendar');\n\nclass Dashboard {\n    static init() {\n        //sms chart\n        var chartElement = document.getElementById('smsChart');\n        if(chartElement) {\n            var config = {\n                type: 'bar',\n                data: {\n                    labels: window.smsLabel,\n                    datasets: [{\n                        label: \"SMS\",\n                        backgroundColor: \"#82E0AA\",\n                        borderColor: \"#58D68D\",\n                        pointBorderColor: \"#28B463\",\n                        pointBackgroundColor: \"#2ECC71\",\n                        pointHoverBackgroundColor: \"#82E0AA\",\n                        pointHoverBorderColor: \"#58D68D\",\n                        pointBorderWidth: 1,\n                        data: window.smsValue\n                    }]\n                },\n                options: {\n                    responsive: true,\n                    tooltips: {\n                        mode: 'index',\n                    },\n                    hover: {\n                        mode: 'index'\n                    },\n                    legend: {\n                        display: false\n                    }\n\n                }\n            };\n            var ctx = chartElement.getContext('2d');\n            new Chart(ctx, config);\n        }\n        var chartElement = document.getElementById('accountChart');\n        if(chartElement) {\n            var config = {\n                type: 'line',\n                data: {\n                    labels: [\"Jan,2019\", \"Feb,2019\", \"March,2019\", \"Apr,2019\", \"May,2019\", \"Jun,2019\", \"Jul,2019\", \"Augt,2019\", \"Sep,2019\", \"Oct,2019\", \"Nov,2019\", \"Dec,2019\"],\n                    datasets: [{\n                        label: \"Income\",\n                        backgroundColor: \"#82E0AA\",\n                        borderColor: \"#58D68D\",\n                        pointBorderColor: \"#28B463\",\n                        pointBackgroundColor: \"#2ECC71\",\n                        pointHoverBackgroundColor: \"#82E0AA\",\n                        pointHoverBorderColor: \"#58D68D\",\n                        pointBorderWidth: 1,\n                        data: [\n                            52662545.31,\n                            32271914.00,\n                            20651857.91,\n                            31068496.90,\n                            26380827.16,\n                            405006.00,\n                            0.00,\n                            0.00,\n                            0.00,\n                            0.00,\n                            0.00,\n                            0.00\n                        ]\n                    }, {\n                        label: \"Expence\",\n                        backgroundColor: \"#F1948A\",\n                        borderColor: \"#EC7063\",\n                        pointBorderColor: \"#CB4335\",\n                        pointBackgroundColor: \"#E74C3C\",\n                        pointHoverBackgroundColor: \"#F1948A\",\n                        pointHoverBorderColor: \"#EC7063\",\n                        pointBorderWidth: 1,\n                        data: [\n                            57301010.42,\n                            32220143.00,\n                            20669087.91,\n                            27231585.68,\n                            25534450.16,\n                            20450.00,\n                            0.00,\n                            0.00,\n                            0.00,\n                            0.00,\n                            0.00,\n                            0.00\n                        ]\n                    }]\n                },\n                options: {\n                    responsive: true,\n                    tooltips: {\n                        mode: 'index',\n                    },\n                    hover: {\n                        mode: 'index'\n                    }\n\n                }\n            };\n            var ctx = chartElement.getContext('2d');\n           new Chart(ctx, config);\n        }\n\n        var chartElement = document.getElementById('attendanceChart');\n        if(chartElement) {\n            var config = {\n                type: 'line',\n                data: {\n                    labels:  window.attendanceLabel,\n                    datasets: [{\n                        label: 'Present',\n                        data: window.presentData,\n                        backgroundColor: \"rgb(54, 162, 235)\",\n                        borderColor: \"rgb(54, 162, 235)\",\n                        fill: false,\n                        pointRadius: 6,\n                        pointHoverRadius: 20,\n                    }, {\n                        label: 'Absent',\n                        data: window.absentData,\n                        backgroundColor: \"rgb(255, 99, 132)\",\n                        borderColor: \"rgb(255, 99, 132)\",\n                        fill: false,\n                        pointRadius: 6,\n                        pointHoverRadius: 20,\n\n                    }\n                    ]\n                },\n                options: {\n                    responsive: true,\n                    legend: {\n                        position: 'top',\n                    },\n                    hover: {\n                        mode: 'index'\n                    },\n                    scales: {\n                        xAxes: [{\n                            display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Class'\n                            }\n                        }],\n                        yAxes: [{\n                            display: true,\n                            scaleLabel: {\n                                display: true,\n                                labelString: 'Attendace'\n                            }\n                        }]\n                    },\n                    title: {\n                        display: false,\n                        text: 'Students Today\\'s Attendance'\n                    }\n                }\n            };\n            var ctx = chartElement.getContext('2d');\n            new Chart(ctx, config);\n        }\n\n\n        // $('#calendar').fullCalendar({\n        //     defaultView: 'month',\n        //     height: 300,\n        //     contentHeight: 250\n        // });\n\n    }\n}\n\nwindow.Dashboard = Dashboard;\n","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            var args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays (ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        var weekdays = isArray(this._weekdays) ? this._weekdays :\n            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];\n        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)\n            : (m) ? weekdays[m.day()] : weekdays;\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000;\n    var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n    var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return (dividend % divisor + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf (units) {\n        var time;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n                break;\n            case 'isoWeek':\n                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':   return months;\n                case 'quarter': return months / 3;\n                case 'year':    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asQuarters     = makeAs('Q');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asQuarters     = asQuarters;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.24.0';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n"],"sourceRoot":""}