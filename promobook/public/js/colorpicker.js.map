{"version":3,"sources":["webpack:///./node_modules/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.js","webpack:///./resources/assets/backend/js/colorpicker.js"],"names":["__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__webpack_require__","undefined","jq","$","Color","val","predefinedColors","fallbackColor","fallbackFormat","hexNumberSignPrefix","this","fallbackValue","parse","value","origFormat","colors","extend","webColors","h","setColor","String","s","b","a","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","transparent","prototype","constructor","getValue","setValue","_sanitizeNumber","isNaN","toLowerCase","match","Math","ceil","parseFloat","isTransparent","strVal","trim","rgbaIsTransparent","rgba","r","g","parsedColor","format","setHue","setSaturation","setBrightness","setAlpha","round","parseInt","toRGB","R","G","B","X","C","arguments","length","abs","toHex","ignoreFormat","prefix","rgb","hexStr","toString","slice","toHSL","H","L","S","l","toAlias","c","original","alias","RGBtoHSB","V","max","min","HueToRGB","p","q","HSLtoRGB","tr","tg","tb","values","that","result","isAlias","each","stringParsers","i","parser","re","exec","apply","getValidFallbackFormat","Object","formats","indexOf","forceRawValue","translateAlias","execResult","colorNameToHex","name","defaults","horizontal","inline","color","input","container","component","sliders","saturation","maxLeft","maxTop","callLeft","callTop","hue","alpha","slidersHorz","template","align","customClass","colorSelectors","Colorpicker","element","options","addClass","data","find","is","createColor","updateInput","updateData","disabled","$picker","picker","colorpicker","selectorsContainer","$btn","css","on","event","preventDefault","append","show","proxy","e","target","currentTarget","mousedown","appendTo","keyup.colorpicker","keyup","input.colorpicker","change","focus.colorpicker","focusout.colorpicker","hide","click.colorpicker","attr","update","trigger","destroy","remove","removeData","off","removeClass","type","reposition","window","document","body","offset","left","outerWidth","top","outerHeight","isDisabled","hasInput","stopPropagation","mousedown.colorpicker","parents","prop","updatePicker","sl","icns","eq","end","updateComponent","icn","backgroundColor","force","defaultValue","disable","enable","currentSlider","mousePointer","pageX","pageY","originalEvent","touches","zone","closest","guide","style","mousemove.colorpicker","mousemove","touchmove.colorpicker","mouseup.colorpicker","mouseup","touchend.colorpicker","call","keyCode","fn","option","apiArgs","Array","isSingleElement","returnValue","$jq","$this","inst","isFunction","exports","module","require"],"mappings":"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","file":"/js/colorpicker.js","sourcesContent":["/*!\n * Bootstrap Colorpicker v2.5.2\n * https://itsjavi.com/bootstrap-colorpicker/\n *\n * Originally written by (c) 2012 Stefan Petre\n * Licensed under the Apache License v2.0\n * http://www.apache.org/licenses/LICENSE-2.0.txt\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([\"jquery\"], function(jq) {\n      return (factory(jq));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"jquery\"));\n  } else if (jQuery && !jQuery.fn.colorpicker) {\n    factory(jQuery);\n  }\n}(this, function($) {\n  'use strict';\n  /**\n   * Color manipulation helper class\n   *\n   * @param {Object|String} [val]\n   * @param {Object} [predefinedColors]\n   * @param {String|null} [fallbackColor]\n   * @param {String|null} [fallbackFormat]\n   * @param {Boolean} [hexNumberSignPrefix]\n   * @constructor\n   */\n  var Color = function(\n    val, predefinedColors, fallbackColor, fallbackFormat, hexNumberSignPrefix) {\n    this.fallbackValue = fallbackColor ?\n      (\n        (typeof fallbackColor === 'string') ?\n        this.parse(fallbackColor) :\n        fallbackColor\n      ) :\n      null;\n\n    this.fallbackFormat = fallbackFormat ? fallbackFormat : 'rgba';\n\n    this.hexNumberSignPrefix = hexNumberSignPrefix === true;\n\n    this.value = this.fallbackValue;\n\n    this.origFormat = null; // original string format\n\n    this.predefinedColors = predefinedColors ? predefinedColors : {};\n\n    // We don't want to share aliases across instances so we extend new object\n    this.colors = $.extend({}, Color.webColors, this.predefinedColors);\n\n    if (val) {\n      if (typeof val.h !== 'undefined') {\n        this.value = val;\n      } else {\n        this.setColor(String(val));\n      }\n    }\n\n    if (!this.value) {\n      // Initial value is always black if no arguments are passed or val is empty\n      this.value = {\n        h: 0,\n        s: 0,\n        b: 0,\n        a: 1\n      };\n    }\n  };\n\n  Color.webColors = { // 140 predefined colors from the HTML Colors spec\n    \"aliceblue\": \"f0f8ff\",\n    \"antiquewhite\": \"faebd7\",\n    \"aqua\": \"00ffff\",\n    \"aquamarine\": \"7fffd4\",\n    \"azure\": \"f0ffff\",\n    \"beige\": \"f5f5dc\",\n    \"bisque\": \"ffe4c4\",\n    \"black\": \"000000\",\n    \"blanchedalmond\": \"ffebcd\",\n    \"blue\": \"0000ff\",\n    \"blueviolet\": \"8a2be2\",\n    \"brown\": \"a52a2a\",\n    \"burlywood\": \"deb887\",\n    \"cadetblue\": \"5f9ea0\",\n    \"chartreuse\": \"7fff00\",\n    \"chocolate\": \"d2691e\",\n    \"coral\": \"ff7f50\",\n    \"cornflowerblue\": \"6495ed\",\n    \"cornsilk\": \"fff8dc\",\n    \"crimson\": \"dc143c\",\n    \"cyan\": \"00ffff\",\n    \"darkblue\": \"00008b\",\n    \"darkcyan\": \"008b8b\",\n    \"darkgoldenrod\": \"b8860b\",\n    \"darkgray\": \"a9a9a9\",\n    \"darkgreen\": \"006400\",\n    \"darkkhaki\": \"bdb76b\",\n    \"darkmagenta\": \"8b008b\",\n    \"darkolivegreen\": \"556b2f\",\n    \"darkorange\": \"ff8c00\",\n    \"darkorchid\": \"9932cc\",\n    \"darkred\": \"8b0000\",\n    \"darksalmon\": \"e9967a\",\n    \"darkseagreen\": \"8fbc8f\",\n    \"darkslateblue\": \"483d8b\",\n    \"darkslategray\": \"2f4f4f\",\n    \"darkturquoise\": \"00ced1\",\n    \"darkviolet\": \"9400d3\",\n    \"deeppink\": \"ff1493\",\n    \"deepskyblue\": \"00bfff\",\n    \"dimgray\": \"696969\",\n    \"dodgerblue\": \"1e90ff\",\n    \"firebrick\": \"b22222\",\n    \"floralwhite\": \"fffaf0\",\n    \"forestgreen\": \"228b22\",\n    \"fuchsia\": \"ff00ff\",\n    \"gainsboro\": \"dcdcdc\",\n    \"ghostwhite\": \"f8f8ff\",\n    \"gold\": \"ffd700\",\n    \"goldenrod\": \"daa520\",\n    \"gray\": \"808080\",\n    \"green\": \"008000\",\n    \"greenyellow\": \"adff2f\",\n    \"honeydew\": \"f0fff0\",\n    \"hotpink\": \"ff69b4\",\n    \"indianred\": \"cd5c5c\",\n    \"indigo\": \"4b0082\",\n    \"ivory\": \"fffff0\",\n    \"khaki\": \"f0e68c\",\n    \"lavender\": \"e6e6fa\",\n    \"lavenderblush\": \"fff0f5\",\n    \"lawngreen\": \"7cfc00\",\n    \"lemonchiffon\": \"fffacd\",\n    \"lightblue\": \"add8e6\",\n    \"lightcoral\": \"f08080\",\n    \"lightcyan\": \"e0ffff\",\n    \"lightgoldenrodyellow\": \"fafad2\",\n    \"lightgrey\": \"d3d3d3\",\n    \"lightgreen\": \"90ee90\",\n    \"lightpink\": \"ffb6c1\",\n    \"lightsalmon\": \"ffa07a\",\n    \"lightseagreen\": \"20b2aa\",\n    \"lightskyblue\": \"87cefa\",\n    \"lightslategray\": \"778899\",\n    \"lightsteelblue\": \"b0c4de\",\n    \"lightyellow\": \"ffffe0\",\n    \"lime\": \"00ff00\",\n    \"limegreen\": \"32cd32\",\n    \"linen\": \"faf0e6\",\n    \"magenta\": \"ff00ff\",\n    \"maroon\": \"800000\",\n    \"mediumaquamarine\": \"66cdaa\",\n    \"mediumblue\": \"0000cd\",\n    \"mediumorchid\": \"ba55d3\",\n    \"mediumpurple\": \"9370d8\",\n    \"mediumseagreen\": \"3cb371\",\n    \"mediumslateblue\": \"7b68ee\",\n    \"mediumspringgreen\": \"00fa9a\",\n    \"mediumturquoise\": \"48d1cc\",\n    \"mediumvioletred\": \"c71585\",\n    \"midnightblue\": \"191970\",\n    \"mintcream\": \"f5fffa\",\n    \"mistyrose\": \"ffe4e1\",\n    \"moccasin\": \"ffe4b5\",\n    \"navajowhite\": \"ffdead\",\n    \"navy\": \"000080\",\n    \"oldlace\": \"fdf5e6\",\n    \"olive\": \"808000\",\n    \"olivedrab\": \"6b8e23\",\n    \"orange\": \"ffa500\",\n    \"orangered\": \"ff4500\",\n    \"orchid\": \"da70d6\",\n    \"palegoldenrod\": \"eee8aa\",\n    \"palegreen\": \"98fb98\",\n    \"paleturquoise\": \"afeeee\",\n    \"palevioletred\": \"d87093\",\n    \"papayawhip\": \"ffefd5\",\n    \"peachpuff\": \"ffdab9\",\n    \"peru\": \"cd853f\",\n    \"pink\": \"ffc0cb\",\n    \"plum\": \"dda0dd\",\n    \"powderblue\": \"b0e0e6\",\n    \"purple\": \"800080\",\n    \"red\": \"ff0000\",\n    \"rosybrown\": \"bc8f8f\",\n    \"royalblue\": \"4169e1\",\n    \"saddlebrown\": \"8b4513\",\n    \"salmon\": \"fa8072\",\n    \"sandybrown\": \"f4a460\",\n    \"seagreen\": \"2e8b57\",\n    \"seashell\": \"fff5ee\",\n    \"sienna\": \"a0522d\",\n    \"silver\": \"c0c0c0\",\n    \"skyblue\": \"87ceeb\",\n    \"slateblue\": \"6a5acd\",\n    \"slategray\": \"708090\",\n    \"snow\": \"fffafa\",\n    \"springgreen\": \"00ff7f\",\n    \"steelblue\": \"4682b4\",\n    \"tan\": \"d2b48c\",\n    \"teal\": \"008080\",\n    \"thistle\": \"d8bfd8\",\n    \"tomato\": \"ff6347\",\n    \"turquoise\": \"40e0d0\",\n    \"violet\": \"ee82ee\",\n    \"wheat\": \"f5deb3\",\n    \"white\": \"ffffff\",\n    \"whitesmoke\": \"f5f5f5\",\n    \"yellow\": \"ffff00\",\n    \"yellowgreen\": \"9acd32\",\n    \"transparent\": \"transparent\"\n  };\n\n  Color.prototype = {\n    constructor: Color,\n    colors: {}, // merged web and predefined colors\n    predefinedColors: {},\n    /**\n     * @return {Object}\n     */\n    getValue: function() {\n      return this.value;\n    },\n    /**\n     * @param {Object} val\n     */\n    setValue: function(val) {\n      this.value = val;\n    },\n    _sanitizeNumber: function(val) {\n      if (typeof val === 'number') {\n        return val;\n      }\n      if (isNaN(val) || (val === null) || (val === '') || (val === undefined)) {\n        return 1;\n      }\n      if (val === '') {\n        return 0;\n      }\n      if (typeof val.toLowerCase !== 'undefined') {\n        if (val.match(/^\\./)) {\n          val = \"0\" + val;\n        }\n        return Math.ceil(parseFloat(val) * 100) / 100;\n      }\n      return 1;\n    },\n    isTransparent: function(strVal) {\n      if (!strVal || !(typeof strVal === 'string' || strVal instanceof String)) {\n        return false;\n      }\n      strVal = strVal.toLowerCase().trim();\n      return (strVal === 'transparent') || (strVal.match(/#?00000000/)) || (strVal.match(/(rgba|hsla)\\(0,0,0,0?\\.?0\\)/));\n    },\n    rgbaIsTransparent: function(rgba) {\n      return ((rgba.r === 0) && (rgba.g === 0) && (rgba.b === 0) && (rgba.a === 0));\n    },\n    // parse a string to HSB\n    /**\n     * @protected\n     * @param {String} strVal\n     * @returns {boolean} Returns true if it could be parsed, false otherwise\n     */\n    setColor: function(strVal) {\n      strVal = strVal.toLowerCase().trim();\n      if (strVal) {\n        if (this.isTransparent(strVal)) {\n          this.value = {\n            h: 0,\n            s: 0,\n            b: 0,\n            a: 0\n          };\n          return true;\n        } else {\n          var parsedColor = this.parse(strVal);\n          if (parsedColor) {\n            this.value = this.value = {\n              h: parsedColor.h,\n              s: parsedColor.s,\n              b: parsedColor.b,\n              a: parsedColor.a\n            };\n            if (!this.origFormat) {\n              this.origFormat = parsedColor.format;\n            }\n          } else if (this.fallbackValue) {\n            // if parser fails, defaults to fallbackValue if defined, otherwise the value won't be changed\n            this.value = this.fallbackValue;\n          }\n        }\n      }\n      return false;\n    },\n    setHue: function(h) {\n      this.value.h = 1 - h;\n    },\n    setSaturation: function(s) {\n      this.value.s = s;\n    },\n    setBrightness: function(b) {\n      this.value.b = 1 - b;\n    },\n    setAlpha: function(a) {\n      this.value.a = Math.round((parseInt((1 - a) * 100, 10) / 100) * 100) / 100;\n    },\n    toRGB: function(h, s, b, a) {\n      if (arguments.length === 0) {\n        h = this.value.h;\n        s = this.value.s;\n        b = this.value.b;\n        a = this.value.a;\n      }\n\n      h *= 360;\n      var R, G, B, X, C;\n      h = (h % 360) / 60;\n      C = b * s;\n      X = C * (1 - Math.abs(h % 2 - 1));\n      R = G = B = b - C;\n\n      h = ~~h;\n      R += [C, X, 0, 0, X, C][h];\n      G += [X, C, C, X, 0, 0][h];\n      B += [0, 0, X, C, C, X][h];\n\n      return {\n        r: Math.round(R * 255),\n        g: Math.round(G * 255),\n        b: Math.round(B * 255),\n        a: a\n      };\n    },\n    toHex: function(ignoreFormat, h, s, b, a) {\n      if (arguments.length <= 1) {\n        h = this.value.h;\n        s = this.value.s;\n        b = this.value.b;\n        a = this.value.a;\n      }\n\n      var prefix = '#';\n      var rgb = this.toRGB(h, s, b, a);\n\n      if (this.rgbaIsTransparent(rgb)) {\n        return 'transparent';\n      }\n\n      if (!ignoreFormat) {\n        prefix = (this.hexNumberSignPrefix ? '#' : '');\n      }\n\n      var hexStr = prefix + (\n          (1 << 24) +\n          (parseInt(rgb.r) << 16) +\n          (parseInt(rgb.g) << 8) +\n          parseInt(rgb.b))\n        .toString(16)\n        .slice(1);\n\n      return hexStr;\n    },\n    toHSL: function(h, s, b, a) {\n      if (arguments.length === 0) {\n        h = this.value.h;\n        s = this.value.s;\n        b = this.value.b;\n        a = this.value.a;\n      }\n\n      var H = h,\n        L = (2 - s) * b,\n        S = s * b;\n      if (L > 0 && L <= 1) {\n        S /= L;\n      } else {\n        S /= 2 - L;\n      }\n      L /= 2;\n      if (S > 1) {\n        S = 1;\n      }\n      return {\n        h: isNaN(H) ? 0 : H,\n        s: isNaN(S) ? 0 : S,\n        l: isNaN(L) ? 0 : L,\n        a: isNaN(a) ? 0 : a\n      };\n    },\n    toAlias: function(r, g, b, a) {\n      var c, rgb = (arguments.length === 0) ? this.toHex(true) : this.toHex(true, r, g, b, a);\n\n      // support predef. colors in non-hex format too, as defined in the alias itself\n      var original = this.origFormat === 'alias' ? rgb : this.toString(false, this.origFormat);\n\n      for (var alias in this.colors) {\n        c = this.colors[alias].toLowerCase().trim();\n        if ((c === rgb) || (c === original)) {\n          return alias;\n        }\n      }\n      return false;\n    },\n    RGBtoHSB: function(r, g, b, a) {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n\n      var H, S, V, C;\n      V = Math.max(r, g, b);\n      C = V - Math.min(r, g, b);\n      H = (C === 0 ? null :\n        V === r ? (g - b) / C :\n        V === g ? (b - r) / C + 2 :\n        (r - g) / C + 4\n      );\n      H = ((H + 360) % 6) * 60 / 360;\n      S = C === 0 ? 0 : C / V;\n      return {\n        h: this._sanitizeNumber(H),\n        s: S,\n        b: V,\n        a: this._sanitizeNumber(a)\n      };\n    },\n    HueToRGB: function(p, q, h) {\n      if (h < 0) {\n        h += 1;\n      } else if (h > 1) {\n        h -= 1;\n      }\n      if ((h * 6) < 1) {\n        return p + (q - p) * h * 6;\n      } else if ((h * 2) < 1) {\n        return q;\n      } else if ((h * 3) < 2) {\n        return p + (q - p) * ((2 / 3) - h) * 6;\n      } else {\n        return p;\n      }\n    },\n    HSLtoRGB: function(h, s, l, a) {\n      if (s < 0) {\n        s = 0;\n      }\n      var q;\n      if (l <= 0.5) {\n        q = l * (1 + s);\n      } else {\n        q = l + s - (l * s);\n      }\n\n      var p = 2 * l - q;\n\n      var tr = h + (1 / 3);\n      var tg = h;\n      var tb = h - (1 / 3);\n\n      var r = Math.round(this.HueToRGB(p, q, tr) * 255);\n      var g = Math.round(this.HueToRGB(p, q, tg) * 255);\n      var b = Math.round(this.HueToRGB(p, q, tb) * 255);\n      return [r, g, b, this._sanitizeNumber(a)];\n    },\n    /**\n     * @param {String} strVal\n     * @returns {Object} Object containing h,s,b,a,format properties or FALSE if failed to parse\n     */\n    parse: function(strVal) {\n      if (typeof strVal !== 'string') {\n        return this.fallbackValue;\n      }\n      if (arguments.length === 0) {\n        return false;\n      }\n\n      var that = this,\n        result = false,\n        isAlias = (typeof this.colors[strVal] !== 'undefined'),\n        values, format;\n\n      if (isAlias) {\n        strVal = this.colors[strVal].toLowerCase().trim();\n      }\n\n      $.each(this.stringParsers, function(i, parser) {\n        var match = parser.re.exec(strVal);\n        values = match && parser.parse.apply(that, [match]);\n        if (values) {\n          result = {};\n          format = (isAlias ? 'alias' : (parser.format ? parser.format : that.getValidFallbackFormat()));\n          if (format.match(/hsla?/)) {\n            result = that.RGBtoHSB.apply(that, that.HSLtoRGB.apply(that, values));\n          } else {\n            result = that.RGBtoHSB.apply(that, values);\n          }\n          if (result instanceof Object) {\n            result.format = format;\n          }\n          return false; // stop iterating\n        }\n        return true;\n      });\n      return result;\n    },\n    getValidFallbackFormat: function() {\n      var formats = [\n        'rgba', 'rgb', 'hex', 'hsla', 'hsl'\n      ];\n      if (this.origFormat && (formats.indexOf(this.origFormat) !== -1)) {\n        return this.origFormat;\n      }\n      if (this.fallbackFormat && (formats.indexOf(this.fallbackFormat) !== -1)) {\n        return this.fallbackFormat;\n      }\n\n      return 'rgba'; // By default, return a format that will not lose the alpha info\n    },\n    /**\n     *\n     * @param {string} [format] (default: rgba)\n     * @param {boolean} [translateAlias] Return real color for pre-defined (non-standard) aliases (default: false)\n     * @param {boolean} [forceRawValue] Forces hashtag prefix when getting hex color (default: false)\n     * @returns {String}\n     */\n    toString: function(forceRawValue, format, translateAlias) {\n      format = format || this.origFormat || this.fallbackFormat;\n      translateAlias = translateAlias || false;\n\n      var c = false;\n\n      switch (format) {\n        case 'rgb':\n          {\n            c = this.toRGB();\n            if (this.rgbaIsTransparent(c)) {\n              return 'transparent';\n            }\n            return 'rgb(' + c.r + ',' + c.g + ',' + c.b + ')';\n          }\n          break;\n        case 'rgba':\n          {\n            c = this.toRGB();\n            return 'rgba(' + c.r + ',' + c.g + ',' + c.b + ',' + c.a + ')';\n          }\n          break;\n        case 'hsl':\n          {\n            c = this.toHSL();\n            return 'hsl(' + Math.round(c.h * 360) + ',' + Math.round(c.s * 100) + '%,' + Math.round(c.l * 100) + '%)';\n          }\n          break;\n        case 'hsla':\n          {\n            c = this.toHSL();\n            return 'hsla(' + Math.round(c.h * 360) + ',' + Math.round(c.s * 100) + '%,' + Math.round(c.l * 100) + '%,' + c.a + ')';\n          }\n          break;\n        case 'hex':\n          {\n            return this.toHex(forceRawValue);\n          }\n          break;\n        case 'alias':\n          {\n            c = this.toAlias();\n\n            if (c === false) {\n              return this.toString(forceRawValue, this.getValidFallbackFormat());\n            }\n\n            if (translateAlias && !(c in Color.webColors) && (c in this.predefinedColors)) {\n              return this.predefinedColors[c];\n            }\n\n            return c;\n          }\n        default:\n          {\n            return c;\n          }\n          break;\n      }\n    },\n    // a set of RE's that can match strings and generate color tuples.\n    // from John Resig color plugin\n    // https://github.com/jquery/jquery-color/\n    stringParsers: [{\n      re: /rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*?\\)/,\n      format: 'rgb',\n      parse: function(execResult) {\n        return [\n          execResult[1],\n          execResult[2],\n          execResult[3],\n          1\n        ];\n      }\n    }, {\n      re: /rgb\\(\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*?\\)/,\n      format: 'rgb',\n      parse: function(execResult) {\n        return [\n          2.55 * execResult[1],\n          2.55 * execResult[2],\n          2.55 * execResult[3],\n          1\n        ];\n      }\n    }, {\n      re: /rgba\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d*(?:\\.\\d+)?)\\s*)?\\)/,\n      format: 'rgba',\n      parse: function(execResult) {\n        return [\n          execResult[1],\n          execResult[2],\n          execResult[3],\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /rgba\\(\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d*(?:\\.\\d+)?)\\s*)?\\)/,\n      format: 'rgba',\n      parse: function(execResult) {\n        return [\n          2.55 * execResult[1],\n          2.55 * execResult[2],\n          2.55 * execResult[3],\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /hsl\\(\\s*(\\d*(?:\\.\\d+)?)\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*?\\)/,\n      format: 'hsl',\n      parse: function(execResult) {\n        return [\n          execResult[1] / 360,\n          execResult[2] / 100,\n          execResult[3] / 100,\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /hsla\\(\\s*(\\d*(?:\\.\\d+)?)\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*,\\s*(\\d*(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d*(?:\\.\\d+)?)\\s*)?\\)/,\n      format: 'hsla',\n      parse: function(execResult) {\n        return [\n          execResult[1] / 360,\n          execResult[2] / 100,\n          execResult[3] / 100,\n          execResult[4]\n        ];\n      }\n    }, {\n      re: /#?([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,\n      format: 'hex',\n      parse: function(execResult) {\n        return [\n          parseInt(execResult[1], 16),\n          parseInt(execResult[2], 16),\n          parseInt(execResult[3], 16),\n          1\n        ];\n      }\n    }, {\n      re: /#?([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/,\n      format: 'hex',\n      parse: function(execResult) {\n        return [\n          parseInt(execResult[1] + execResult[1], 16),\n          parseInt(execResult[2] + execResult[2], 16),\n          parseInt(execResult[3] + execResult[3], 16),\n          1\n        ];\n      }\n    }],\n    colorNameToHex: function(name) {\n      if (typeof this.colors[name.toLowerCase()] !== 'undefined') {\n        return this.colors[name.toLowerCase()];\n      }\n      return false;\n    }\n  };\n\n  /*\n   * Default plugin options\n   */\n  var defaults = {\n    horizontal: false, // horizontal mode layout ?\n    inline: false, //forces to show the colorpicker as an inline element\n    color: false, //forces a color\n    format: false, //forces a format\n    input: 'input', // children input selector\n    container: false, // container selector\n    component: '.add-on, .input-group-addon', // children component selector\n    fallbackColor: false, // fallback color value. null = keeps current color.\n    fallbackFormat: 'hex', // fallback color format\n    hexNumberSignPrefix: true, // put a '#' (number sign) before hex strings\n    sliders: {\n      saturation: {\n        maxLeft: 100,\n        maxTop: 100,\n        callLeft: 'setSaturation',\n        callTop: 'setBrightness'\n      },\n      hue: {\n        maxLeft: 0,\n        maxTop: 100,\n        callLeft: false,\n        callTop: 'setHue'\n      },\n      alpha: {\n        maxLeft: 0,\n        maxTop: 100,\n        callLeft: false,\n        callTop: 'setAlpha'\n      }\n    },\n    slidersHorz: {\n      saturation: {\n        maxLeft: 100,\n        maxTop: 100,\n        callLeft: 'setSaturation',\n        callTop: 'setBrightness'\n      },\n      hue: {\n        maxLeft: 100,\n        maxTop: 0,\n        callLeft: 'setHue',\n        callTop: false\n      },\n      alpha: {\n        maxLeft: 100,\n        maxTop: 0,\n        callLeft: 'setAlpha',\n        callTop: false\n      }\n    },\n    template: '<div class=\"colorpicker dropdown-menu\">' +\n      '<div class=\"colorpicker-saturation\"><i><b></b></i></div>' +\n      '<div class=\"colorpicker-hue\"><i></i></div>' +\n      '<div class=\"colorpicker-alpha\"><i></i></div>' +\n      '<div class=\"colorpicker-color\"><div /></div>' +\n      '<div class=\"colorpicker-selectors\"></div>' +\n      '</div>',\n    align: 'right',\n    customClass: null, // custom class added to the colorpicker element\n    colorSelectors: null // custom color aliases\n  };\n\n  /**\n   * Colorpicker component class\n   *\n   * @param {Object|String} element\n   * @param {Object} options\n   * @constructor\n   */\n  var Colorpicker = function(element, options) {\n    this.element = $(element).addClass('colorpicker-element');\n    this.options = $.extend(true, {}, defaults, this.element.data(), options);\n    this.component = this.options.component;\n    this.component = (this.component !== false) ? this.element.find(this.component) : false;\n    if (this.component && (this.component.length === 0)) {\n      this.component = false;\n    }\n    this.container = (this.options.container === true) ? this.element : this.options.container;\n    this.container = (this.container !== false) ? $(this.container) : false;\n\n    // Is the element an input? Should we search inside for any input?\n    this.input = this.element.is('input') ? this.element : (this.options.input ?\n      this.element.find(this.options.input) : false);\n    if (this.input && (this.input.length === 0)) {\n      this.input = false;\n    }\n    // Set HSB color\n    this.color = this.createColor(this.options.color !== false ? this.options.color : this.getValue());\n\n    this.format = this.options.format !== false ? this.options.format : this.color.origFormat;\n\n    if (this.options.color !== false) {\n      this.updateInput(this.color);\n      this.updateData(this.color);\n    }\n\n    this.disabled = false;\n\n    // Setup picker\n    var $picker = this.picker = $(this.options.template);\n    if (this.options.customClass) {\n      $picker.addClass(this.options.customClass);\n    }\n    if (this.options.inline) {\n      $picker.addClass('colorpicker-inline colorpicker-visible');\n    } else {\n      $picker.addClass('colorpicker-hidden');\n    }\n    if (this.options.horizontal) {\n      $picker.addClass('colorpicker-horizontal');\n    }\n    if (\n      (['rgba', 'hsla', 'alias'].indexOf(this.format) !== -1) ||\n      this.options.format === false ||\n      this.getValue() === 'transparent'\n    ) {\n      $picker.addClass('colorpicker-with-alpha');\n    }\n    if (this.options.align === 'right') {\n      $picker.addClass('colorpicker-right');\n    }\n    if (this.options.inline === true) {\n      $picker.addClass('colorpicker-no-arrow');\n    }\n    if (this.options.colorSelectors) {\n      var colorpicker = this,\n        selectorsContainer = colorpicker.picker.find('.colorpicker-selectors');\n\n      if (selectorsContainer.length > 0) {\n        $.each(this.options.colorSelectors, function(name, color) {\n          var $btn = $('<i />')\n            .addClass('colorpicker-selectors-color')\n            .css('background-color', color)\n            .data('class', name).data('alias', name);\n\n          $btn.on('mousedown.colorpicker touchstart.colorpicker', function(event) {\n            event.preventDefault();\n            colorpicker.setValue(\n              colorpicker.format === 'alias' ? $(this).data('alias') : $(this).css('background-color')\n            );\n          });\n          selectorsContainer.append($btn);\n        });\n        selectorsContainer.show().addClass('colorpicker-visible');\n      }\n    }\n\n    // Prevent closing the colorpicker when clicking on itself\n    $picker.on('mousedown.colorpicker touchstart.colorpicker', $.proxy(function(e) {\n      if (e.target === e.currentTarget) {\n        e.preventDefault();\n      }\n    }, this));\n\n    // Bind click/tap events on the sliders\n    $picker.find('.colorpicker-saturation, .colorpicker-hue, .colorpicker-alpha')\n      .on('mousedown.colorpicker touchstart.colorpicker', $.proxy(this.mousedown, this));\n\n    $picker.appendTo(this.container ? this.container : $('body'));\n\n    // Bind other events\n    if (this.input !== false) {\n      this.input.on({\n        'keyup.colorpicker': $.proxy(this.keyup, this)\n      });\n      this.input.on({\n        'input.colorpicker': $.proxy(this.change, this)\n      });\n      if (this.component === false) {\n        this.element.on({\n          'focus.colorpicker': $.proxy(this.show, this)\n        });\n      }\n      if (this.options.inline === false) {\n        this.element.on({\n          'focusout.colorpicker': $.proxy(this.hide, this)\n        });\n      }\n    }\n\n    if (this.component !== false) {\n      this.component.on({\n        'click.colorpicker': $.proxy(this.show, this)\n      });\n    }\n\n    if ((this.input === false) && (this.component === false)) {\n      this.element.on({\n        'click.colorpicker': $.proxy(this.show, this)\n      });\n    }\n\n    // for HTML5 input[type='color']\n    if ((this.input !== false) && (this.component !== false) && (this.input.attr('type') === 'color')) {\n\n      this.input.on({\n        'click.colorpicker': $.proxy(this.show, this),\n        'focus.colorpicker': $.proxy(this.show, this)\n      });\n    }\n    this.update();\n\n    $($.proxy(function() {\n      this.element.trigger('create');\n    }, this));\n  };\n\n  Colorpicker.Color = Color;\n\n  Colorpicker.prototype = {\n    constructor: Colorpicker,\n    destroy: function() {\n      this.picker.remove();\n      this.element.removeData('colorpicker', 'color').off('.colorpicker');\n      if (this.input !== false) {\n        this.input.off('.colorpicker');\n      }\n      if (this.component !== false) {\n        this.component.off('.colorpicker');\n      }\n      this.element.removeClass('colorpicker-element');\n      this.element.trigger({\n        type: 'destroy'\n      });\n    },\n    reposition: function() {\n      if (this.options.inline !== false || this.options.container) {\n        return false;\n      }\n      var type = this.container && this.container[0] !== window.document.body ? 'position' : 'offset';\n      var element = this.component || this.element;\n      var offset = element[type]();\n      if (this.options.align === 'right') {\n        offset.left -= this.picker.outerWidth() - element.outerWidth();\n      }\n      this.picker.css({\n        top: offset.top + element.outerHeight(),\n        left: offset.left\n      });\n    },\n    show: function(e) {\n      if (this.isDisabled()) {\n        // Don't show the widget if it's disabled (the input)\n        return;\n      }\n      this.picker.addClass('colorpicker-visible').removeClass('colorpicker-hidden');\n      this.reposition();\n      $(window).on('resize.colorpicker', $.proxy(this.reposition, this));\n      if (e && (!this.hasInput() || this.input.attr('type') === 'color')) {\n        if (e.stopPropagation && e.preventDefault) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n      if ((this.component || !this.input) && (this.options.inline === false)) {\n        $(window.document).on({\n          'mousedown.colorpicker': $.proxy(this.hide, this)\n        });\n      }\n      this.element.trigger({\n        type: 'showPicker',\n        color: this.color\n      });\n    },\n    hide: function(e) {\n      if ((typeof e !== 'undefined') && e.target) {\n        // Prevent hide if triggered by an event and an element inside the colorpicker has been clicked/touched\n        if (\n          $(e.currentTarget).parents('.colorpicker').length > 0 ||\n          $(e.target).parents('.colorpicker').length > 0\n        ) {\n          return false;\n        }\n      }\n      this.picker.addClass('colorpicker-hidden').removeClass('colorpicker-visible');\n      $(window).off('resize.colorpicker', this.reposition);\n      $(window.document).off({\n        'mousedown.colorpicker': this.hide\n      });\n      this.update();\n      this.element.trigger({\n        type: 'hidePicker',\n        color: this.color\n      });\n    },\n    updateData: function(val) {\n      val = val || this.color.toString(false, this.format);\n      this.element.data('color', val);\n      return val;\n    },\n    updateInput: function(val) {\n      val = val || this.color.toString(false, this.format);\n      if (this.input !== false) {\n        this.input.prop('value', val);\n        this.input.trigger('change');\n      }\n      return val;\n    },\n    updatePicker: function(val) {\n      if (typeof val !== 'undefined') {\n        this.color = this.createColor(val);\n      }\n      var sl = (this.options.horizontal === false) ? this.options.sliders : this.options.slidersHorz;\n      var icns = this.picker.find('i');\n      if (icns.length === 0) {\n        return;\n      }\n      if (this.options.horizontal === false) {\n        sl = this.options.sliders;\n        icns.eq(1).css('top', sl.hue.maxTop * (1 - this.color.value.h)).end()\n          .eq(2).css('top', sl.alpha.maxTop * (1 - this.color.value.a));\n      } else {\n        sl = this.options.slidersHorz;\n        icns.eq(1).css('left', sl.hue.maxLeft * (1 - this.color.value.h)).end()\n          .eq(2).css('left', sl.alpha.maxLeft * (1 - this.color.value.a));\n      }\n      icns.eq(0).css({\n        'top': sl.saturation.maxTop - this.color.value.b * sl.saturation.maxTop,\n        'left': this.color.value.s * sl.saturation.maxLeft\n      });\n\n      this.picker.find('.colorpicker-saturation')\n        .css('backgroundColor', this.color.toHex(true, this.color.value.h, 1, 1, 1));\n\n      this.picker.find('.colorpicker-alpha')\n        .css('backgroundColor', this.color.toHex(true));\n\n      this.picker.find('.colorpicker-color, .colorpicker-color div')\n        .css('backgroundColor', this.color.toString(true, this.format));\n\n      return val;\n    },\n    updateComponent: function(val) {\n      var color;\n\n      if (typeof val !== 'undefined') {\n        color = this.createColor(val);\n      } else {\n        color = this.color;\n      }\n\n      if (this.component !== false) {\n        var icn = this.component.find('i').eq(0);\n        if (icn.length > 0) {\n          icn.css({\n            'backgroundColor': color.toString(true, this.format)\n          });\n        } else {\n          this.component.css({\n            'backgroundColor': color.toString(true, this.format)\n          });\n        }\n      }\n\n      return color.toString(false, this.format);\n    },\n    update: function(force) {\n      var val;\n      if ((this.getValue(false) !== false) || (force === true)) {\n        // Update input/data only if the current value is not empty\n        val = this.updateComponent();\n        this.updateInput(val);\n        this.updateData(val);\n        this.updatePicker(); // only update picker if value is not empty\n      }\n      return val;\n\n    },\n    setValue: function(val) { // set color manually\n      this.color = this.createColor(val);\n      this.update(true);\n      this.element.trigger({\n        type: 'changeColor',\n        color: this.color,\n        value: val\n      });\n    },\n    /**\n     * Creates a new color using the instance options\n     * @protected\n     * @param {String} val\n     * @returns {Color}\n     */\n    createColor: function(val) {\n      return new Color(\n        val ? val : null,\n        this.options.colorSelectors,\n        this.options.fallbackColor ? this.options.fallbackColor : this.color,\n        this.options.fallbackFormat,\n        this.options.hexNumberSignPrefix\n      );\n    },\n    getValue: function(defaultValue) {\n      defaultValue = (typeof defaultValue === 'undefined') ? this.options.fallbackColor : defaultValue;\n      var val;\n      if (this.hasInput()) {\n        val = this.input.val();\n      } else {\n        val = this.element.data('color');\n      }\n      if ((val === undefined) || (val === '') || (val === null)) {\n        // if not defined or empty, return default\n        val = defaultValue;\n      }\n      return val;\n    },\n    hasInput: function() {\n      return (this.input !== false);\n    },\n    isDisabled: function() {\n      return this.disabled;\n    },\n    disable: function() {\n      if (this.hasInput()) {\n        this.input.prop('disabled', true);\n      }\n      this.disabled = true;\n      this.element.trigger({\n        type: 'disable',\n        color: this.color,\n        value: this.getValue()\n      });\n      return true;\n    },\n    enable: function() {\n      if (this.hasInput()) {\n        this.input.prop('disabled', false);\n      }\n      this.disabled = false;\n      this.element.trigger({\n        type: 'enable',\n        color: this.color,\n        value: this.getValue()\n      });\n      return true;\n    },\n    currentSlider: null,\n    mousePointer: {\n      left: 0,\n      top: 0\n    },\n    mousedown: function(e) {\n      if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n        e.pageX = e.originalEvent.touches[0].pageX;\n        e.pageY = e.originalEvent.touches[0].pageY;\n      }\n      e.stopPropagation();\n      e.preventDefault();\n\n      var target = $(e.target);\n\n      //detect the slider and set the limits and callbacks\n      var zone = target.closest('div');\n      var sl = this.options.horizontal ? this.options.slidersHorz : this.options.sliders;\n      if (!zone.is('.colorpicker')) {\n        if (zone.is('.colorpicker-saturation')) {\n          this.currentSlider = $.extend({}, sl.saturation);\n        } else if (zone.is('.colorpicker-hue')) {\n          this.currentSlider = $.extend({}, sl.hue);\n        } else if (zone.is('.colorpicker-alpha')) {\n          this.currentSlider = $.extend({}, sl.alpha);\n        } else {\n          return false;\n        }\n        var offset = zone.offset();\n        //reference to guide's style\n        this.currentSlider.guide = zone.find('i')[0].style;\n        this.currentSlider.left = e.pageX - offset.left;\n        this.currentSlider.top = e.pageY - offset.top;\n        this.mousePointer = {\n          left: e.pageX,\n          top: e.pageY\n        };\n        //trigger mousemove to move the guide to the current position\n        $(window.document).on({\n          'mousemove.colorpicker': $.proxy(this.mousemove, this),\n          'touchmove.colorpicker': $.proxy(this.mousemove, this),\n          'mouseup.colorpicker': $.proxy(this.mouseup, this),\n          'touchend.colorpicker': $.proxy(this.mouseup, this)\n        }).trigger('mousemove');\n      }\n      return false;\n    },\n    mousemove: function(e) {\n      if (!e.pageX && !e.pageY && e.originalEvent && e.originalEvent.touches) {\n        e.pageX = e.originalEvent.touches[0].pageX;\n        e.pageY = e.originalEvent.touches[0].pageY;\n      }\n      e.stopPropagation();\n      e.preventDefault();\n      var left = Math.max(\n        0,\n        Math.min(\n          this.currentSlider.maxLeft,\n          this.currentSlider.left + ((e.pageX || this.mousePointer.left) - this.mousePointer.left)\n        )\n      );\n      var top = Math.max(\n        0,\n        Math.min(\n          this.currentSlider.maxTop,\n          this.currentSlider.top + ((e.pageY || this.mousePointer.top) - this.mousePointer.top)\n        )\n      );\n      this.currentSlider.guide.left = left + 'px';\n      this.currentSlider.guide.top = top + 'px';\n      if (this.currentSlider.callLeft) {\n        this.color[this.currentSlider.callLeft].call(this.color, left / this.currentSlider.maxLeft);\n      }\n      if (this.currentSlider.callTop) {\n        this.color[this.currentSlider.callTop].call(this.color, top / this.currentSlider.maxTop);\n      }\n      // Change format dynamically\n      // Only occurs if user choose the dynamic format by\n      // setting option format to false\n      if (\n        this.options.format === false &&\n        (this.currentSlider.callTop === 'setAlpha' ||\n          this.currentSlider.callLeft === 'setAlpha')\n      ) {\n\n        // Converting from hex / rgb to rgba\n        if (this.color.value.a !== 1) {\n          this.format = 'rgba';\n          this.color.origFormat = 'rgba';\n        }\n\n        // Converting from rgba to hex\n        else {\n          this.format = 'hex';\n          this.color.origFormat = 'hex';\n        }\n      }\n      this.update(true);\n\n      this.element.trigger({\n        type: 'changeColor',\n        color: this.color\n      });\n      return false;\n    },\n    mouseup: function(e) {\n      e.stopPropagation();\n      e.preventDefault();\n      $(window.document).off({\n        'mousemove.colorpicker': this.mousemove,\n        'touchmove.colorpicker': this.mousemove,\n        'mouseup.colorpicker': this.mouseup,\n        'touchend.colorpicker': this.mouseup\n      });\n      return false;\n    },\n    change: function(e) {\n      this.color = this.createColor(this.input.val());\n      // Change format dynamically\n      // Only occurs if user choose the dynamic format by\n      // setting option format to false\n      if (this.color.origFormat && this.options.format === false) {\n        this.format = this.color.origFormat;\n      }\n      if (this.getValue(false) !== false) {\n        this.updateData();\n        this.updateComponent();\n        this.updatePicker();\n      }\n\n      this.element.trigger({\n        type: 'changeColor',\n        color: this.color,\n        value: this.input.val()\n      });\n    },\n    keyup: function(e) {\n      if ((e.keyCode === 38)) {\n        if (this.color.value.a < 1) {\n          this.color.value.a = Math.round((this.color.value.a + 0.01) * 100) / 100;\n        }\n        this.update(true);\n      } else if ((e.keyCode === 40)) {\n        if (this.color.value.a > 0) {\n          this.color.value.a = Math.round((this.color.value.a - 0.01) * 100) / 100;\n        }\n        this.update(true);\n      }\n\n      this.element.trigger({\n        type: 'changeColor',\n        color: this.color,\n        value: this.input.val()\n      });\n    }\n  };\n\n  $.colorpicker = Colorpicker;\n\n  $.fn.colorpicker = function(option) {\n    var apiArgs = Array.prototype.slice.call(arguments, 1),\n      isSingleElement = (this.length === 1),\n      returnValue = null;\n\n    var $jq = this.each(function() {\n      var $this = $(this),\n        inst = $this.data('colorpicker'),\n        options = ((typeof option === 'object') ? option : {});\n\n      if (!inst) {\n        inst = new Colorpicker(this, options);\n        $this.data('colorpicker', inst);\n      }\n\n      if (typeof option === 'string') {\n        if ($.isFunction(inst[option])) {\n          returnValue = inst[option].apply(inst, apiArgs);\n        } else { // its a property ?\n          if (apiArgs.length) {\n            // set property\n            inst[option] = apiArgs[0];\n          }\n          returnValue = inst[option];\n        }\n      } else {\n        returnValue = $this;\n      }\n    });\n    return isSingleElement ? returnValue : $jq;\n  };\n\n  $.fn.colorpicker.constructor = Colorpicker;\n\n}));\n","require('bootstrap-colorpicker');\n"],"sourceRoot":""}